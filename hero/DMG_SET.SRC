;
;
;	    *** HERO DAMAGE CONTOROL ***
;
;



		XDEF	H1_DAMAGE_SET,H1_DEAD_SET
		XDEF	H2_DAMAGE_SET,H2_DEAD_SET
		XDEF	E1_DAMAGE_SET,E1_DEAD_SET
		XDEF	E2_DAMAGE_SET,E2_DEAD_SET
		XDEF	E3_DAMAGE_SET,E3_DEAD_SET
		XDEF	E4_DAMAGE_SET,E4_DEAD_SET
		XDEF	E5_DAMAGE_SET,E5_DEAD_SET
		XDEF	E6_DAMAGE_SET,E6_DEAD_SET
		XDEF	E7_DAMAGE_SET,E7_DEAD_SET
		XDEF	E8_DAMAGE_SET,E8_DEAD_SET
		XDEF	ALL_DEAD_SOUND,RIKI_SOUND_CUT

		XREF	?A5
;by SUB
		XREF	SET_SOUND
;by GAME_SUB
		XREF	RANDOM_EFFECT

		SECT	HERO,,C

		INCLUDE	LABEL.INC
		INCLUDE	HFLAG.INC
		INCLUDE	HERO_STP.INC
		INCLUDE	ACT_No.INC
		INCLUDE	ACT_GRP.INC
		INCLUDE	CTRL_No.INC
		INCLUDE	SMACRO.INC
		INCLUDE	SCODE.INC



;
;
;	    *** DAMAGE PROGRAM ***
;
;

EFFECT_CUT:
		CMP.B	#RIKI_STEP,STEP1(A6)
		BEQ.S	RIKI_SOUND_CUT

		CMP.B	#COM_STEP,STEP1(A6)
		BEQ	COM_SOUND_CUT

		RTS

RIKI_SOUND_CUT:
		MOVE.W	HERO_TYPE(A6),D0
		ADD.W	D0,D0
		MOVE.W	RIKI_CUT_CODE(PC,D0.W),D0
		JSR.S	SET_SOUND
		RTS

RIKI_CUT_CODE:
		DC.W	S_RYO_STOP1
		DC.W	S_ROBART_STOP1
		DC.W	S_TODO_OYAZI_STOP1
		DC.W	S_JACK_BIG_STOP1
		DC.W	S_LIE_STOP1
		DC.W	S_KING_STOP1
		DC.W	S_MICKY_STOP1
		DC.W	S_JON_STOP1
		DC.W	S_JACK_BIG_STOP1
		DC.W	S_TODO_OYAZI_STOP1

COM_SOUND_CUT:
		MOVE.W	HERO_TYPE(A6),D0
		ADD.W	D0,D0
		TST.B	COUNTRY_CODE(A5)
		BEQ.S	COM_SOUND_CUT_1

		ADDQ.W	#1,D0
COM_SOUND_CUT_1:
		ADD.W	D0,D0
		MOVE.W	COM_CUT_CODE(PC,D0.W),D0
		JSR.S	SET_SOUND
		RTS

COM_CUT_CODE;:
		DC.W	S_RYO_STOP2
		DC.W	S_RYO_STOP2
		DC.W	S_ROBART_STOP2
		DC.W	S_ROBART_STOP2
		DC.W	S_TODO_STOP2
		DC.W	S_TODO_STOP2
		DC.W	S_JACK_STOP2
		DC.W	S_JACK_STOP2
		DC.W	S_LIE_STOP2
		DC.W	S_LIE_STOP2
		DC.W	S_KING_STOP2
		DC.W	S_KING_STOP2
		DC.W	S_MICKY_STOP2
		DC.W	S_MICKY_STOP2
		DC.W	S_JON_STOP2
		DC.W	S_JON_STOP3
		DC.W	S_BIG_STOP2
		DC.W	S_BIG_STOP2
		DC.W	S_OYAZI_STOP2
		DC.W	S_OYAZI_STOP2


DSN		MACRO	C1,C2
		DC.W	S_\1,S_\2
		ENDM

DAM_CONV:
;LIVE
;normal
		DC.B	00,01,02,03,05,06,07,08		face
		DC.B	10,11,12,13,10,11,12,13		body
		DC.B	15,16,17,18,15,16,17,18		foot
		DC.B	15,16,17,18,15,16,17,18		foot
;sit
		DC.B	20,21,22,23,20,21,22,23
		DC.B	20,21,22,23,20,21,22,23
		DC.B	20,21,22,23,20,21,22,23
		DC.B	20,21,22,23,20,21,22,23
;jump
		DC.B	25,25,26,26,25,25,26,26
		DC.B	25,25,26,26,25,25,26,26
		DC.B	25,25,26,26,25,25,26,26
		DC.B	25,25,26,26,25,25,26,26
;DEAD
;normal
		DC.B	04,04,28,28,09,09,29,29		face
		DC.B	14,14,30,30,14,14,30,30		body
		DC.B	19,19,31,31,19,19,31,31		foot
		DC.B	19,19,19,19,19,19,19,19		foot
;sit
		DC.B	24,24,32,32,24,24,32,32
		DC.B	24,24,32,32,24,24,32,32
		DC.B	24,24,32,32,24,24,32,32
		DC.B	24,24,32,32,24,24,32,32
;jump
		DC.B	27,27,27,27,27,27,27,27
		DC.B	27,27,27,27,27,27,27,27
		DC.B	27,27,27,27,27,27,27,27
		DC.B	27,27,27,27,27,27,27,27



DAMAGE_JUDGE:

;	position	0 face
;			1 body
;			2 foot
;			3 dummy
;	direction	0 temae
;			1 oku
;	level		0 
;			1 
;			2 
;			3 
;	condition	0 normal
;			1 sitdown
;			2 jump
;			3 dummy
;
;		out) D1	d0,1	level
;			d2	direction
;			d3,4	position
;			d5,6	condition


		MOVE.L	ANOTHER_PLAYER(A6),A0
		BSR	JUMP_ATTACK_STOP

		MOVEQ.L	#0,D1
		BSR	DJ_COND
		BSR	DJ_POSITION
		BSR	DJ_DIRECTION
		BSR	DJ_LEVEL
		BSR	DJ_SPECIAL
		BSR	DJ_LOCK_DEC
		RTS


DJ_LOCK_DEC:
		TST.B	DAMAGE_LOCK(A0)
		BLE.S	DJ_LOCK_DEC_1

		SUBQ.B	#1,DAMAGE_LOCK(A0)
DJ_LOCK_DEC_1:
		RTS

DJ_SPECIAL:
		MOVEQ.L	#0,D0
		MOVE.B	DEF_DAMAGE_ACT_TYPE(A6),D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		JMP	DJSP_TBL(PC,D0.W)
DJSP_TBL:
		RTS
		NOP
		JMP	DJSP_LOCK_OFF(PC)
		JMP	DJSP_RET100(PC)
		JMP	DJSP_RET100(PC)
		JMP	DJSP_RET100(PC)


DJSP_RET100:
		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	DJSP_RET100_1
DJSP_RET100_NON:
		RTS
DJSP_RET100_1:
		ADDQ.L	#8,SP
		CMP.B	#RET100_STEP,STEP1(A6)
		BEQ.S	DJSP_RET100_NON

		MOVE.W	#S_100RETU,D0
		JSR.S	SET_SOUND
		BSET.B	#BHS_JUMP,HERO_STATE(A6)
		MOVEQ.L	#1,D1
		MOVEP.W	WORK_N0(A0),D0
		CLR.B	D0
		AND.B	ACT_ATTR(A5,D0.W),D1
		EOR.B	#1,D1
		MOVE.W	#11111110B,D2
		AND.B	ACT_ATTR(A4),D2
		OR.B	D1,D2
		MOVE.B	D2,ACT_ATTR(A4)
		MOVE.W	HERO_TYPE(A6),D1
		ADD.W	D1,D1
		MOVE.W	RET100_ACT(PC,D1.W),HERO_ACT_No(A6)
		MOVE.B	#RET100_STEP,STEP1(A6)
		MOVE.B	#1,MASTER_REQUEST(A4)
		ADD.W	D1,D1
		MOVE.L	RET100_POS(PC,D1.W),ADRS1(A4)
		RTS
RET100_ACT:
		DC.W	C_H1_DAM_100
		DC.W	C_H2_DAM_100
		DC.W	C_E1_DAM_100
		DC.W	C_E2_DAM_100
		DC.W	C_E3_DAM_100
		DC.W	C_E4_DAM_100
		DC.W	C_E5_DAM_100
		DC.W	C_E6_DAM_100
		DC.W	C_E7_DAM_100
		DC.W	C_E8_DAM_100
RET100_POS:
		DC.L	RET100_H1
		DC.L	RET100_H2
		DC.L	RET100_E1
		DC.L	RET100_E2
		DC.L	RET100_E3
		DC.L	RET100_E4
		DC.L	RET100_E5
		DC.L	RET100_E6
		DC.L	RET100_E7
		DC.L	RET100_H1

RET100_H1:
		DC.W	64,3		0
		DC.W	64,33		1
		DC.W	43,66		2
		DC.W	64,3		3
		DC.W	64,33		4
		DC.W	43,66		5
		DC.W	74,3		6
		DC.W	75,33		7
		DC.W	53,66		8
		DC.W	48,0		9
RET100_H2:
		DC.W	64,3		0
		DC.W	64,33		1
		DC.W	53,66		2
		DC.W	64,3		3
		DC.W	64,33		4
		DC.W	53,66		5
		DC.W	74,3		6
		DC.W	74,33		7
		DC.W	59,67		8
		DC.W	48,0		9
RET100_E1:
		DC.W	64,3		0
		DC.W	64,33		1
		DC.W	53,66		2
		DC.W	64,3		3
		DC.W	64,33		4
		DC.W	53,66		5
		DC.W	74,3		6
		DC.W	75,33		7
		DC.W	52,66		8
		DC.W	48,0		9
RET100_E2:
		DC.W	64,3		0
		DC.W	64,33		1
		DC.W	43,66		2
		DC.W	64,3		3
		DC.W	64,33		4
		DC.W	43,66		5
		DC.W	74,3		6
		DC.W	75,33		7
		DC.W	52,66		8
		DC.W	48,0		9
RET100_E3:
		DC.W	64,11		0
		DC.W	64,41		1
		DC.W	43,74		2
		DC.W	64,11		3
		DC.W	64,41		4
		DC.W	43,74		5
		DC.W	74,11		6
		DC.W	75,41		7
		DC.W	52,76		8
		DC.W	48,0		9
RET100_E4:
		DC.W	64,3		0
		DC.W	64,33		1
		DC.W	43,66		2
		DC.W	64,3		3
		DC.W	64,33		4
		DC.W	43,66		5
		DC.W	74,3		6
		DC.W	75,33		7
		DC.W	52,66		8
		DC.W	48,0		9
RET100_E5:
		DC.W	64,-14		0
		DC.W	64,16		1
		DC.W	43,50		2
		DC.W	64,-14		3
		DC.W	64,16		4
		DC.W	43,50		5
		DC.W	74,-14		6
		DC.W	75,16		7
		DC.W	52,50		8
		DC.W	48,0		9
RET100_E6:
		DC.W	64,0		0
		DC.W	64,30		1
		DC.W	43,63		2
		DC.W	64,0		3
		DC.W	64,30		4
		DC.W	43,63		5
		DC.W	74,0		6
		DC.W	75,30		7
		DC.W	52,63		8
		DC.W	48,0		9
RET100_E7:
		DC.W	85,-9		0
		DC.W	86,21		1
		DC.W	63,54		2
		DC.W	85,-9		3
		DC.W	86,21		4
		DC.W	63,54		5
		DC.W	95,-9		6
		DC.W	96,21		7
		DC.W	73,54		8
		DC.W	48,0		9


DJSP_LOCK_OFF:
		TST.B	DAMAGE_LOCK(A0)
		BNE.S	DJSP_LOCK_OFF_1

		OR.B	#00000011B,D1		for jump damage
		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	DJSP_LOCK_OFF_1

		SUBQ.B	#1,D1
		MOVE.B	#32,DAMAGE_LEVEL2(A6)
DJSP_LOCK_OFF_1:
		RTS


JUMP_ATTACK_STOP:
		MOVE.W	ACT_CTRL(A0),D0
		CMP.W	#28H,D0		jump punch
		BEQ.S	JAS_OFF

		CMP.W	#38H,D0		jump kick
		BEQ.S	JAS_OFF

		CMP.W	#3AH,D0		triangle kick
		BEQ.S	JAS_OFF

		RTS
JAS_OFF:
		MOVE.W	JUMP_VX(A0),D1
		ROR.W	#1,D1
		AND.W	#1,D1
		MOVEP.W	WORK_N0(A0),D0
		CLR.B	D0
		MOVE.B	ACT_ATTR(A5,D0.W),D2
		AND.B	#1,D2
		EOR.B	D2,D1
		BNE.S	JAS_OFF_1

		CLR.W	JUMP_VX(A0)
		CLR.W	JUMP_AX(A0)
		CLR.L	VX(A0)
JAS_OFF_1:
		RTS

DJ_COND:
		TST.L	Z_POSITION(A6)
		BGT.S	DJ_COND_JUMP

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE.S	DJ_COND_JUMP

		BTST.B	#5,ACT_FLAG(A4)		offset jump
		BNE.S	DJ_COND_JUMP

		BTST.B	#BHS_DOWN,HERO_STATE(A6)
		BNE.S	DJ_COND_SIT

		RTS
DJ_COND_JUMP:
		MOVEQ.L	#01000000B,D1
		RTS
DJ_COND_SIT:
		MOVEQ.L	#00100000B,D1
		RTS


DJ_POSITION:
		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		BEQ.S	DJ_POS_BODY

		CMP.B	#1,D0
		BNE.S	DJ_POS_BODY

		RTS

DJ_POS_BODY:
		ADD.W	#00001000B,D1
		MOVE.W	TARGET_Y(A6),D0
		SUB.W	Z_POSITION(A6),D0
;		SUB.W	HERO_LOWER(A6),D0
		CMP.W	#40H,D0
		BGE.S	DJ_POS_BODY_1

		ADD.W	#00001000B,D1
DJ_POS_BODY_1:
		RTS

DJ_DIRECTION:
		BTST.B	#0,DEF_HIT_LR(A6)
		BNE.S	DJ_DIRECTION_1

		ADD.W	#00000100B,D1
DJ_DIRECTION_1:
		RTS

DJ_LEVEL:
		TST.B	DAMAGE_LOCK(A0)
		BNE.S	DJ_LEVEL_LOCK

		CMP.B	#8,DAMAGE_LEVEL(A6)
		BCS.S	DJ_LEVEL_1

		ADDQ.W	#1,D1

		CMP.B	#16,DAMAGE_LEVEL(A6)
		BCS.S	DJ_LEVEL_1

		ADDQ.W	#1,D1

		CMP.B	#24,DAMAGE_LEVEL(A6)
		BCS.S	DJ_LEVEL_1

		ADDQ.W	#1,D1
DJ_LEVEL_1:
		BSR	DJ_NEXT
		RTS
DJ_LEVEL_LOCK:
		MOVE.B	#1,NON_ADC(A6)
		BCLR.B	#BHS_DAMAGE,HERO_STATE(A6)
		AND.B	#7EH,HIT_OFF(A6)
;		SUBQ.B	#1,DAMAGE_LOCK(A0)
DJ_NEXT:
		MOVEP.W	WORK_N0(A0),D0
		CLR.B	D0
		MOVE.B	ACT_No(A5,D0.W),D7
		AND.B	#11000000B,D7
		CMP.B	#01000000B,D7
		BNE.S	DJ_LEVEL_LOCK_2

		MOVE.L	ADRS1(A5,D0.W),A1
		MOVE.W	(A1)+,HERO_ACT_No(A0)
		MOVE.L	A1,ADRS1(A5,D0.W)
		MOVE.B	#-1,MASTER_REQUEST(A5,D0.W)
DJ_LEVEL_LOCK_2:
		RTS


DMST_SET:
		MOVE.W	REG_D4(A5),ACT_CTRL(A6)
		MOVE.B	#CG_DAMAGE,ACT_GROUP(A6)
		JSR	EFFECT_CUT(PC)


		RTS


GARD_DAMAGE:
		MOVEQ.L	#00000011B,D0
		AND.W	D1,D0
		CMP.B	#3,D0
		BNE.S	GARD_DAMAGE_1

		RTS
GARD_DAMAGE_1:
		ADDQ.L	#4,SP
		MOVE.B	#1,ACT_DEC(A4)
		MOVE.W	ACT_No(A4),ADC_ACT_No(A6)
		MOVE.B	ACT_COUNT(A4),ADC_ACT_COUNT(A6)
		MOVE.B	#10000000B,ADC_COMMAND(A6)
		MOVEQ.L	#0,D0
		CMP.B	#8,DAMAGE_LEVEL2(A6)
		BCS.S	GARD_LEVEL_1

		ADDQ.W	#1,D0

		CMP.B	#16,DAMAGE_LEVEL2(A6)
		BCS.S	GARD_LEVEL_1

		ADDQ.W	#1,D0

		CMP.B	#24,DAMAGE_LEVEL2(A6)
		BCS.S	GARD_LEVEL_1

		ADDQ.W	#1,D0
GARD_LEVEL_1:
		MOVE.W	HERO_TYPE(A6),D1
		ADD.W	D1,D1
		ADD.W	D1,D1
		ADD.W	D0,D1
		ADD.W	D1,D1
		MOVE.B	GDB_DATA(PC,D1.W),D0
		MOVE.B	D0,ADC_VZ(A6)
		ADD.B	#12,D0
		MOVE.B	D0,ACT_TIMER(A4)
		MOVE.B	GDB_DATA+1(PC,D1.W),(A5)
		MOVE.W	(A5),ADC_VX(A6)
		MOVE.B	#DAMAGE3_STEP,STEP1(A6)
		RTS
GDB_DATA:
		DC.B	6,-4,14,-4,16,-4,16,-4		H1
		DC.B	6,-4,14,-4,16,-4,16,-4		H2
		DC.B	6,-4,14,-4,16,-4,16,-4		E1
		DC.B	10,-2,18,-2,22,-2,22,-2		E2
		DC.B	6,-4,14,-4,16,-4,16,-4		E3
		DC.B	6,-4,14,-4,16,-4,16,-4		E6
		DC.B	6,-4,14,-4,16,-4,16,-4		E5
		DC.B	6,-4,14,-4,16,-4,16,-4		E6
		DC.B	10,-2,18,-2,22,-2,22,-2		E7
		DC.B	6,-4,14,-4,16,-4,16,-4		E8





H1_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	H1_DS_1

		JSR	GARD_DAMAGE(PC)
H1_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DH1_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

H1_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DH1_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DH1_ACT_DATA:
;normal
		DC.W	C_H1_DAM_HLS			00
		DC.W	C_H1_DAM_HLM			01
		DC.W	C_H1_DAM_HLL			02
		DC.W	C_H1_DAM_HLJ+8000H		03
		DC.W	C_H1_DAM_OUT			04

		DC.W	C_H1_DAM_HRS			05
		DC.W	C_H1_DAM_HRM			06
		DC.W	C_H1_DAM_HRL			07
		DC.W	C_H1_DAM_HRJ+8000H		08
		DC.W	C_H1_DAM_OUT			09

		DC.W	C_H1_DAM_MS			10
		DC.W	C_H1_DAM_MM			11
		DC.W	C_H1_DAM_ML			12
		DC.W	C_H1_DAM_MJ+8000H		13
		DC.W	C_H1_DAM_OUT			14

		DC.W	C_H1_DAM_HLS			15
		DC.W	C_H1_DAM_HLM			16
		DC.W	C_H1_DAM_LLL			17
		DC.W	C_H1_DAM_HLJ+8000H		18
		DC.W	C_H1_DAM_OUT			19
;sit
		DC.W	C_H1_DAM_DS			20
		DC.W	C_H1_DAM_DM			21
		DC.W	C_H1_DAM_DL			22
		DC.W	C_H1_DAM_MJ+8000H		23
		DC.W	C_H1_DAM_OUT			24
;jump
		DC.W	C_H1_DAM_J+8000H		25
		DC.W	C_H1_DAM_J+8000H		26
		DC.W	C_H1_DAM_J			27

		DC.W	C_H1_DAM_HLJ			28
		DC.W	C_H1_DAM_HRJ			29
		DC.W	C_H1_DAM_MJ			30
		DC.W	C_H1_DAM_HLJ			31
		DC.W	C_H1_DAM_MJ			32


ALL_DAM_ACT_SET:
		CLR.B	DOWN_DMG(A6)
		MOVE.B	0(A1,D1.W),D0
		ADD.W	D0,D0
		MOVE.W	0(A2,D0.W),D0
		BPL.S	ALL_DAM_ACT_SET_1

		MOVE.B	#1,DOWN_DMG(A6)
		AND.W	#7FFFH,D0
ALL_DAM_ACT_SET_1:
		MOVE.W	D0,HERO_ACT_No(A6)
		MOVE.B	#DAMAGE2_STEP,STEP1(A6)
		MOVE.B	#1,MASTER_REQUEST(A4)
		RTS

ALL_DEAD_SOUND:
		MOVE.W	#S_PUNCH13,D0
		JSR.S	SET_SOUND

		MOVE.W	#S_PUNCH14,D0
		JSR.S	SET_SOUND
		RTS

ALL_DAMAGE_SOUND:
		TST.B	DEF_HIT_LR(A6)
		BPL.S	ADS_000

		MOVE.W	#S_ST_PUNCH,D0
		JSR.S	SET_SOUND
ADS_000:
		MOVEQ.L	#00011100B,D0
		AND.W	D1,D0
		TST.B	BEFOR_ATTACK(A0)
		BEQ.S	H1_DSND_1

		ADDQ.W	#2,D0
H1_DSND_1:
		ADD.W	D0,D0
		MOVE.W	H1_DS_DATA(PC,D0.W),D0
		JSR.S	SET_SOUND
		RTS


H1_DS_DATA:
;face
		DSN	PUNCH1,PUNCH2
		DSN	PUNCH7,PUNCH8
		DSN	PUNCH2,PUNCH1
		DSN	PUNCH8,PUNCH7
;body
		DSN	PUNCH3,PUNCH4
		DSN	PUNCH9,PUNCH10
		DSN	PUNCH4,PUNCH3
		DSN	PUNCH10,PUNCH9
;foot
		DSN	PUNCH5,PUNCH6
		DSN	PUNCH11,PUNCH12
		DSN	PUNCH6,PUNCH5
		DSN	PUNCH12,PUNCH11

		DSN	PUNCH5,PUNCH6
		DSN	PUNCH11,PUNCH10
		DSN	PUNCH6,PUNCH5
		DSN	PUNCH12,PUNCH11





H2_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	H2_DS_1

		JSR	GARD_DAMAGE(PC)
H2_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DH2_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

H2_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DH2_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DH2_ACT_DATA:
;normal
		DC.W	C_H2_DAM_HLS			00
		DC.W	C_H2_DAM_HLM			01
		DC.W	C_H2_DAM_HLL			02
		DC.W	C_H2_DAM_HLJ+8000H		03
		DC.W	C_H2_DAM_OUT			04

		DC.W	C_H2_DAM_HRS			05
		DC.W	C_H2_DAM_HRM			06
		DC.W	C_H2_DAM_HRL			07
		DC.W	C_H2_DAM_HRJ+8000H		08
		DC.W	C_H2_DAM_OUT			09

		DC.W	C_H2_DAM_MS			10
		DC.W	C_H2_DAM_MM			11
		DC.W	C_H2_DAM_ML			12
		DC.W	C_H2_DAM_MJ+8000H		13
		DC.W	C_H2_DAM_OUT			14

		DC.W	C_H2_DAM_HLS			15
		DC.W	C_H2_DAM_HLM			16
		DC.W	C_H2_DAM_HLL			17
		DC.W	C_H2_DAM_HLJ+8000H		18
		DC.W	C_H2_DAM_OUT			19
;sit
		DC.W	C_H2_DAM_DS			20
		DC.W	C_H2_DAM_DM			21
		DC.W	C_H2_DAM_DL			22
		DC.W	C_H2_DAM_MJ+8000H		23
		DC.W	C_H2_DAM_OUT			24
;jump
		DC.W	C_H2_DAM_J+8000H		25
		DC.W	C_H2_DAM_J+8000H		26
		DC.W	C_H2_DAM_J			27

		DC.W	C_H2_DAM_HLJ			28
		DC.W	C_H2_DAM_HRJ			29
		DC.W	C_H2_DAM_MJ			30
		DC.W	C_H2_DAM_HLJ			31
		DC.W	C_H2_DAM_MJ			32


E1_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E1_DS_1

		JSR	GARD_DAMAGE(PC)
E1_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE1_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E1_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE1_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DE1_ACT_DATA:
;normal
		DC.W	C_E1_DAM_HLS			00
		DC.W	C_E1_DAM_HLM			01
		DC.W	C_E1_DAM_HLL			02
		DC.W	C_E1_DAM_HLJ+8000H		03
		DC.W	C_E1_DAM_OUT			04

		DC.W	C_E1_DAM_HRS			05
		DC.W	C_E1_DAM_HRM			06
		DC.W	C_E1_DAM_HRL			07
		DC.W	C_E1_DAM_HRJ+8000H		08
		DC.W	C_E1_DAM_OUT			09

		DC.W	C_E1_DAM_MS			10
		DC.W	C_E1_DAM_MM			11
		DC.W	C_E1_DAM_ML			12
		DC.W	C_E1_DAM_MJ+8000H		13
		DC.W	C_E1_DAM_OUT			14

		DC.W	C_E1_DAM_LS			15
		DC.W	C_E1_DAM_LM			16
		DC.W	C_E1_DAM_LL			17
		DC.W	C_E1_DAM_LJ+8000H		18
		DC.W	C_E1_DAM_OUT			19
;sit
		DC.W	C_E1_DAM_DS			20
		DC.W	C_E1_DAM_DM			21
		DC.W	C_E1_DAM_DL			22
		DC.W	C_E1_DAM_MJ+8000H		23
		DC.W	C_E1_DAM_OUT			24
;jump
		DC.W	C_E1_DAM_J+8000H		25
		DC.W	C_E1_DAM_J+8000H		26
		DC.W	C_E1_DAM_J			27

		DC.W	C_E1_DAM_HLJ			28
		DC.W	C_E1_DAM_HRJ			29
		DC.W	C_E1_DAM_MJ			30
		DC.W	C_E1_DAM_LJ			31
		DC.W	C_E1_DAM_MJ			32


E2_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E2_DS_1

		JSR	GARD_DAMAGE(PC)
E2_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE2_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E2_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE2_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DE2_ACT_DATA:
;normal
		DC.W	C_E2_DAM_HLS			00
		DC.W	C_E2_DAM_HLM			01
		DC.W	C_E2_DAM_HLL			02
		DC.W	C_E2_DAM_J+8000H		03
		DC.W	C_E2_DAM_HLD			04

		DC.W	C_E2_DAM_HRS			05
		DC.W	C_E2_DAM_HRM			06
		DC.W	C_E2_DAM_HRL			07
		DC.W	C_E2_DAM_J+8000H		08
		DC.W	C_E2_DAM_HRD			09

		DC.W	C_E2_DAM_MS			10
		DC.W	C_E2_DAM_MM			11
		DC.W	C_E2_DAM_ML			12
		DC.W	C_E2_DAM_J+8000H		13
		DC.W	C_E2_DAM_MD			14

		DC.W	C_E2_DAM_HLS			15
		DC.W	C_E2_DAM_HLM			16
		DC.W	C_E2_DAM_LLL			17
		DC.W	C_E2_DAM_J+8000H		18
		DC.W	C_E2_DAM_HLD			19
;sit
		DC.W	C_E2_DAM_HRS			20
		DC.W	C_E2_DAM_HRM			21
		DC.W	C_E2_DAM_HRL			22
		DC.W	C_E2_DAM_J+8000H		23
		DC.W	C_E2_DAM_HRD			24
;jump
		DC.W	C_E2_DAM_J+8000H		25
		DC.W	C_E2_DAM_J+8000H		26
		DC.W	C_E2_DAM_J			27

		DC.W	C_E2_DAM_J			28
		DC.W	C_E2_DAM_J			29
		DC.W	C_E2_DAM_J			30
		DC.W	C_E2_DAM_J			31
		DC.W	C_E2_DAM_J			32



E3_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E3_DS_1

		JSR	GARD_DAMAGE(PC)
E3_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE3_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E3_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE3_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DE3_ACT_DATA:
;normal
		DC.W	C_E3_DAM_HRS			00
		DC.W	C_E3_DAM_HRM			01
		DC.W	C_E3_DAM_HRL			02
		DC.W	C_E3_DAM_J+8000H		03
		DC.W	C_E3_DAM_J			04

		DC.W	C_E3_DAM_HLS			05
		DC.W	C_E3_DAM_HLM			06
		DC.W	C_E3_DAM_HLL			07
		DC.W	C_E3_DAM_J+8000H		08
		DC.W	C_E3_DAM_J			09

		DC.W	C_E3_DAM_MS			10
		DC.W	C_E3_DAM_MM			11
		DC.W	C_E3_DAM_ML			12
		DC.W	C_E3_DAM_J+8000H		13
		DC.W	C_E3_DAM_J			14

		DC.W	C_E3_DAM_LS			15
		DC.W	C_E3_DAM_LM			16
		DC.W	C_E3_DAM_LL			17
		DC.W	C_E3_DAM_LJ+8000H		18
		DC.W	C_E3_DAM_LJ			19
;sit
		DC.W	C_E3_DAM_LS			20
		DC.W	C_E3_DAM_LM			21
		DC.W	C_E3_DAM_LL			22
		DC.W	C_E3_DAM_DL+8000H		23
		DC.W	C_E3_DAM_LJ			24
;jump
		DC.W	C_E3_DAM_J+8000H		25
		DC.W	C_E3_DAM_J+8000H		26
		DC.W	C_E3_DAM_J			27

		DC.W	C_E3_DAM_J			28
		DC.W	C_E3_DAM_J			29
		DC.W	C_E3_DAM_J			30
		DC.W	C_E3_DAM_LJ			31
		DC.W	C_E3_DAM_DL			32


E4_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E4_DS_1

		JSR	GARD_DAMAGE(PC)
E4_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE4_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E4_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE4_ACT_DATA(PC),A2
		BSR	HADAKA_CHECK
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

HADAKA_CHECK:
		MOVE.L	ANOTHER_PLAYER(A6),A0
		MOVE.W	WIN_ROUND+PLAYER_OFFSET(A0),D2
		TST.W	HERO_LIFE(A0)
		BEQ	NON_HADAKA

		ADDQ.W	#1,D2
		MOVE.W	ROUND_No(A5),D4
		ADDQ.W	#1,D4
		CMP.W	WIN_ROUND+PLAYER_OFFSET(A6),D2
		BLS	NON_HADAKA

		MOVE.W	MAX_ROUND(A5),D0
		CMP.W	D0,D4
		BHS	HCK_1

		CMP.W	WINNER_ROUND(A5),D2
		BHS	HCK_1

		SUB.W	WIN_ROUND+PLAYER_OFFSET(A6),D2
		SUB.W	D4,D0
		CMP.W	D0,D2
		BLS	NON_HADAKA
HCK_1:
		TST.B	DEF_HIT_TYPE_No(A6)
		BMI	TO_HADAKA

		CMP.W	#40H,ACT_CTRL(A0)
		BCC	TO_HADAKA
NON_HADAKA:
		RTS
TO_HADAKA:
		ADDQ.L	#4,SP
		MOVE.W	#1,KING_MUNE(A5)
		MOVE.B	0(A1,D1.W),D0
		ADD.W	D0,D0
		MOVE.W	0(A2,D0.W),D1
		MOVE.W	#C_E4_DAM_DOWNH,D0
		CMP.W	#C_E4_DAM_J,D1
		BNE.S	TO_HADAKA_1

		MOVE.W	#C_E4_DAM_JH,D0
TO_HADAKA_1:
		MOVE.W	D0,HERO_ACT_No(A6)
		MOVE.B	#DAMAGE2_STEP,STEP1(A6)
		MOVE.B	#1,MASTER_REQUEST(A4)
		RTS


DE4_ACT_DATA:
;normal
		DC.W	C_E4_DAM_HS			00
		DC.W	C_E4_DAM_HM			01
		DC.W	C_E4_DAM_HL			02
		DC.W	C_E4_DAM_J+8000H		03
		DC.W	C_E4_DAM_HD			04

		DC.W	C_E4_DAM_HS			05
		DC.W	C_E4_DAM_HM			06
		DC.W	C_E4_DAM_HL			07
		DC.W	C_E4_DAM_J+8000H		08
		DC.W	C_E4_DAM_HD			09

		DC.W	C_E4_DAM_MS			10
		DC.W	C_E4_DAM_MM			11
		DC.W	C_E4_DAM_ML			12
		DC.W	C_E4_DAM_J+8000H		13
		DC.W	C_E4_DAM_MD			14

		DC.W	C_E4_DAM_HS			15
		DC.W	C_E4_DAM_HM			16
		DC.W	C_E4_DAM_LL			17
		DC.W	C_E4_DAM_J+8000H		18
		DC.W	C_E4_DAM_HD			19
;sit
		DC.W	C_E4_DAM_DS			20
		DC.W	C_E4_DAM_DM			21
		DC.W	C_E4_DAM_DL			22
		DC.W	C_E4_DAM_J+8000H		23
		DC.W	C_E4_DAM_DD			24
;jump
		DC.W	C_E4_DAM_J+8000H		25
		DC.W	C_E4_DAM_J+8000H		26
		DC.W	C_E4_DAM_J			27

		DC.W	C_E4_DAM_J			28
		DC.W	C_E4_DAM_J			29
		DC.W	C_E4_DAM_J			30
		DC.W	C_E4_DAM_J			31
		DC.W	C_E4_DAM_J			32

E5_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E5_DS_1

		JSR	GARD_DAMAGE(PC)
E5_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE5_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E5_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE5_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DE5_ACT_DATA:
;normal
		DC.W	C_E5_DAM_HLS			00
		DC.W	C_E5_DAM_HLM			01
		DC.W	C_E5_DAM_HLL			02
		DC.W	C_E5_DAM_HJ+8000H		03
		DC.W	C_E5_DAM_HD			04

		DC.W	C_E5_DAM_HRS			05
		DC.W	C_E5_DAM_HRM			06
		DC.W	C_E5_DAM_HRL			07
		DC.W	C_E5_DAM_HJ+8000H		08
		DC.W	C_E5_DAM_HD			09

		DC.W	C_E5_DAM_MS			10
		DC.W	C_E5_DAM_MM			11
		DC.W	C_E5_DAM_ML			12
		DC.W	C_E5_DAM_MJ+8000H		13
		DC.W	C_E5_DAM_MD			14

		DC.W	C_E5_DAM_HLS			15
		DC.W	C_E5_DAM_HLS			16
		DC.W	C_E5_DAM_LLL			17
		DC.W	C_E5_DAM_L+8000H		18
		DC.W	C_E5_DAM_HD			19
;sit
		DC.W	C_E5_DAM_HLS			20
		DC.W	C_E5_DAM_HLM			21
		DC.W	C_E5_DAM_HLL			22
		DC.W	C_E5_DAM_L+8000H		23
		DC.W	C_E5_DAM_HD			24
;jump
		DC.W	C_E5_DAM_HJ+8000H		25
		DC.W	C_E5_DAM_HJ+8000H		26
		DC.W	C_E5_DAM_HJ			27

		DC.W	C_E5_DAM_HJ			28
		DC.W	C_E5_DAM_HJ			29
		DC.W	C_E5_DAM_MJ			30
		DC.W	C_E5_DAM_HJ			31
		DC.W	C_E5_DAM_MJ			32
E6_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E6_DS_1

		JSR	GARD_DAMAGE(PC)
E6_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE6_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E6_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE6_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DE6_ACT_DATA:
;normal
		DC.W	C_E6_DAM_HS			00
		DC.W	C_E6_DAM_HM			01
		DC.W	C_E6_DAM_HL			02
		DC.W	C_E6_DAM_HJ+8000H		03
		DC.W	C_E6_DAM_OUT			04

		DC.W	C_E6_DAM_HS			05
		DC.W	C_E6_DAM_HM			06
		DC.W	C_E6_DAM_HL			07
		DC.W	C_E6_DAM_HJ+8000H		08
		DC.W	C_E6_DAM_OUT			09

		DC.W	C_E6_DAM_MS			10
		DC.W	C_E6_DAM_MM			11
		DC.W	C_E6_DAM_ML			12
		DC.W	C_E6_DAM_MJ+8000H		13
		DC.W	C_E6_DAM_OUT			14

		DC.W	C_E6_DAM_LS			15
		DC.W	C_E6_DAM_LM			16
		DC.W	C_E6_DAM_LL			17
		DC.W	C_E6_DAM_LJ+8000H		18
		DC.W	C_E6_DAM_OUT			19
;sit
		DC.W	C_E6_DAM_DS			20
		DC.W	C_E6_DAM_DM			21
		DC.W	C_E6_DAM_DL			22
		DC.W	C_E6_DAM_DJ+8000H		23
		DC.W	C_E6_DAM_OUT			24
;jump
		DC.W	C_E6_DAM_J+8000H		25
		DC.W	C_E6_DAM_J+8000H		26
		DC.W	C_E6_DAM_J			27

		DC.W	C_E6_DAM_HJ			28
		DC.W	C_E6_DAM_HJ			29
		DC.W	C_E6_DAM_MJ			30
		DC.W	C_E6_DAM_LJ			31
		DC.W	C_E6_DAM_DJ			32


E7_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E7_DS_1

		JSR	GARD_DAMAGE(PC)
E7_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE7_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E7_DEAD_SET:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND
		BSR	ALL_DEAD_SOUND

		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE7_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

DE7_ACT_DATA:
;normal
		DC.W	C_E7_DAM_HS			00
		DC.W	C_E7_DAM_HM			01
		DC.W	C_E7_DAM_HL			02
		DC.W	C_E7_DAM_HJ+8000H		03
		DC.W	C_E7_DAM_HD			04

		DC.W	C_E7_DAM_HS			05
		DC.W	C_E7_DAM_HM			06
		DC.W	C_E7_DAM_HL			07
		DC.W	C_E7_DAM_HJ+8000H		08
		DC.W	C_E7_DAM_HD			09

		DC.W	C_E7_DAM_MS			10
		DC.W	C_E7_DAM_MM			11
		DC.W	C_E7_DAM_ML			12
		DC.W	C_E7_DAM_MJ+8000H		13
		DC.W	C_E7_DAM_MD			14

		DC.W	C_E7_DAM_LS			15
		DC.W	C_E7_DAM_LM			16
		DC.W	C_E7_DAM_LL			17
		DC.W	C_E7_DAM_LJ+8000H		18
		DC.W	C_E7_DAM_LD			19
;sit
		DC.W	C_E7_DAM_MS			20
		DC.W	C_E7_DAM_MM			21
		DC.W	C_E7_DAM_ML			22
		DC.W	C_E7_DAM_MJ+8000H		23
		DC.W	C_E7_DAM_MD			24
;jump
		DC.W	C_E7_DAM_JS+8000H		25
		DC.W	C_E7_DAM_JL+8000H		26
		DC.W	C_E7_DAM_JL			27

		DC.W	C_E7_DAM_HJ			28
		DC.W	C_E7_DAM_HJ			29
		DC.W	C_E7_DAM_MJ			30
		DC.W	C_E7_DAM_LJ			31
		DC.W	C_E7_DAM_MJ			32


E8_DAMAGE_SET:
		JSR	DMST_SET(PC)

		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		MOVEQ.L	#0FH,D0
		AND.B	DEF_HIT_TYPE_No(A6),D0
		CMP.B	#3,D0
		BNE.S	E8_DS_1

		JSR	GARD_DAMAGE(PC)
E8_DS_1:
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		LEA.L	DAM_CONV(PC),A1
		LEA.L	DE8_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS

E8_DEAD_SET:
		CLR.W	HERO_LIFE(A6)
		MOVE.B	#1,MASTER_REQUEST(A4)
		CLR.B	ACT_FLAG(A4)
		MOVE.B	#1,ACT_DEC(A4)
		JSR	DAMAGE_JUDGE(PC)
		BSR	ALL_DAMAGE_SOUND

		CMP.W	#12,STORY_STAGE(A5)
		BEQ.S	E8DS_1

		BSR	ALL_DEAD_SOUND
E8DS_1:
		LEA.L	DAM_CONV+60H(PC),A1
		LEA.L	DE8_ACT_DATA(PC),A2
		JSR	ALL_DAM_ACT_SET(PC)
		RTS


DE8_ACT_DATA:
;normal
		DC.W	C_E8_DAM_HLS			00
		DC.W	C_E8_DAM_HLM			01
		DC.W	C_E8_DAM_HLL			02
		DC.W	C_E8_DAM_HLJ+8000H		03
		DC.W	C_E8_DAM_OUT			04

		DC.W	C_E8_DAM_HRS			05
		DC.W	C_E8_DAM_HRM			06
		DC.W	C_E8_DAM_HRL			07
		DC.W	C_E8_DAM_HRJ+8000H		08
		DC.W	C_E8_DAM_OUT			09

		DC.W	C_E8_DAM_MS			10
		DC.W	C_E8_DAM_MM			11
		DC.W	C_E8_DAM_ML			12
		DC.W	C_E8_DAM_MJ+8000H		13
		DC.W	C_E8_DAM_OUT			14

		DC.W	C_E8_DAM_HLS			15
		DC.W	C_E8_DAM_HLM			16
		DC.W	C_E8_DAM_LLL			17
		DC.W	C_E8_DAM_HLJ+8000H		18
		DC.W	C_E8_DAM_OUT			19
;sit
		DC.W	C_E8_DAM_DS			20
		DC.W	C_E8_DAM_DM			21
		DC.W	C_E8_DAM_DL			22
		DC.W	C_E8_DAM_MJ+8000H		23
		DC.W	C_E8_DAM_OUT			24
;jump
		DC.W	C_E8_DAM_J+8000H		25
		DC.W	C_E8_DAM_J+8000H		26
		DC.W	C_E8_DAM_J			27

		DC.W	C_E8_DAM_HLJ			28
		DC.W	C_E8_DAM_HRJ			29
		DC.W	C_E8_DAM_MJ			30
		DC.W	C_E8_DAM_HLJ			31
		DC.W	C_E8_DAM_MJ			32






		INCLUDE	WORK.INC



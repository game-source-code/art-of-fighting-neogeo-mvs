************************************************************************
*								       *
*		044 [ART OF FIGHT]				       *
*			HERO MAIN PROGRAM			       *
*		by S.OKADA from 91/09/19 Thu 16:52		       *
*								       *
************************************************************************



		XDEF	HERO_1st,LM_HERO,DIR_CHANGE
		XDEF	Z_MINIMUM
		XDEF	ADC_SET

		XREF	?A5

;by MOVE_CHG
		XREF	MOVE_CHANGE,CTRL_CHANGE
		XREF	SPECIAL_CHECK
		XREF	ATTACK_OFF,ATTACK_OFF_LM
		XREF	TO_JUMP
;by HERO_CML
		XREF	HERO_STATE_DISP
;by HERO_PM
		XREF	STAR_MAKE
;by DMG_SET
		XREF	ALL_DEAD_SOUND,RIKI_SOUND_CUT
;by BACK
		XREF	GL
;by GAME_SUB
		XREF	GET_OBJ_BACK_ADRS
;by SUB
		XREF	PWORK_SET,SEC_TIME

		SECT	HERO,,C

		INCLUDE	GAME_SYM.INC
		INCLUDE	MACRO.INC
		INCLUDE	NEO_GEO.INC
		INCLUDE	LABEL.INC
		INCLUDE	HFLAG.INC
		INCLUDE	HERO_STP.INC
		INCLUDE	ACT_GRP.INC
		INCLUDE	CTRL_No.INC
		INCLUDE	ACT_No.INC

;
;	    *** hero's work configration ***
;

;HERO1,2	N0(0)	p_main		N0(1)	weak point T2	N0(5)	attack
;			 & gard	T3	N1(2)	head T1
;					N2(3)	body1 T0
;					N3(4)	shadow & body2 T0



HERO_1st:
		MOVE.W	#GL,Y_POSITION(A6)
		MOVEQ.L	#0,D0
		MOVE.L	D0,Z_POSITION(A6)
		MOVE.W	D0,X_POSITION+2(A6)
		MOVE.W	D0,Y_POSITION+2(A6)
		MOVE.L	D0,VX(A6)
		MOVE.L	D0,VY(A6)
		MOVE.L	D0,VZ(A6)
		MOVE.B	D0,STEP1(A6)
		MOVE.B	D0,STEP2(A6)
		MOVE.B	D0,HIT_OFF(A6)
		MOVE.B	D0,ATTACK_LEVEL(A6)
		MOVE.B	D0,SPECIAL_LEVER(A6)
		MOVE.B	D0,ATTACK_TIMER(A6)
		MOVE.B	D0,STATE(A6)
		MOVE.B	D0,RUNNING_CT(A6)
		MOVE.B	D0,ADC_COMMAND(A6)
		MOVE.W	D0,HERO_SPIRIT_D(A6)
		MOVE.B	D0,FLAG(A6)
		MOVE.W	D0,DIRECT_CTRL(A6)
		MOVE.B	D0,CTRL_FLAG(A6)
		MOVE.B	D0,BEFOR_ATTACK(A6)
		MOVE.B	D0,AREA_POSITION(A6)
		MOVE.B	D0,RIKI_TIMER(A6)
		MOVE.B	D0,REV_TRIG_OFF(A6)
		MOVE.B	D0,SPECIAL_USE(A6)
		MOVE.B	D0,WEAK_HIT(A6)
		MOVE.B	D0,DOWN_DMG(A6)
		MOVE.B	D0,TAMA_No(A6)
		MOVE.B	D0,HERO_STATE_ON(A6)
		MOVE.B	D0,PLAY_LEVER2(A6)
		MOVE.B	D0,NON_ADC(A6)
		MOVE.W	D0,RENDA_COUNT(A6)
		MOVE.B	#11B,FURA_COUNT(A6)
		MOVE.L	#1,HERO_SCORE_D(A6)
		MOVE.B	#-1,SPECIAL_No(A6)
		MOVE.B	#HS_AUTO,HERO_STATE(A6)
		MOVE.W	#200H,WORD_TIMER(A6)
		BSR	GAGE_SET

		MOVE.B	LIFE_GAGE(A6),D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		MOVE.W	D0,HERO_LIFE(A6)
		SUBQ.W	#1,D0
		MOVE.W	D0,HERO_LIFE_D(A6)
		MOVE.B	SPIRIT_GAGE(A6),D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		MOVE.B	D0,HERO_SPIRIT(A6)
		MOVE.B	D0,(A5)
		MOVE.W	(A5),RIKI_MAX(A6)
		CLR.B	HERO_SPIRIT+1(A6)

		BSR	HERO_MAIN_SET
		BSR	HERO_WEAK_SET
		BSR	HERO_HEAD_SET
		BSR	HERO_BODY1_SET
		BSR	HERO_BODY2_SET
		BSR	HERO_ATTACK_SET
		BSR	HERO_AREA_SET
		TST.B	HOW_TO_FLAG(A5)
		BNE.S	HERO_1st_001

		BSR	HERO_FACE_SET
		BSR	HERO_BALL_SET
HERO_1st_001:
		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)

		MOVE.B	#00001111B,D0
		AND.B	PHASE+1(A5),D0
		BEQ	HERO_1st_1

		MOVE.B	#HERO_STOP_STEP,D0
		BCLR.B	#BHS_AUTO,HERO_STATE(A6)
HERO_1st_1:
		MOVE.B	D0,STEP1(A6)
		MOVE.W	HERO_TYPE(A6),D0
		ADD.W	D0,D0
		MOVE.W	HERO_MIN_DIST(PC,D0.W),D0
		ADD.W	D0,MIN_DISTANCE(A5)
		RTS

HERO_MIN_DIST:
		DC.W	32,32
		DC.W	32,32,32,32
		DC.W	32,32,32,32


GAGE_SET:
		BTST.B	#6,PHASE+1(A5)
		BNE.S	GAGE_COM

		BTST.B	#4,PHASE+1(A5)
		BNE.S	GAGE_VS

		BTST.B	#BPS_COM_FLAG,PLAYER_STATE+PLAYER_OFFSET(A6)
		BEQ.S	GAGE_COM

		MOVE.B	STORY_LIFE(A5),LIFE_GAGE(A6)
		MOVE.B	STORY_SPIRIT(A5),SPIRIT_GAGE(A6)
		RTS
GAGE_VS:
		MOVE.B	#16,LIFE_GAGE(A6)
		MOVE.B	#16,SPIRIT_GAGE(A6)
		RTS
GAGE_COM:
		MOVE.W	HERO_TYPE(A6),D0
		ADD.W	D0,D0
		MOVE.B	GAGE_COMD(PC,D0.W),LIFE_GAGE(A6)
		MOVE.B	GAGE_COMD+1(PC,D0.W),SPIRIT_GAGE(A6)
		RTS
GAGE_COMD:
		DC.B	12,12		H1
		DC.B	12,12		H2

		DC.B	12,13		E1
		DC.B	14,12		E2
		DC.B	13,16		E3
		DC.B	13,14		E4
		DC.B	14,13		E5
		DC.B	14,13		E6
		DC.B	16,13		E7
		DC.B	16,16		E8


HERO_MAIN_SET:
		MOVEP.W	HERO_OBJ_START(A6),D0
		CLR.B	D0
		LEA.L	0(A5,D0.W),A0
		MOVE.L	#P_HERO*10000H,D2
		MOVE.B	#90H,D5			PRIORITY
		JSR.S	PWORK_SET

		LEA.L	(A0),A4
		MOVE.B	WORK_No(A6),MASTER_No(A4)
		MOVE.B	WORK_No(A4),WORK_N0(A6)
		MOVE.L	X_POSITION(A6),X_POSITION(A4)
		MOVE.L	Y_POSITION(A6),Y_POSITION(A4)
		MOVE.L	Z_POSITION(A6),Z_POSITION(A4)
		CLR.L	VX(A4)
		CLR.L	VY(A4)
		CLR.L	VZ(A4)
		MOVE.B	#0010B,HIT_ACTIVE(A4)
		MOVE.B	#0001B,HIT_PASSIVE(A4)
		MOVE.W	PLAYER_No+PLAYER_OFFSET(A6),D0
		OR.B	D0,ACT_ATTR(A4)
		MOVE.B	#3,HIT_TYPE_No(A4)
		RTS

HERO_WEAK_SET:
		LEA.L	100H(A0),A0
		LEA.L	(A0),A1
		MOVE.B	WORK_No(A4),MASTER_No(A0)
		MOVE.B	WORK_No(A0),WORK_N0(A4)
		MOVE.W	#P_HERO_WEAK,TYPE(A0)
		MOVE.B	#0010B,HIT_ACTIVE(A0)
		MOVE.B	#0001B,HIT_PASSIVE(A0)
		MOVE.B	#2,HIT_TYPE_No(A0)
		MOVEQ.L	#0,D0
		MOVE.B	D0,HIT_FLAG(A0)
		MOVE.L	D0,HIT_OFS_X(A0)
		MOVE.L	D0,HIT_LEFT(A0)
		MOVE.L	D0,HIT_UPPER(A0)
		RTS

HERO_HEAD_SET:
		LEA.L	100H(A0),A0
		MOVE.B	WORK_No(A4),MASTER_No(A0)
		MOVE.B	WORK_No(A0),WORK_N1(A4)
		MOVE.W	#P_HERO_HEAD,TYPE(A0)
		MOVE.B	#0010B,HIT_ACTIVE(A0)
		MOVE.B	#0001B,HIT_PASSIVE(A0)
		MOVE.B	#1,HIT_TYPE_No(A0)
		MOVEQ.L	#0,D0
		MOVE.W	D0,ACT_No(A0)
		MOVE.B	D0,HIT_FLAG(A0)
		MOVE.L	D0,HIT_OFS_X(A0)
		MOVE.L	D0,HIT_LEFT(A0)
		MOVE.L	D0,HIT_UPPER(A0)
		RTS

HERO_BODY1_SET:
		LEA.L	100H(A0),A0
		MOVE.B	WORK_No(A4),MASTER_No(A0)
		MOVE.B	WORK_No(A0),WORK_N2(A4)
		MOVE.W	#P_HERO_BODY,TYPE(A0)
		MOVE.B	#0010B,HIT_ACTIVE(A0)
		MOVE.B	#0001B,HIT_PASSIVE(A0)
		MOVE.B	#0,HIT_TYPE_No(A0)
		MOVEQ.L	#0,D0
		MOVE.B	D0,ACT_TYPE(A0)
		MOVE.B	D0,HIT_FLAG(A0)
		MOVE.L	D0,HIT_OFS_X(A0)
		MOVE.L	D0,HIT_LEFT(A0)
		MOVE.L	D0,HIT_UPPER(A0)
		RTS

HERO_BODY2_SET:
		LEA.L	100H(A0),A0
		MOVE.L	#P_HERO_SHADOW*10000H+63H,D2	C_KAGE
		MOVE.B	#8FH,D5			PRIORITY
		JSR.S	PWORK_SET

		MOVE.B	WORK_No(A4),MASTER_No(A0)
		MOVE.B	WORK_No(A0),WORK_N3(A4)
		MOVE.B	#0010B,HIT_ACTIVE(A0)
		MOVE.B	#0001B,HIT_PASSIVE(A0)
		MOVE.B	#0,HIT_TYPE_No(A0)
		MOVE.B	PLAYER_No+PLAYER_OFFSET+1(A6),ACT_TYPE(A0)
		MOVEQ.L	#0,D0
		MOVE.B	D0,HIT_FLAG(A0)
		MOVE.L	D0,HIT_OFS_X(A0)
		MOVE.L	D0,HIT_LEFT(A0)
		MOVE.L	D0,HIT_UPPER(A0)
		RTS

HERO_ATTACK_SET:
		LEA.L	100H(A0),A0
		MOVE.B	WORK_No(A4),MASTER_No(A0)
		MOVE.B	WORK_No(A0),WORK_N0(A1)
		MOVE.W	#P_HERO_ATTACK,TYPE(A0)
		MOVE.B	#0001B,HIT_ACTIVE(A0)
		MOVE.B	#0010B,HIT_PASSIVE(A0)
		MOVE.B	#0,HIT_TYPE_No(A0)
		MOVEQ.L	#0,D0
		MOVE.L	D0,VX(A0)
		MOVE.L	D0,VY(A0)
		MOVE.B	D0,HIT_FLAG(A0)
		MOVE.L	D0,HIT_OFS_X(A0)
		MOVE.L	D0,HIT_LEFT(A0)
		MOVE.L	D0,HIT_UPPER(A0)
		MOVE.B	D0,LEVEL(A0)
		RTS

HERO_AREA_SET:
		LEA.L	100H(A0),A0
		MOVE.B	WORK_No(A4),MASTER_No(A0)
		MOVE.B	WORK_No(A0),WORK_N1(A1)
		MOVE.W	#P_HERO_AREA,TYPE(A0)
		MOVEQ.L	#0,D0
		MOVE.B	D0,HIT_FLAG(A0)
		MOVE.L	D0,HIT_OFS_X(A0)
		MOVE.L	D0,HIT_LEFT(A0)
		MOVE.L	D0,HIT_UPPER(A0)
		RTS

HERO_FACE_SET:
		LEA.L	100H(A0),A0
		MOVE.B	WORK_No(A0),WORK_N1(A6)
		MOVE.L	#P_HERO_DISP*10000H+C_PLAY_FACE,D2
		MOVE.B	#0E0H,D5
		JSR.S	PWORK_SET

		MOVE.W	#0C7H,REL_Y(A0)
		MOVE.W	#28H,REL_X(A0)
		TST.W	PLAYER_No+PLAYER_OFFSET(A6)
		BEQ.S	HERO_FACE_SET_1

		MOVE.W	#320-28H,REL_X(A0)
		BSET.B	#ACTAT_FLIP,ACT_ATTR(A0)
HERO_FACE_SET_1:
		MOVE.W	HERO_TYPE(A6),D0
		SUBQ.B	#1,D0
		MOVE.B	D0,ACT_COUNT(A0)
		RTS

HERO_BALL_SET:
		LEA.L	100H(A0),A0
		MOVE.B	WORK_No(A0),WORK_N2(A6)
		MOVE.L	#P_HERO_DISP*10000H+C_WIN_BALL,D2
		MOVE.B	#0E0H,D5
		JSR.S	PWORK_SET

		MOVE.W	#0BFH,REL_Y(A0)
		RTS




LM_HERO:

;		hero move
;		A4	sub PWORK		:WORK_N0

;	auto send to A4	X,Y,Z_POSITION
;			VX
;		move caluculation in PM_HERO and position back
;		VY,VZ send by command own.(if need. default 0)




		JSR	HERO_STATE_DISP(PC)

		MOVE.B	WORK_N0(A6),(A5)
		MOVE.W	(A5),D0
		LEA.L	0(A5,D0.W),A4
		CLR.L	VY(A4)
		CLR.L	VZ(A4)
		BSR	RENDA_DEC
		BSR	ACT_DEAD_CUT
		BSR	LOWER_SET
		BSR	REV_TRIG_CHECK
		BSR	BEFOR_STEP
		BSR	ATTACK_DEC
		BSR	FALL_CHECK
		BSR	DAMAGE_CHECK
		BSR	LOCK_CHECK
		JSR	SPECIAL_CHECK(PC)

		BCLR.B	#BHS_DEFENCE,HERO_STATE(A6)
		MOVEQ.L	#0,D0
		MOVE.B	STEP1(A6),D0
		ADD.B	D0,D0
		ADD.B	D0,D0
		MOVE.L	LM_HERO_VECTOR(PC,D0.W),A0
		JSR	(A0)

		MOVE.L	X_POSITION(A6),X_POSITION(A4)
		MOVE.L	Y_POSITION(A6),Y_POSITION(A4)
		MOVE.L	Z_POSITION(A6),Z_POSITION(A4)
		MOVE.L	VX(A6),VX(A4)
		JSR	ACT_DATA_MOVE(PC)
;		JSR	BACK_OBJ_JUDGE(PC)
;		JSR	OBJECT_HIT(PC)
		RTS

LM_HERO_VECTOR:
		DC.L	HERO_START		start ready wait
		DC.L	HERO_WALK		front walk
		DC.L	HERO_BACK		back walk
		DC.L	HERO_ATTACK		normal attack
		DC.L	HERO_JUMP		jump
		DC.L	HERO_SIT		down
		DC.L	HERO_DAMAGE1		move bururu
		DC.L	HERO_DAMAGE2		non bururu
		DC.L	HERO_FALL		after jump
		DC.L	HERO_CHECK		action check
		DC.L	HERO_TO_SIT		to sit down
		DC.L	HERO_UP			to up from down
		DC.L	HERO_LOCK_OFF		lock
		DC.L	HERO_LOCK_DEF		lock
		DC.L	HERO_STOP		stop
		DC.L	HERO_DAMAGE3		stop bururu
		DC.L	HERO_RUN		running
		DC.L	HERO_RUNB		running
		DC.L	HERO_NAGERARE		nagerare
		DC.L	HERO_STARTC		start jump
		DC.L	HERO_WIN		win or los
		DC.L	HERO_WIN
		DC.L	HERO_RIKI
		DC.L	HERO_COM
		DC.L	HERO_FURA
		DC.L	HERO_RET100
		DC.L	HERO_STARTD

BEFOR_STEP:
		MOVEQ.L	#0,D0
		MOVE.B	STEP2(A6),D0
		ADD.B	D0,D0
		ADD.B	D0,D0
		MOVE.L	LM2_HERO_VECTOR(PC,D0.W),A0
		JMP	(A0)


LM2_HERO_VECTOR:
		DC.L	LM2_HERO0		no
		DC.L	LM2_HERO1		no move
		DC.L	LM2_HERO2		stop
		DC.L	LM2_HERO3		no damage
		DC.L	LM2_HERO4		bururu
		DC.L	LM2_HERO5		no damage



ACT_DEAD_CUT:
		MOVE.L	ANOTHER_PLAYER(A6),A0
		TST.W	HERO_LIFE(A0)
		BNE.S	ACT_DEAD_CUT_1

		CLR.B	DOWN_DMG(A6)
		TST.B	ACT_No(A4)
		BPL.S	ACT_DEAD_CUT_1

		BCLR.B	#6,ACT_No(A4)
		BEQ.S	ACT_DEAD_CUT_1

		MOVE.L	CML_STACK(A4),ADRS1(A4)
ACT_DEAD_CUT_1:
		RTS

REV_TRIG_CHECK:
		BTST.B	#B_C_BUTTON,PLAY_LEVER+1(A6)
		BEQ.S	RTC_1

		CLR.B	REV_TRIG_OFF(A6)
RTC_1:
		RTS

ATTACK_DEC:
;		TST.B	ATTACK_TIMER(A6)
;		BEQ.S	ATTACK_DEC_1
;
;		SUBQ.B	#1,ATTACK_TIMER(A6)
;ATTACK_DEC_1:
		RTS


HERO_RET100:
		CLR.L	VX(A6)
		CLR.L	VZ(A6)
		MOVE.L	ANOTHER_PLAYER(A6),A0
		CMP.B	#ATTACK_STEP,STEP1(A0)
		BNE	RET100_OFF

		CMP.B	#1,ACT_TIMER(A4)
		BNE	HERO_RET100_END

		MOVE.L	ADRS1(A4),A1
		MOVE.W	RET100_No(A0),D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		MOVE.W	0(A1,D0.W),D1
		BTST.B	#ACTAT_FLIP,ACT_ATTR(A4)
		BNE.S	HERO_RET100_1

		NEG.W	D1
HERO_RET100_1:
		MOVE.W	X_POSITION(A6),D2
		SUB.W	X_POSITION(A0),D2
		SUB.W	D2,D1
		ASR.W	#3,D1
		ADD.W	D1,X_POSITION(A6)
		MOVE.W	2(A1,D0.W),D1
		MOVE.W	Z_POSITION(A6),D2
		SUB.W	Z_POSITION(A0),D2
		SUB.W	D2,D1
		ASR.W	#3,D1
		ADD.W	D1,Z_POSITION(A6)
HERO_RET100_END:
		RTS

RET100_OFF:
		MOVE.W	#6FH*2,D0	100RETU_STOP
		JSR.S	SET_SOUND

		MOVE.B	#0,DEF_DAMAGE_ACT_TYPE(A6)
		MOVE.B	#0,DAMAGE_LEVEL(A6)
		MOVE.B	#1,DEF_HIT_TYPE_No(A6)
		MOVE.W	#CTRL_DAMAGE,D4
		JMP	CTRL_CHANGE(PC)


HERO_WIN:
		CLR.L	VX(A6)
		CLR.L	VZ(A6)
		CLR.L	VX(A4)
		CLR.L	VZ(A4)
		RTS

HERO_STARTD:
HERO_COM:
		CLR.L	VX(A6)
		TST.B	ACT_FLAG(A4)
		BPL.S	HERO_COM_3

		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
HERO_COM_3:
		RTS

HERO_RIKI:
		CLR.L	VX(A6)
		MOVE.B	PLAY_LEVER(A6),D0
		AND.B	#A_BUTTON+B_BUTTON,D0
		BNE.S	HERO_RIKI_1
HERO_RIKI_0:
		JSR	RIKI_SOUND_CUT(PC)

		MOVE.W	#CTRL_STOP,D4
		JMP	CTRL_CHANGE(PC)
HERO_RIKI_1:
;		SUBQ.B	#1,RIKI_TIMER(A6)
;		BCS	HERO_RIKI_END

		LEA.L	RIKI_RIKI_TIME(PC),A0
		BSR	RIKI_UP

		MOVE.W	RIKI_MAX(A6),D0
		CMP.W	HERO_SPIRIT(A6),D0
		BEQ.S	HERO_RIKI_0

		RTS

RIKI_DEC:
		LEA.L	AUTO_RIKI_TIME(PC),A0
		MOVE.W	HERO_TYPE(A6),D0
		ADD.W	D0,D0
		BTST.B	#BPS_COM_FLAG,PLAYER_STATE+PLAYER_OFFSET(A6)
		BNE.S	RIKI_DEC_11

		ADDQ.W	#1,D0
RIKI_DEC_11:
		ADD.W	D0,D0
		MOVE.W	0(A0,D0.W),D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		SUB.W	D0,HERO_SPIRIT(A6)
		CMP.B	#129,HERO_SPIRIT(A6)
		BCS.S	RIKI_DEC_2

		MOVE.W	#1,HERO_SPIRIT(A6)
RIKI_DEC_2:
		RTS


AUTO_RIKI_UP:
		LEA.L	AUTO_RIKI_TIME(PC),A0
RIKI_UP:
		MOVE.W	HERO_TYPE(A6),D0
		ADD.W	D0,D0
		BTST.B	#BPS_COM_FLAG,PLAYER_STATE+PLAYER_OFFSET(A6)
		BNE.S	HERO_RIKI_11

		ADDQ.W	#1,D0
HERO_RIKI_11:
		ADD.W	D0,D0
		MOVE.W	0(A0,D0.W),D0
		ADD.W	HERO_SPIRIT(A6),D0
		CMP.W	RIKI_MAX(A6),D0
		BCS.S	HERO_RIKI_2

		MOVE.W	RIKI_MAX(A6),D0
HERO_RIKI_2:
		MOVE.W	D0,HERO_SPIRIT(A6)
		RTS
HERO_RIKI_END:
		MOVE.W	#CTRL_STOP,D4
		JMP	CTRL_CHANGE(PC)

RIKI_RIKI_TIME:
		DC.W	80H,80H		H1
		DC.W	80H,80H		H2
		DC.W	80H,70H		E1
		DC.W	80H,70H		E2
		DC.W	80H,80H		E3
		DC.W	60H,90H		E4
		DC.W	80H,90H		E5
		DC.W	60H,0A0H	E6
		DC.W	80H,0C0H	E7
		DC.W	80H,100H	E8
AUTO_RIKI_TIME:
		DC.W	4,4		H1
		DC.W	4,4		H2
		DC.W	4,4		E1
		DC.W	4,4		E2
		DC.W	4,4		E3
		DC.W	4,4		E4
		DC.W	4,4		E5
		DC.W	4,5		E6
		DC.W	4,8		E7
		DC.W	4,16		E8


HERO_START:
;		start ready wait


		JSR	DIR_CHANGE(PC)

		LEA.L	WORD_TIMER(A6),A0
		JSR.S	SEC_TIME

		BCC	HERO_START_1

		MOVE.W	#CTRL_STARTC,D4
		JSR	CTRL_CHANGE(PC)
HERO_START_1:
		RTS


HERO_STARTC:
		CLR.L	VX(A6)
		TST.B	ACT_FLAG(A4)
		BMI	HERO_STARTC_END

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BEQ.S	HERO_STARTC_10

		JSR	JUMP_MOVE(PC)

		TST.L	D0
		BNE.S	HERO_STARTC_1

		BTST.B	#5,ACT_FLAG(A4)		down stop ?
		BNE.S	HERO_STARTC_1

		MOVE.B	#1,ACT_DEC(A4)
HERO_STARTC_1:
		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE.S	HERO_STARTC_2
HERO_STARTC_10:
		MOVE.B	#1,ACT_DEC(A4)
HERO_STARTC_2:
		RTS


HERO_STARTC_END:
		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
		RTS




HERO_STOP:
;		stop

		JSR	AUTO_RIKI_UP(PC)

		MOVE.W	RIKI_MAX(A6),D0
		CMP.W	HERO_SPIRIT(A6),D0
		BEQ.S	HERO_STOP_2

		MOVE.B	PLAY_LEVER(A6),D0
		AND.B	#A_BUTTON+B_BUTTON,D0
		BEQ.S	HERO_STOP_2

		AND.B	#0F0H,PLAY_LEVER(A6)
		AND.B	#0F0H,PLAY_LEVER+1(A6)
		AND.B	#0F0H,PLAY_LEVER+2(A6)
		ADDQ.B	#1,RIKI_TIMER(A6)
		CMP.B	#30,RIKI_TIMER(A6)
		BCS.S	HERO_STOP_2

		CLR.B	RIKI_TIMER(A6)
		MOVE.W	RIKI_MAX(A6),D0
		CMP.W	HERO_SPIRIT(A6),D0
		BEQ.S	HERO_STOP_2

		MOVE.W	#CTRL_RIKI,D4
		JMP	CTRL_CHANGE(PC)
HERO_STOP_2:
		JSR	DIR_CHANGE(PC)
HERO_STOP_3:
		JSR	RUNNING_CHECK(PC)
		BNE	TO_RUNNING

		JSR	MOVE_CHANGE(PC)

		BNE	HERO_STOP_1

		TST.B	BEFOR_PUSH(A6)
		BEQ.S	HERO_STOP_301

		SUBQ.B	#1,BEFOR_PUSH(A6)
		BRA.S	HERO_STOP_1
HERO_STOP_301:
		JSR	WALK_JUDGE(PC)

		CMP.B	#HERO_STOP_STEP,STEP1(A6)
		BNE	HERO_STOP_MOVE		move

		CMP.B	#CG_STOP,ACT_GROUP(A6)
		BEQ.S	HERO_STOP_1

		BTST.B	#6,ACT_FLAG(A4)
		BNE.S	HERO_STOP_1

		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
HERO_STOP_1:
		RTS

HERO_STOP_MOVE:
		CMP.B	#BACK_STEP,STEP1(A6)
		BEQ	HERO_BACK_00

		RTS

HERO_WALK:
;		front walk


		JSR	AUTO_RIKI_UP(PC)
		JSR	DIR_CHANGE(PC)
		JSR	RUNNING_CHECK(PC)
		BNE	TO_RUNNING

		JSR	MOVE_CHANGE(PC)

		BNE	HERO_WALK_1

		JSR	WALK_JUDGE(PC)
HERO_WALK_1:
		RTS



HERO_BACK:
;		back walk or standing gard

		JSR	AUTO_RIKI_UP(PC)
		JSR	DIR_CHANGE(PC)
		JSR	RUNNING_CHECK(PC)
		BNE	TO_RUNNING

		JSR	MOVE_CHANGE(PC)
		BNE	HERO_BACK_4

		JSR	WALK_JUDGE(PC)
HERO_BACK_00:
		CMP.B	#BACK_STEP,STEP1(A6)
		BNE	HERO_BACK_4

		BSET.B	#BHS_DEFENCE,HERO_STATE(A6)
		JSR	GARD_JUDGE(PC)

		BEQ	HERO_BACK_2

		CLR.L	VX(A6)

		CMP.B	#CG_WALKG,ACT_GROUP(A6)
		BEQ	HERO_BACK_1

		MOVE.W	#CTRL_GARD,D4
		JSR	CTRL_CHANGE(PC)
HERO_BACK_1:
		RTS

HERO_BACK_2:
		CMP.B	#CG_WALKB,ACT_GROUP(A6)
		BEQ	HERO_BACK_4

		CMP.B	#CG_WALKG,ACT_GROUP(A6)
		BNE	HERO_BACK_3

		MOVE.B	#1,ACT_DEC(A4)
		TST.B	ACT_FLAG(A4)
		BMI	HERO_BACK_3

		CLR.L	VX(A6)
		RTS
HERO_BACK_3:
		MOVE.W	#CTRL_WALK_BACK,D4
		JSR	CTRL_CHANGE(PC)
HERO_BACK_4:
		RTS


GARD_JUDGE:
		MOVE.L	ANOTHER_PLAYER(A6),A0
		TST.B	SPECIAL_USE(A0)
		BNE	GARD_JUDGE_1

		CMP.B	#2,BACK2+STEP1(A5)
		BEQ	GARD_JUDGE_1

		MOVEP.W	WORK_N0(A0),D0
		CLR.B	D0
		BTST.B	#4,ACT_FLAG(A5,D0.W)
GARD_JUDGE_1:
		RTS


WALK_JUDGE:
		MOVEQ.L	#LEFT+RIGHT,D0
		AND.B	PLAY_LEVER(A6),D0
		BEQ	WALK_JUDGE_2		walk
		BSR	WALK_SPEED

		MOVE.L	D1,VX(A6)
		CMP.B	D3,D0
		BNE	WALK_JUDGE_3

		CMP.B	#WALK_STEP,STEP1(A6)
		BEQ.S	WALK_JUDGE_1

		MOVE.W	#CTRL_WALK,D4
		JSR	CTRL_CHANGE(PC)
WALK_JUDGE_1:
		RTS

WALK_JUDGE_2:
		CLR.L	VX(A6)
		MOVE.B	#HERO_STOP_STEP,STEP1(A6)
		RTS

WALK_JUDGE_3:
		CMP.B	#BACK_STEP,STEP1(A6)
		BEQ.S	WALK_JUDGE_4

		MOVE.B	#BACK_STEP,STEP1(A6)
WALK_JUDGE_4:
		RTS


WALK_SPEED:
		MOVE.W	HERO_TYPE(A6),D1
		ADD.W	D1,D1
		ADD.W	D1,D1
		ADD.W	D1,D1
		BSR	FOWARD_JUDGE
		BEQ.S	WALK_SPEED_1

		ADDQ.W	#4,D1
WALK_SPEED_1:
		MOVE.L	WALK_SPEED_DATA(PC,D1.W),D1
		TST.B	D2
		BEQ.S	WALK_SPEED_2

		NEG.L	D1
WALK_SPEED_2:
		RTS

FOWARD_JUDGE:
		MOVEQ.L	#1,D2
		AND.B	ACT_ATTR(A4),D2
		MOVE.B	FOWARD_LEVER(PC,D2.W),D3
		CMP.B	D3,D0
		RTS
FOWARD_LEVER:
		DC.B	RIGHT,LEFT


WALK		MACRO	SPEED1,SPEED2
SH		SET	SPEED1/100
SL		SET	SPEED1-SH*100
		DC.W	SH,(SL*10000H)/100
SH		SET	SPEED2/100
SL		SET	SPEED2-SH*100
		DC.W	SH,(SL*10000H)/100
		ENDM

WALK_SPEED_DATA:
		WALK	300,-300		0
		WALK	300,-300		1

		WALK	300,-300		2
		WALK	200,-250		3
		WALK	450,-450		4
		WALK	300,-300		5
		WALK	300,-300		6
		WALK	300,-300		7
		WALK	300,-300		8
		WALK	300,-300		9
		WALK	300,-300		10


TO_RUNNING:
		MOVE.W	#30,RUNNING_TIMER(A6)
		MOVEQ.L	#LEFT+RIGHT,D0
		AND.B	PLAY_LEVER(A6),D0
		BSR	FOWARD_JUDGE
		BNE	TO_BACK_RUN

		MOVE.W	#CTRL_RUN,D4
		JSR	CTRL_CHANGE(PC)

		RTS
TO_BACK_RUN:
		MOVE.W	#CTRL_RUN_BACK,D4
		JSR	CTRL_CHANGE(PC)

		RTS

HERO_RUN:
;		foward running


		JSR	AUTO_RIKI_UP(PC)
		JSR	RUN_ATTACK(PC)

		MOVE.B	ACT_FLAG(A4),D0
		BMI	RUNNING_STOP

		BTST.L	#6,D0
		BNE.S	HERO_RUN_0

		JSR	MOVE_CHANGE(PC)
		BNE	HERO_RUN_1

		MOVE.B	PLAY_LEVER(A6),D0
		AND.B	#00001111B,D0
		BEQ.S	HERO_RUN_0

		CMP.B	RUNNING_LEVER(A6),D0
		BNE	RUNNING_STOP
HERO_RUN_0:
		BSR	RUN_SPEED
HERO_RUN_1:
		RTS

RUN_ATTACK:
		MOVEQ.L	#CTRL_RUN_PUNCH,D4
		BTST.B	#B_A_BUTTON,PLAY_LEVER+1(A6)
		BNE.S	RA_ATTACK

		MOVEQ.L	#CTRL_RUN_KICK,D4
		BTST.B	#B_B_BUTTON,PLAY_LEVER+1(A6)
		BNE.S	RA_ATTACK
RAA_1:
		RTS
RA_ATTACK:
		JSR	CTRL_CHANGE(PC)
		BEQ.S	RAA_1

		ADDQ.L	#4,SP
		RTS


HERO_RUNB:
;		back running


		JSR	AUTO_RIKI_UP(PC)

		MOVE.B	ACT_FLAG(A4),D0
		BMI	RUNNING_STOP

		BTST.L	#6,D0
		BNE.S	HERO_RUNB_0

		JSR	MOVE_CHANGE(PC)
		BNE	HERO_RUNB_1

		MOVE.B	PLAY_LEVER(A6),D0
		AND.B	#00001111B,D0
		BEQ.S	HERO_RUNB_0

		CMP.B	RUNNING_LEVER(A6),D0
		BNE	RUNNING_STOP
HERO_RUNB_0:
		BSR	RUN_SPEED
HERO_RUNB_1:
		RTS


RUNNING_STOP:
		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
		RTS

RUN_SPEED:
		MOVEQ.L	#LEFT+RIGHT,D0
		AND.B	RUNNING_LEVER(A6),D0
		MOVE.W	HERO_TYPE(A6),D1
		ADD.W	D1,D1
		ADD.W	D1,D1
		ADD.W	D1,D1
		BSR	FOWARD_JUDGE
		BEQ.S	RUN_SPEED_1

		ADDQ.W	#4,D1
RUN_SPEED_1:
		MOVE.L	RUN_SPEED_DATA(PC,D1.W),D1
		TST.B	D2
		BEQ.S	RUN_SPEED_2

		NEG.L	D1
RUN_SPEED_2:
		MOVE.L	D1,VX(A6)
		RTS


RUN_SPEED_DATA:
		WALK	561,-561		0
		WALK	561,-561		1

		WALK	395,-395		1
		WALK	400,-600		2
		WALK	190,-190		3
		WALK	425,-425		4
		WALK	425,-566		5
		WALK	425,-425		6
		WALK	840,-840		7
		WALK	561,-561		8







HERO_ATTACK:
;		normal attack


		CLR.L	VX(A6)
		JSR	RENDA_CHECK(PC)

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BEQ.S	HERO_ATTACK_101

		JSR	JUMP_MOVE(PC)

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE.S	HERO_ATTACK_1

		BTST.B	#3,ACT_FLAG(A4)
		BEQ.S	HERO_ATTACK_6
HERO_ATTACK_101:
		MOVE.B	#1,ACT_DEC(A4)
HERO_ATTACK_1:
		TST.B	ACT_FLAG(A4)
		BPL.S	HERO_ATTACK_5

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE.S	HERO_ATTACK_3

		BTST.B	#BHS_DOWN,HERO_STATE(A6)
		BNE.S	HERO_ATTACK_4
HERO_ATTACK_2:
		JSR	ATTACK_OFF_LM(PC)

		MOVE.B	#ATTACK_TIME1,ATTACK_TIMER(A6)
		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)

		MOVE.B	#12,BEFOR_PUSH(A6)
		RTS
HERO_ATTACK_3:
		JSR	ATTACK_OFF_LM(PC)

		MOVE.B	#ATTACK_TIME1,ATTACK_TIMER(A6)
		MOVE.W	#CTRL_FALL,D4
		JSR	CTRL_CHANGE(PC)

		RTS
HERO_ATTACK_4:
		JSR	ATTACK_OFF_LM(PC)

		MOVE.B	#ATTACK_TIME1,ATTACK_TIMER(A6)
		MOVE.W	#CTRL_SIT,D4
		JSR	CTRL_CHANGE(PC)
HERO_ATTACK_5:
		RTS
HERO_ATTACK_6:
		JSR	ATTACK_OFF_LM(PC)

		MOVE.B	#ATTACK_TIME1,ATTACK_TIMER(A6)
		MOVE.W	#CTRL_LANDING,D4
		JSR	CTRL_CHANGE(PC)
		RTS


RENDA_CHECK:
		BTST.B	#RENDA_ON,DEBUG_DIP2(A5)
		BEQ	RENDA_CHECK_1

		MOVE.B	HERO_STATE(A6),D0
		AND.B	#HS_DOWN+HS_JUMP,D0
		BNE	RENDA_OFF

		MOVE.W	HERO_TYPE(A6),D1
		MOVE.B	RENDA_BUTTON(PC,D1.W),D0
		AND.B	PLAY_LEVER+1(A6),D0
		BEQ.S	RENDA_CHECK_1

		ADD.W	D1,D1
		MOVE.W	RENDA_ATTACK(PC,D1.W),D4
		CMP.W	ACT_CTRL(A6),D4
		BEQ.S	RENDA_OFF

		ADD.W	#25,RENDA_COUNT(A6)
		CMP.W	#60,RENDA_COUNT(A6)
		BCS.S	RENDA_CHECK_1

		JSR	CTRL_CHANGE(PC)

		ADDQ.L	#4,SP
RENDA_OFF:
		CLR.W	RENDA_COUNT(A6)
RENDA_CHECK_1:
		RTS
RENDA_DEC:
		BTST.B	#RENDA_ON,DEBUG_DIP2(A5)
		BEQ	RENDA_DEC_1

		TST.W	RENDA_COUNT(A6)
		BEQ.S	RENDA_DEC_1

		SUBQ.W	#1,RENDA_COUNT(A6)
RENDA_DEC_1:
		RTS
RENDA_BUTTON:
		DC.B	A_BUTTON,B_BUTTON
		DC.B	0,0
		DC.B	A_BUTTON,0
		DC.B	0,0,0,A_BUTTON
RENDA_ATTACK:
		DC.W	42H,42H,42H,42H,43H,42H
		DC.W	42H,42H,42H,42H


HERO_JUMP:
;		jump


		JSR	JUMP_MOVE(PC)

		TST.B	ACT_FLAG(A4)
		BPL.S	HERO_JUMP_2

		MOVE.L	D0,-(SP)
		MOVE.W	#CTRL_FALL,D4
		JSR	CTRL_CHANGE(PC)

		MOVE.L	(SP)+,D0
HERO_JUMP_2:
		TST.L	D0
		BNE.S	HERO_JUMP_3

		BCLR.B	#7,ACT_DEC(A4)
HERO_JUMP_3:
		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE	HERO_JUMP_1

		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)

		AND.B	#00001111B,PLAY_LEVER(A6)
		AND.B	#00001111B,PLAY_LEVER+1(A6)
		JSR	MOVE_CHANGE(PC)
		RTS
HERO_JUMP_1:
		MOVE.W	PLAY_LEVER(A6),-(SP)
		AND.B	#11111100B,PLAY_LEVER(A6)
		AND.B	#11111100B,PLAY_LEVER+1(A6)
		JSR	MOVE_CHANGE(PC)

		MOVE.W	(SP)+,PLAY_LEVER(A6)
		RTS


HERO_FALL:
;		after jump


		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BEQ	HERO_FALL_4

		JSR	JUMP_MOVE(PC)

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE	HERO_FALL_1

		CLR.B	BEFORE_LEVER+PLAYER_OFFSET(A6)
		BCLR.B	#7,ACT_DEC(A4)
HERO_FALL_1:
		MOVE.W	PLAY_LEVER(A6),-(SP)
		AND.B	#11111100B,PLAY_LEVER(A6)
		AND.B	#11111100B,PLAY_LEVER+1(A6)
		JSR	MOVE_CHANGE(PC)

		MOVE.W	(SP)+,PLAY_LEVER(A6)
		RTS

HERO_FALL_4:
		TST.B	ACT_FLAG(A4)
		BPL.S	HERO_FALL_5

		BCLR.B	#BHS_AUTO,HERO_STATE(A6)
		MOVE.W	#CTRL_STOP,D4
		BTST.B	#B_DOWN,PLAY_LEVER(A6)
		BEQ.S	HERO_FALL_41

		MOVE.W	#CTRL_SIT,D4
HERO_FALL_41:
		JSR	CTRL_CHANGE(PC)

		AND.B	#00001101B,PLAY_LEVER(A6)
		AND.B	#00001101B,PLAY_LEVER+1(A6)
		JSR	MOVE_CHANGE(PC)
		RTS
HERO_FALL_5:
		BCLR.B	#7,ACT_DEC(A4)
		RTS



HERO_TO_SIT:
;		to sit down

		JSR	AUTO_RIKI_UP(PC)

		CLR.L	VX(A6)
		TST.B	ACT_FLAG(A4)
		BPL.S	HERO_TO_SIT_1

		MOVE.W	#CTRL_SIT,D4
		JSR	CTRL_CHANGE(PC)
HERO_TO_SIT_1:
		AND.B	#11111100B,PLAY_LEVER(A6)
		AND.B	#11111100B,PLAY_LEVER+1(A6)
		JSR	MOVE_CHANGE(PC)

		RTS


HERO_UP:
;		to up from down

		JSR	AUTO_RIKI_UP(PC)

		CLR.L	VX(A6)
		TST.B	ACT_FLAG(A4)
		BPL.S	HERO_UP_1

		BCLR.B	#BHS_DOWN,HERO_STATE(A6)
		MOVE.W	PLAYER_No+PLAYER_OFFSET(A6),D0
		BCLR.B	D0,BACK2+MOVE_DIR(A5)
		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
		RTS
HERO_UP_1:
		AND.B	#11111100B,PLAY_LEVER(A6)
		AND.B	#11111100B,PLAY_LEVER+1(A6)
		JSR	MOVE_CHANGE(PC)

		RTS

HERO_SIT:
;		sit down


		JSR	AUTO_RIKI_UP(PC)
		JSR	DIR_CHANGE(PC)

		MOVE.W	#CTRL_SIT,ACT_CTRL(A6)
		CLR.L	VX(A6)
		BTST.B	#B_DOWN,PLAY_LEVER(A6)
		BNE.S	HERO_SIT_1

		MOVE.W	#CTRL_TO_UP,D4
		JSR	CTRL_CHANGE(PC)
		RTS
HERO_SIT_1:
		AND.B	#11111100B,PLAY_LEVER(A6)
		AND.B	#11111100B,PLAY_LEVER+1(A6)
		JSR	MOVE_CHANGE(PC)

		BNE	HERO_SIT_5		action changed

		MOVEQ.L	#1,D0
		AND.B	ACT_ATTR(A4),D0
		MOVE.B	DOWN_DEF_LEV(PC,D0.W),D0
		AND.B	PLAY_LEVER(A6),D0
		BNE.S	HERO_SIT_4
HERO_SIT_2:
		CMP.B	#CG_SIT,ACT_GROUP(A6)
		BEQ	HERO_SIT_3

		MOVE.B	#1,ACT_DEC(A4)
		TST.B	ACT_FLAG(A4)
		BPL.S	HERO_SIT_3

		MOVE.W	#CTRL_SIT,D4
		JSR	CTRL_CHANGE(PC)
HERO_SIT_3:
		RTS
HERO_SIT_4:
		MOVE.W	#CTRL_SIT_GARD,ACT_CTRL(A6)
		BSET.B	#BHS_DEFENCE,HERO_STATE(A6)
		JSR	GARD_JUDGE(PC)
		BEQ	HERO_SIT_6

		CMP.B	#CG_SITG,ACT_GROUP(A6)
		BEQ.S	HERO_SIT_5

		MOVE.W	#CTRL_SIT_GARD,D4
		JSR	CTRL_CHANGE(PC)
HERO_SIT_5:
		RTS
HERO_SIT_6:
;		JSR	RIKI_DEC(PC)
		JMP	HERO_SIT_2(PC)

DOWN_DEF_LEV:
		DC.B	LEFT,RIGHT


HERO_LOCK_DEF:
;		lock

		CLR.L	VX(A6)
		SUBQ.B	#1,LOCK_TIMER(A6)
		BNE	HERO_LOCK_DEF_1

		BCLR.B	#BHSS_LOCK_DEF,STATE(A6)
		MOVE.B	#HERO_STOP_STEP,STEP1(A6)
HERO_LOCK_DEF_1:
		RTS


HERO_LOCK_OFF:
;		lock

		CLR.L	VX(A6)
		SUBQ.B	#1,LOCK_TIMER(A6)
		BNE	HERO_LOCK_OFF_1

		BCLR.B	#BHSS_LOCK_OFF,STATE(A6)
		MOVE.B	#HERO_STOP_STEP,STEP1(A6)
HERO_LOCK_OFF_1:
		RTS


HERO_NAGERARE:
		BCLR.B	#BHS_DAMAGE,HERO_STATE(A6)
		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BEQ.S	HERO_NAGERARE_1

		BCLR.B	#BHSS_NAGERARE,STATE(A6)
		MOVE.B	#DAMAGE2_STEP,STEP1(A6)
HERO_NAGERARE_1:
		RTS


HERO_DAMAGE3:
		CLR.L	VX(A6)
		TST.B	ADC_COMMAND(A6)
		BEQ	HERO_DAM_END_1

		MOVE.B	ADC_VZ(A6),D0
		CMP.B	ACT_TIMER(A4),D0
		BNE.S	HERO_DAMAGE3_1

		MOVE.B	#11000000B,ADC_COMMAND(A6)
		CLR.W	ADC_VZ(A6)
HERO_DAMAGE3_1:
		RTS


HERO_DAMAGE1:
;		move bururu

		TST.B	ACT_FLAG(A4)
		BMI	HERO_DAM_END

		EOR.W	#2,DISP_X(A4)
		MOVEQ.L	#0,D0
		BTST.B	#6,ACT_FLAG(A4)
		BNE.S	HERO_DAM1_1

		MOVEQ.L	#1,D0
		BTST.B	#ACTAT_FLIP,ACT_ATTR(A4)
		BNE.S	HERO_DAM1_1

		MOVEQ.L	#-1,D0
HERO_DAM1_1:
		MOVE.W	D0,VX(A6)
		RTS



HERO_DAMAGE2:
;		non bururu

		CLR.L	VX(A6)
		TST.B	ACT_FLAG(A4)
		BMI	HERO_DAM_END

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BEQ.S	HERO_DAM2_10

		JSR	JUMP_MOVE(PC)

		TST.L	D0
		BNE.S	HERO_DAM2_1

		BSET.B	#BHS_DAMAGE,HERO_STATE(A6)
		OR.B	#81H,HIT_OFF(A6)

		BTST.B	#5,ACT_FLAG(A4)		down stop ?
		BNE.S	HERO_DAM2_1

		MOVE.B	#1,ACT_DEC(A4)
HERO_DAM2_1:
		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE.S	HERO_DAM2_2

		TST.B	SLOW_CUT(A5)
		BEQ.S	HERO_DAM2_10

		MOVE.B	#10000011B,SLOW_CUT(A5)
HERO_DAM2_10:
		MOVE.B	#1,ACT_DEC(A4)
HERO_DAM2_2:
		RTS


HERO_DAM_END:
		CLR.W	DISP_X(A4)
		TST.W	HERO_LIFE(A6)
		BNE.S	HERO_DAM_END_1

;		MOVE.L	ANOTHER_PLAYER+PLAYER_OFFSET(A6),A0
;		MOVE.L	A0,WIN_PLAYER(A5)
		RTS
HERO_DAM_END_1:
		CLR.B	NON_ADC(A6)
		TST.B	DOWN_DMG(A6)
		BMI.S	HERO_DAM_END_101
		BEQ	HERO_DAM_END_9

		JSR	TO_FURA(PC)
HERO_DAM_END_101:
		CLR.B	DOWN_DMG(A6)
		MOVE.B	#NO_DAMAGE_STEP3,STEP2(A6)
		MOVE.B	#6,BYTE_TIMER(A6)
		BRA	HERO_DAM_END_8
HERO_DAM_END_9:
		AND.B	#7EH,HIT_OFF(A6)
HERO_DAM_END_8:
		BCLR.B	#BHS_DAMAGE,HERO_STATE(A6)
		BTST.B	#BHS_DOWN,HERO_STATE(A6)
		BNE.S	HERO_DAM_END_2

		BTST.B	#B_DOWN,PLAY_LEVER(A6)
		BNE.S	HERO_DAM_END_2
HERO_FURA_END:
		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
		JMP	HERO_STOP(PC)

HERO_DAM_END_2:
		MOVE.W	#CTRL_SIT,D4
		JSR	CTRL_CHANGE(PC)
		JMP	HERO_SIT(PC)

TO_FURA:
		MOVEQ.L	#0,D1
		CMP.W	#16,HERO_LIFE(A6)
		BCS.S	TO_FURA_2

		CMP.W	#64,HERO_LIFE(A6)
		BCS.S	TO_FURA_1

		MOVEQ.L	#1,D1
TO_FURA_1:
		BTST.B	D1,FURA_COUNT(A6)
		BEQ.S	TO_FURA_2

		JSR.S	RAND8

		BTST.B	#6,PHASE+1(A5)
		BNE.S	TO_FURA_2

		CMP.B	#40H,D0
		BCS.S	TO_FURA_3
TO_FURA_2:
		RTS
TO_FURA_3:
		ADDQ.L	#4,SP
		CLR.B	DOWN_DMG(A6)
		BCLR.B	D1,FURA_COUNT(A6)
		AND.B	#7EH,HIT_OFF(A6)
		BCLR.B	#BHS_DAMAGE,HERO_STATE(A6)
		MOVE.W	#CTRL_FURA,D4
		JMP	CTRL_CHANGE(PC)

HERO_FURA:
		CLR.L	VX(A6)
		TST.B	STAGE_TIME(A5)
		BEQ	HERO_FURA_END

		SUBQ.W	#1,FURA_TIMER(A6)
		BEQ	HERO_FURA_END

		BTST.B	#BPS_COM_FLAG,PLAYER_STATE+PLAYER_OFFSET(A6)
		BEQ.S	HERO_FURA_1

		MOVE.B	PLAY_LEVER+1(A6),D0
;		AND.B	#00001111B,D0
		BEQ.S	HERO_FURA_1

		SUBQ.B	#1,FURA_LEVER(A6)
		BEQ	HERO_FURA_END
HERO_FURA_1:
		RTS



HERO_CHECK:
;		action check mode


		RTS





LM2_HERO0:
		RTS


LM2_HERO1:
;		no move

		BSET.B	#BHF_NON_ACT,FLAG(A6)
		CLR.L	VX(A6)
		CLR.L	VX(A4)
		ADDQ.W	#4,SP
		RTS

LM2_HERO2:
;		stop

		CLR.L	VX(A4)
		CLR.L	VX(A6)
		BTST.B	#BHS_DAMAGE,HERO_STATE(A6)
		BNE	LM_HERO2_2

		BTST.B	#BHF_DAMAGE,FLAG(A6)
		BEQ	LM_HERO2_2

		MOVE.B	#0,STEP2(A6)
		BCLR.B	#BHF_NON_ACT,FLAG(A6)
		CLR.B	BYTE_TIMER(A6)
		BSR	DAMAGE_CHECK
		RTS
LM_HERO2_2:
		BSET.B	#BHF_NON_ACT,FLAG(A6)
		ADDQ.W	#4,SP
		SUBQ.B	#1,BYTE_TIMER(A6)
		BNE.S	LM2_HERO2_1

		SUBQ.W	#4,SP
		MOVE.B	#0,STEP2(A6)
		BCLR.B	#BHF_NON_ACT,FLAG(A6)
LM2_HERO2_1:
		RTS


LM2_HERO3:
;		no damage


		SUBQ.B	#1,BYTE_TIMER(A6)
		BNE.S	LM2_HERO3_1
;		CMP.B	#NO_DAMAGE_STEP2,STEP2(A6)
;		BNE.S	LM2_HERO3_1

		MOVE.B	#0,STEP2(A6)
DAMAGE_STEP_OFF:
		AND.B	#7EH,HIT_OFF(A6)
LM2_HERO3_1:
		RTS


LM2_HERO4:
;		bururu

		CLR.L	VX(A4)
		CLR.L	VX(A6)
		BSET.B	#BHF_NON_ACT,FLAG(A6)
		ADDQ.W	#4,SP
		EOR.W	#2,DISP_X(A4)
		SUBQ.B	#1,BYTE_TIMER(A6)
		BNE.S	LM2_HERO4_1

		BCLR.B	#BHF_NON_ACT,FLAG(A6)
		MOVE.W	#0,DISP_X(A4)
		MOVE.B	#0,STEP2(A6)
		SUBQ.W	#4,SP
		MOVE.L	ANOTHER_PLAYER(A6),A0
		CMP.B	#NO_MOVE_STEP2,STEP2(A0)
		BNE.S	LM2_HERO4_1

		MOVE.B	#0,STEP2(A0)
LM2_HERO4_1:
		RTS

LM2_HERO5:
		SUBQ.B	#1,BYTE_TIMER(A6)
		BNE.S	LM2_HERO5_1

		AND.B	#7EH,HIT_OFF(A6)
		MOVE.B	#0,STEP2(A6)
LM2_HERO5_1:
		RTS


JUMP_MOVE:

Z_MINIMUM	EQU	30000H

		CLR.L	VX(A6)
		MOVEQ.L	#1,D0
		TST.W	Z_POSITION(A6)
;		TST.W	HERO_LOWER(A6)
		BGE.S	JUMP_MOVE_1

		CLR.L	Z_POSITION(A6)
		CLR.L	VX(A6)
		CLR.L	VZ(A6)
		CLR.L	VZ(A4)
		CLR.W	JUMP_VX(A6)
		CLR.W	JUMP_AX(A6)
		BCLR.B	#BHS_JUMP,HERO_STATE(A6)
		BCLR.B	#BHF_NO_DIR_CHG,FLAG(A6)
		RTS
JUMP_MOVE_1:
		BTST.B	#6,ACT_FLAG(A4)
		BNE.S	JUMP_MOVE_4

		BCLR.B	#BHF_NO_BJUDGE,FLAG(A6)
		MOVE.W	JUMP_VX(A6),D0
		MOVE.W	D0,D1
		SUB.W	JUMP_AX(A6),D0
		EOR.W	D0,D1
		BPL.S	JUMP_MOVE_11

		MOVE.W	JUMP_VX(A6),D0
JUMP_MOVE_11:
		MOVE.W	D0,JUMP_VX(A6)
		EXT.L	D0
		LSL.L	#8,D0
		MOVE.L	D0,VX(A6)
		MOVE.W	AZ(A6),D0
		EXT.L	D0
		LSL.L	#8,D0
		ADD.L	VZ(A6),D0
		MOVE.L	D0,VZ(A6)
		MOVE.L	D0,D1
		BPL.S	JUMP_MOVE_2

		NEG.L	D1
JUMP_MOVE_2:
		CMP.L	#Z_MINIMUM,D1
		BCC.S	JUMP_MOVE_3

		MOVEQ.L	#0,D0
JUMP_MOVE_3:
		MOVE.L	D0,VZ(A4)
		RTS
JUMP_MOVE_4:
		BSET.B	#BHF_NO_BJUDGE,FLAG(A6)
		RTS






ADC_SET:
		MOVEP.W	MASTER_No(A6),D0
		CLR.B	D0
		LEA.L	-LOG(A5,D0.W),A4
		MOVE.W	ACT_No(A6),ADC_ACT_No(A4)
		MOVE.B	ACT_COUNT(A6),ADC_ACT_COUNT(A4)
		MOVE.W	(A0)+,D0
		MOVE.B	D0,ADC_COMMAND(A4)
		MOVE.L	(A0)+,ADC_VX(A4)
		RTS



ACT_DATA_MOVE:

;		action data command move

;	ADC_COMMAND	d7	bururu
;			d6	x move
;			d5	z move
;			d4	x move (last time only)
;			d3	z move (last time only)
;			d2	x move from another hero (last time only)
;			d1	z move from another hero (last time only)
;			d0	action inner loop


		TST.B	NON_ADC(A6)
		BEQ.S	ADM_00

		AND.B	#10011111B,ADC_COMMAND(A6)
ADM_00:
		MOVE.B	ADC_COMMAND(A6),D4
		BEQ.S	ADC_OFF_1

		MOVE.W	ACT_No(A4),D0
		CMP.W	ADC_ACT_No(A6),D0
		BNE.S	ADC_OFF

		MOVE.B	ACT_COUNT(A4),D0
		CMP.B	ADC_ACT_COUNT(A6),D0
		BEQ.S	ADM_1
ADC_OFF:
		CLR.B	ADC_COMMAND(A6)
		CLR.W	DISP_X(A4)
ADC_OFF_1:
		RTS
ADM_1:
		ADD.B	D4,D4
		BCC.S	ADM_2
		BSR	ADC_BURURU
ADM_2:
		ADD.B	D4,D4
		BCC.S	ADM_3
		BSR	ADC_X_MOVE_1
ADM_3:
		ADD.B	D4,D4
		BCC.S	ADM_4
		BSR	ADC_Z_MOVE_1
ADM_4:
		ADD.B	D4,D4
		BCC.S	ADM_5
		BSR	ADC_X_MOVE
ADM_5:
		ADD.B	D4,D4
		BCC.S	ADM_6
		BSR	ADC_Z_MOVE
ADM_6:
		ADD.B	D4,D4
		BCC.S	ADM_7
		BSR	ADC_X_OFS
ADM_7:
		ADD.B	D4,D4
		BCC.S	ADM_8
		BSR	ADC_Z_OFS
ADM_8:
		ADD.B	D4,D4
		BCC.S	ADM_9
		BSR	ADC_LOOP
ADM_9:
		RTS

ADC_BURURU:
		CLR.L	VX(A4)
		CLR.L	VZ(A4)
		EOR.W	#2,DISP_X(A4)
		RTS

ADC_X_MOVE:
		MOVE.B	ACT_DEC(A4),D0
		BLE.S	ADC_X_MOVE_3

		MOVE.B	ACT_TIMER(A4),D1
		SUB.B	D0,D1
		BGT.S	ADC_X_MOVE_3
ADC_X_MOVE_1:
		BTST.B	#BHF_NON_ACT,FLAG(A6)
		BNE.S	ADC_X_MOVE_3

		MOVE.W	ADC_VX(A6),D0
		BTST.B	#0,ACT_ATTR(A4)
		BEQ.S	ADC_X_MOVE_2

		NEG.W	D0
ADC_X_MOVE_2:
		EXT.L	D0
		LSL.L	#8,D0
		ADD.L	D0,VX(A4)
ADC_X_MOVE_3:
		RTS

ADC_Z_MOVE:
		MOVE.B	ACT_DEC(A4),D0
		BLE.S	ADC_Z_MOVE_3

		MOVE.B	ACT_TIMER(A4),D1
		SUB.B	D0,D1
		BGT.S	ADC_Z_MOVE_3
ADC_Z_MOVE_1:
		BTST.B	#BHF_NON_ACT,FLAG(A6)
		BNE.S	ADC_Z_MOVE_3

		MOVE.W	ADC_VZ(A6),D0
		EXT.L	D0
		LSL.L	#8,D0
		ADD.L	D0,VZ(A4)
ADC_Z_MOVE_3:
		RTS


ADC_X_OFS:
		MOVE.B	ACT_DEC(A4),D0
		BLE.S	ADC_X_OFS_3

		MOVE.B	ACT_TIMER(A4),D1
		SUB.B	D0,D1
		BGT.S	ADC_X_OFS_3
ADC_X_OFS_1:
		BTST.B	#BHF_NON_ACT,FLAG(A6)
		BNE.S	ADC_X_OFS_3

		MOVEQ.L	#0,D0
		MOVE.W	ADC_VX(A6),D0
		BTST.B	#0,ACT_ATTR(A4)
		BEQ.S	ADC_X_OFS_2

		NEG.W	D0
ADC_X_OFS_2:
		MOVE.L	ANOTHER_PLAYER(A6),A0
		ADD.W	X_POSITION(A0),D0
		SUB.W	X_POSITION(A6),D0
		SWAP	D0
		MOVE.L	D0,VX(A4)
ADC_X_OFS_3:
		RTS

ADC_Z_OFS:
		MOVE.B	ACT_DEC(A4),D0
		BLE.S	ADC_Z_OFS_3

		MOVE.B	ACT_TIMER(A4),D1
		SUB.B	D0,D1
		BGT.S	ADC_Z_OFS_3
ADC_Z_OFS_1:
		BTST.B	#BHF_NON_ACT,FLAG(A6)
		BNE.S	ADC_Z_OFS_3

		MOVEQ.L	#0,D0
		MOVE.W	ADC_VZ(A6),D0
		MOVE.L	ANOTHER_PLAYER(A6),A0
		ADD.W	Z_POSITION(A0),D0
		SUB.W	Z_POSITION(A6),D0
		SWAP	D0
		MOVE.L	D0,VZ(A4)
ADC_Z_OFS_3:
		RTS

ADC_LOOP:
		MOVE.B	ACT_DEC(A4),D0
		BLE.S	ADC_LOOP_3

		MOVE.B	ACT_TIMER(A4),D1
		SUB.B	D0,D1
		BGT.S	ADC_LOOP_3

		BTST.B	#BHF_NON_ACT,FLAG(A6)
		BNE.S	ADC_LOOP_3

		MOVE.W	ADC_VX(A6),D0
		SUBQ.W	#2,D0
		MOVE.B	D0,ACT_COUNT(A4)
ADC_LOOP_3:
		RTS





RUNNING_CHECK:
		MOVEQ.L	#0,D0
		MOVE.B	RUNNING_CT(A6),D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		JMP	RUNNING_VECTOR(PC,D0.W)
RUNNING_VECTOR:
		JMP	RUN_CT0(PC)
		JMP	RUN_CT1(PC)
		JMP	RUN_CT2(PC)
		JMP	RUN_CT3(PC)

RUN_CT0:
		TST.B	PLAY_LEVER(A6)
		BNE.S	RUN_CT0_1

		MOVE.B	#1,RUNNING_CT(A6)
RUN_CT0_1:
		MOVEQ.L	#0,D0
		RTS

RUN_CT1:
		MOVE.B	PLAY_LEVER(A6),D0
		BEQ	RUN_CT1_1

		CMP.B	#LEFT,D0
		BEQ.S	RUN_CT1_0

		CMP.B	#RIGHT,D0
		BEQ.S	RUN_CT1_0

		MOVE.B	#0,RUNNING_CT(A6)
		MOVEQ.L	#0,D0
		RTS
RUN_CT1_0:
		MOVE.B	#2,RUNNING_CT(A6)
		MOVE.B	D0,RUNNING_LEVER(A6)
		MOVE.W	#16,RUNNING_TIMER(A6)
RUN_CT1_1:
		MOVEQ.L	#0,D0
		RTS

RUN_CT2:
		MOVE.B	PLAY_LEVER(A6),D0
		BEQ.S	RUN_CT2_3

		CMP.B	RUNNING_LEVER(A6),D0
		BNE.S	RUN_CT2_1

		SUBQ.W	#1,RUNNING_TIMER(A6)
		BPL.S	RUN_CT2_4
RUN_CT2_1:
		MOVE.B	#0,RUNNING_CT(A6)
		MOVEQ.L	#0,D0
		RTS
RUN_CT2_3:
		MOVE.B	#3,RUNNING_CT(A6)
		MOVE.W	#16,RUNNING_TIMER(A6)
RUN_CT2_4:
		MOVEQ.L	#0,D0
		RTS

RUN_CT3:
		MOVE.B	PLAY_LEVER(A6),D0
		BEQ.S	RUN_CT3_0

		CMP.B	RUNNING_LEVER(A6),D0
		BNE.S	RUN_CT3_1

		MOVE.B	#0,RUNNING_CT(A6)
		MOVEQ.L	#1,D0
		RTS
RUN_CT3_0:
		SUBQ.W	#1,RUNNING_TIMER(A6)
		BPL.S	RUN_CT3_4
RUN_CT3_1:
		MOVE.B	#0,RUNNING_CT(A6)
RUN_CT3_4:
		MOVEQ.L	#0,D0
		RTS





DIR_CHANGE:
		MOVE.L	ANOTHER_PLAYER(A6),A0
		MOVE.L	X_POSITION(A6),D0
		CMP.L	X_POSITION(A0),D0
		BCS.S	DIR_CHANGE_1

		BSET.B	#ACTAT_FLIP,ACT_ATTR(A4)
		RTS
DIR_CHANGE_1:
		BCLR.B	#ACTAT_FLIP,ACT_ATTR(A4)
		RTS



DAMAGE_CHECK:
		BCLR.B	#BHF_DAMAGE,FLAG(A6)
		BEQ	DAMAGE_CHECK_2

		CMP.W	#2EH,ACT_CTRL(A6)
		BEQ	DAMAGE_CHECK_2

		BTST.B	#BHS_DAMAGE,HERO_STATE(A6)
		BNE	DAMAGE_CHECK_2

		BSR	DAMAGE_NEXT

		AND.W	#3FFFH,ACT_No(A4)
		TST.B	STAGE_TIME(A5)
		BNE.S	DMC_0000

		CLR.B	DAMAGE_LEVEL(A6)
DMC_0000:
		MOVEQ.L	#0,D0
		MOVE.B	DAMAGE_LEVEL(A6),D0
		SUB.W	D0,HERO_LIFE(A6)
		BGT	DAMAGE_CHECK_1

		MOVEQ.L	#0,D0
		MOVE.B	DEMO_FLAG(A5),D0
		MOVE.W	D0,HERO_LIFE(A6)
		BNE.S	DAMAGE_CHECK_1

		BTST.B	#5,DEBUG_DIP1(A5)
		BEQ.S	DAMAGE_DEAD_00

		MOVE.W	#1,HERO_LIFE(A6)
		BRA.S	DAMAGE_CHECK_1
DAMAGE_DEAD_00:
		BTST.B	#BHSS_NAGERARE,STATE(A6)
		BNE	ALL_DEAD_SOUND			NAGE_DEAD

		JSR	DIR_CHANGE(PC)

		MOVE.W	#CTRL_DEAD,D4
		JMP	CTRL_CHANGE(PC)

DAMAGE_CHECK_1:
		BTST.B	#BHSS_NAGERARE,STATE(A6)
		BNE	DAMAGE_CHECK_2

		JSR	DIR_CHANGE(PC)

		MOVE.W	#CTRL_DAMAGE,D4
		JMP	CTRL_CHANGE(PC)

DAMAGE_CHECK_2:
		RTS

DAMAGE_NEXT:
		MOVE.L	ANOTHER_PLAYER(A6),A0
		TST.B	DAMAGE_LOCK(A0)
		BMI	DAMAGE_100RET
		BNE	DAMAGE_CHECK_LOCK

		MOVE.B	DEF_HIT_STOP(A6),BYTE_TIMER(A0)
		BEQ.S	DAMAGE_CHECK_0

		ADDQ.B	#4,BYTE_TIMER(A0)
		MOVE.B	#STOP_STEP2,STEP2(A0)
DAMAGE_CHECK_0:
		BSR	GET_DAMAGE_LEVEL
		BSR	SCORE_UP
		JSR	STAR_MAKE(PC)

		JSR	ATTACK_OFF_LM(PC)

		MOVE.L	ANOTHER_PLAYER(A6),A0
		CLR.B	ACT_FLAG(A4)
		CLR.L	VX(A6)
		BSET.B	#BHS_DAMAGE,HERO_STATE(A6)
		OR.B	#81H,HIT_OFF(A6)
		RTS

DAMAGE_CHECK_LOCK:
		BSR	GET_DAMAGE_LEVEL
		BSR	SCORE_UP
		JSR	STAR_MAKE(PC)

		JSR	ATTACK_OFF_LM(PC)

		MOVE.L	ANOTHER_PLAYER(A6),A0
		CLR.B	ACT_FLAG(A4)
		CLR.L	VX(A6)
;		BSET.B	#BHS_DAMAGE,HERO_STATE(A6)
;		OR.B	#81H,HIT_OFF(A6)
		RTS
DAMAGE_100RET:
		BSR	GET_DAMAGE_LEVEL
		JSR	STAR_MAKE(PC)

		JSR	ATTACK_OFF_LM(PC)

		MOVE.L	ANOTHER_PLAYER(A6),A0
		CLR.B	ACT_FLAG(A4)
		CLR.L	VX(A6)
;		BSET.B	#BHS_DAMAGE,HERO_STATE(A6)
;		OR.B	#81H,HIT_OFF(A6)
		CLR.B	DAMAGE_LEVEL(A6)
		RTS




		XDEF	GET_DAMAGE_LEVEL
GET_DAMAGE_LEVEL:
		MOVE.L	ANOTHER_PLAYER(A6),A0
		MOVE.B	DAMAGE_LEVEL(A6),D0
		MOVEQ.L	#0FH,D1
		AND.B	DEF_HIT_TYPE_No(A6),D1
		CMP.B	#3,D1			gard ?
		BNE.S	GDL_1

		BSR	GDL_1

		MOVE.B	D0,DAMAGE_LEVEL2(A6)
		MOVE.B	DEF_GARD_LEVEL(A6),D0
GDL_1:
		TST.B	D0
		BEQ	GDL_4

		MOVE.W	HERO_TYPE(A6),D1
		ADD.W	D1,D1
		ADD.W	D1,D1
		ADD.W	HERO_TYPE(A6),D1		*5
		BTST.B	#4,PHASE+1(A5)
		BNE.S	GDL_3

		MOVE.W	LEVEL_TEMP(A5),D2
		LSR.W	#1,D2
		ADD.W	D2,D1
		ADDQ.W	#1,D1
GDL_3:
		ADD.W	D1,D1
		ADD.W	D1,D1
		MOVE.W	HERO_LIFE(A6),D2
		TST.B	D2
		BPL.S	GDL_301

		MOVEQ.L	#127,D2
GDL_301:
		LSR.W	#5,D2
		ADD.W	D2,D1
		MOVEQ.L	#0,D2
		MOVE.B	DEFENCE_POINT(PC,D1.W),D2
		BEQ.S	GDL_4

		AND.W	#0FFH,D0
		MULU	D2,D0
		LSR.W	#8,D0
GDL_4:
		BCLR.B	#0,WEAK_HIT(A6)
		BEQ.S	GDL_2

		ADD.B	COUNTER_LEVEL(A6),D0
GDL_2:
		MOVE.B	D0,DAMAGE_LEVEL(A6)
		RTS

DP		MACRO	L1,L2,L3,L4
		DC.B	(L4*256)/100
		DC.B	(L3*256)/100
		DC.B	(L2*256)/100
		DC.B	(L1*256)/100
		ENDM

DEFENCE_POINT:
;H1
		DP	80,75,65,50		vs
		DP	80,75,65,50
		DP	80,75,65,50
		DP	80,75,65,50
		DP	80,75,65,50
;H2
		DP	80,75,65,50		vs
		DP	80,75,65,50
		DP	80,75,65,50
		DP	80,75,65,50
		DP	80,75,65,50
;E1
		DP	80,75,65,50		vs
		DP	90,85,75,60
		DP	80,75,65,50
		DP	75,70,60,45
		DP	70,65,55,40
;E2
		DP	70,65,55,40
		DP	80,75,65,50
		DP	70,65,55,40
		DP	65,60,50,35
		DP	60,55,45,30
;E3
		DP	90,85,75,60		vs
		DP	00,95,85,70
		DP	90,85,75,60
		DP	85,80,70,55
		DP	80,75,65,50
;E4
		DP	80,75,65,50
		DP	90,85,75,60
		DP	80,75,65,50
		DP	75,70,60,45
		DP	70,65,55,40

;		DP	90,85,75,60		vs
;		DP	00,95,85,70
;		DP	90,85,75,60
;		DP	80,75,65,50
;		DP	70,65,55,40
;E5
		DP	70,65,55,40		vs
		DP	80,75,65,50
		DP	70,65,55,40
		DP	65,60,50,35
		DP	60,55,45,30
;E6
		DP	75,70,60,45		vs
		DP	85,80,70,55
		DP	75,70,60,45
		DP	70,65,55,40
		DP	65,60,50,35
;E7
		DP	70,65,55,40		vs
		DP	80,75,65,50
		DP	70,65,55,40
		DP	75,60,50,35
		DP	60,55,45,30
;E8
		DP	85,75,60,45		vs
		DP	85,75,60,45
		DP	75,65,50,35
		DP	70,60,45,30
		DP	65,55,40,25



SCORE_UP:
		BTST.B	#4,PHASE+1(A5)
		BNE	SCORE_UP_END

		TST.B	HOW_TO_FLAG(A5)
		BNE	SCORE_UP_END

		MOVEM.L	A0-A1,-(SP)
		CLR.L	REG_D0(A5)
		MOVEQ.L	#7CH,D1
		AND.B	DAMAGE_LEVEL(A6),D1
		LSR.B	#1,D1
		MOVE.W	DAMAGE_POINT(PC,D1.W),REG_D0+2(A5)
		LEA.L	HERO_SCORE+4(A0),A0
		LEA.L	REG_D0+4(A5),A1
		SUB.W	D1,D1
		ABCD.B	-(A1),-(A0)
		ABCD.B	-(A1),-(A0)
		ABCD.B	-(A1),-(A0)
		ABCD.B	-(A1),-(A0)
		ADDQ.L	#4,A0
		LEA.L	DEF_HIT_SCORE+4(A6),A1
		SUB.W	D1,D1
		ABCD.B	-(A1),-(A0)
		ABCD.B	-(A1),-(A0)
		ABCD.B	-(A1),-(A0)
		ABCD.B	-(A1),-(A0)
		MOVEM.L	(SP)+,A0-A1
SCORE_UP_END:
		RTS
DAMAGE_POINT:
		DC.W	0000H,0010H,0020H,0030H		00
		DC.W	0040H,0050H,0060H,0070H		10
		DC.W	0080H,0090H,0100H,0110H		20
		DC.W	0120H,0130H,0140H,0150H		30
		DC.W	0160H,0170H,0180H,0190H		40
		DC.W	0200H,0210H,0220H,0230H		50
		DC.W	0240H,0250H,0260H,0270H		60
		DC.W	0280H,0290H,0300H,0310H		70

		DC.W	0320H,0330H,0340H,0350H		80
		DC.W	0360H,0370H,0380H,0390H		90
		DC.W	0400H,0410H,0420H,0430H		A0
		DC.W	0440H,0450H,0460H,0470H		B0
		DC.W	0480H,0490H,0500H,0510H		C0
		DC.W	0520H,0530H,0540H,0550H		D0
		DC.W	0560H,0570H,0580H,0590H		E0
		DC.W	0600H,0610H,0620H,0630H		F0


LOCK_CHECK:
		BTST.B	#BHSS_NAGERARE,STATE(A6)
		BEQ.S	NAGE_CK_1

		CMP.B	#NAGERARE_STEP,STEP1(A6)
		BEQ.S	NAGE_CK_1

		CLR.L	VX(A6)
		CLR.L	VX(A4)
		MOVE.W	PLAYER_No+PLAYER_OFFSET(A6),D0
		BCLR.B	D0,BACK2+MOVE_DIR(A5)
		BCLR.B	#BHS_DOWN,HERO_STATE(A6)
		MOVE.W	#CTRL_NAGERARE,D4
		JSR	CTRL_CHANGE(PC)
NAGE_CK_1:
		RTS


		BTST.B	#BHSS_LOCK_DEF,STATE(A6)
		BEQ.S	LOCK_CHECK_1

		CMP.B	#LOCK_DEF_STEP,STEP1(A6)
		BEQ.S	LOCK_CHECK_1

		MOVE.B	#LOCK_DEF_STEP,STEP1(A6)
		MOVE.B	#60,LOCK_TIMER(A6)
LOCK_CHECK_1:
		RTS



LOWER_SET:
		MOVEP.W	WORK_N2(A4),D0
		CLR.B	D0
		MOVE.W	HIT_LOWER(A5,D0.W),HERO_LOWER(A6)
;		MOVE.W	Z_POSITION(A4),HERO_LOWER(A6)
		RTS




FALL_CHECK:
		CMP.B	#FALL_STEP,STEP1(A6)
		BEQ.S	FALL_CHECK_1

		BTST.B	#BHS_JUMP,HERO_STATE(A6)
		BNE.S	FALL_CHECK_1

		BTST.B	#5,ACT_FLAG(A4)		offset jump
		BNE.S	FALL_CHECK_1

;		BTST.B	#BHF_OBJ_STOP,FLAG(A6)
;		BNE.S	FALL_CHECK_2

;		TST.W	HIT_LOWER(A4)
		TST.W	Z_POSITION(A6)
		BLE.S	FALL_CHECK_1

		CLR.L	VZ(A6)
		CLR.W	JUMP_VX(A6)
		MOVE.W	#-0D00H/20,AZ(A6)
		BSET.B	#BHS_JUMP,HERO_STATE(A6)
		JSR	ATTACK_OFF_LM(PC)

		BTST.B	#BHS_DAMAGE,HERO_STATE(A6)
		BNE.S	FALL_CHECK_1

		MOVE.W	#CTRL_FALL,D4
		JSR	CTRL_CHANGE(PC)
FALL_CHECK_1:
		RTS

FALL_CHECK_2:
		TST.L	HERO_LOWER(A6)
		BGT.S	FALL_CHECK_3

		BCLR.B	#BHF_OBJ_STOP,FLAG(A6)
		CLR.L	Z_POSITION(A6)
		CLR.L	VZ(A6)
FALL_CHECK_3:
		RTS



BACK_OBJ_JUDGE:
		BCLR.B	#BHF_NO_BJUDGE,FLAG(A6)
		BNE	BOJ_3

		MOVE.L	HIT_LEFT(A4),-(SP)
		MOVE.W	VX(A4),D0
		ADD.W	X_POSITION(A4),D0
		SUB.W	#12,D0
		MOVE.W	D0,HIT_LEFT(A4)
		ADD.W	#24,D0
		MOVE.W	D0,HIT_RIGHT(A4)
		MOVE.W	VZ(A4),D0
		ADD.W	D0,HIT_UPPER(A4)
		ADD.W	D0,HIT_LOWER(A4)
		LEA.L	(A4),A0
		JSR.S	GET_OBJ_BACK_ADRS
BOJ_1:
		LEA.L	(A1),A0
		MOVE.W	D6,D7
BOJ_2:
		TST.B	(A0)+
		BNE.S	BOJ_4		hit

		DBRA	D7,BOJ_2

		LEA.L	20H(A1),A1
		DBRA	D5,BOJ_1

		MOVE.L	(SP)+,HIT_LEFT(A4)
		AND.B	#"(HF_OBJ_STOP+HF_ON_OBJ),FLAG(A6)
BOJ_3:
		RTS
BOJ_4:
		MOVE.B	-1(A0),(A5)
		MOVE.W	(A5),D0
		LEA.L	0(A5,D0.W),A2
		MOVE.W	HIT_LEFT(A4),D0
		MOVE.W	HIT_RIGHT(A4),D5
		MOVE.L	(SP)+,HIT_LEFT(A4)
		SUB.W	HIT_LEFT(A2),D5
		BMI	BOJ_NON

		MOVE.W	HIT_RIGHT(A2),D6
		SUB.W	D0,D6			HIT_LEFT(A4),D6
		BMI	BOJ_NON

		MOVE.W	HIT_UPPER(A4),D3
		SUB.W	HIT_LOWER(A2),D3
		BMI	BOJ_NON

		MOVE.W	HIT_UPPER(A2),D4
		SUB.W	HIT_LOWER(A4),D4
		BPL	BOJ_5

		BCLR.B	#BHF_OBJ_STOP,FLAG(A6)
		BSET.B	#BHF_ON_OBJ,FLAG(A6)
		RTS
BOJ_5:
		MOVEQ.L	#0,D1
		CMP.W	D4,D3
		BCS.S	BOJ_6

		MOVEQ.L	#1,D1
		EXG.L	D3,D4
BOJ_6:
		CMP.W	D6,D5
		BCS.S	BOJ_7

		ADDQ.W	#2,D1
		EXG.L	D5,D6
BOJ_7:
;		CMP.W	D3,D5
;		BCS	BOJ_X_IN

		BTST.L	#0,D1
		BEQ	BOJ_LOW

		MOVE.B	FLAG(A6),D0
		AND.B	#HF_OBJ_STOP+HF_ON_OBJ,D0
		BEQ	BOJ_NON

;		SWAP	D3
;		CLR.W	D3
;		ADD.L	VZ(A2),D3
;		MOVE.L	D3,VZ(A4)
		MOVEQ.L	#0,D0
		MOVE.W	HIT_UPPER(A2),D0
		SWAP	D0
		SUB.L	Z_POSITION(A6),D0
		ADD.L	VZ(A2),D0
		MOVE.L	D0,VZ(A4)
		MOVE.L	VX(A2),D0
		ADD.L	D0,VX(A4)
		BSET.B	#BHF_OBJ_STOP,FLAG(A6)
		BCLR.B	#BHS_JUMP,HERO_STATE(A6)
		BEQ.S	BOJ_8

		BTST.B	#BHS_DAMAGE,HERO_STATE(A6)
		BNE.S	BOJ_8

		JSR	ATTACK_OFF_LM(PC)

		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
BOJ_8:
		RTS
BOJ_LOW:
BOJ_X_IN:
BOJ_NON:
		AND.B	#"(HF_OBJ_STOP+HF_ON_OBJ),FLAG(A6)
		RTS

;************************************************************************
;
;		* objcet vs object judge program
;
;		version 1.0*10^-9 date 1991/11/11
;
;	this program is special hit_judge_prog
;              1.back_object_no check(looking buffer)
;	       2.now_object fall_direction is down_check
;              3.moving character is taller than object chararcter_check
;
;	*receive_resista:A1(object_buffer address)
;	                 A4(physical_work address)
;			 A6(logical_work  address)
;			 D5(x_size counter)
;
;	*return_code	:FLAG(bit_6 => fall_flag)
;			     (bit_7 => hit_flag)
;

OBJECT_HIT:
		MOVE.L	HIT_LEFT(A4),-(SP)
		MOVE.W	VX(A4),D0
		ADD.W	X_POSITION(A4),D0
		SUB.W	#16,D0
		MOVE.W	D0,HIT_LEFT(A4)
		ADD.W	#8,D0
		MOVE.W	D0,HIT_RIGHT(A4)
		MOVE.W	VZ(A4),D0
		ADD.W	D0,HIT_UPPER(A4)
		ADD.W	D0,HIT_LOWER(A4)

;		MOVE.W	VX(A4),D0
;		ADD.W	D0,HIT_LEFT(A4)
;		ADD.W	D0,HIT_RIGHT(A4)
;		MOVE.W	VZ(A4),D0
;		ADD.W	D0,HIT_UPPER(A4)
;		ADD.W	D0,HIT_LOWER(A4)	:01
		LEA.L	(A4),A0
		JSR.S	GET_OBJ_BACK_ADRS
OH_LOOP1:
		TST.B 	(A1)+		;check 1
		BNE.S	OH_CHK_1	;

		DBRA	D5,OH_LOOP1
		MOVE.L	(SP)+,HIT_LEFT(A4)
		BSET.B	#BHF_ON_OBJ,FLAG(A6)
		BCLR.B 	#BHF_OBJ_STOP,FLAG(A6)
		RTS

OH_CHK_1:
		MOVE.B	-1(A1),(A5)
		MOVE.W	(A5),D0
		LEA.L	0(A5,D0.W),A2
		MOVE.L	(SP)+,HIT_LEFT(A4)

		BSET.B 	#BHF_OBJ_STOP,FLAG(A6)
		MOVE.L	VX(A2),D0
		ADD.L	D0,VX(A4)
		MOVE.L	VZ(A2),D0
		ADD.L	D0,VZ(A4)

		MOVE.W	VZ(A4),D0	;check 2
		BPL.L	OH_CHK_END	;

		MOVE.W	HIT_UPPER(A2),D0;check 3
		SUB.W	HIT_LOWER(A4),D0;
		BPL.L	OH_CHK_END	;

		MOVE.W	HIT_UPPER(A2),Z_POSITION(A4)
		MOVE.W	HIT_UPPER(A2),Z_POSITION(A6)
		MOVE.L	#0,VZ(A4)
		MOVE.L	#0,AZ(A6)

		JSR	ATTACK_OFF_LM(PC)

		BSET.B	#BHF_OBJ_STOP,FLAG(A6)
		BCLR.B	#BHS_JUMP,HERO_STATE(A6)
		MOVE.W	#CTRL_STOP,D4
		JSR	CTRL_CHANGE(PC)
OH_CHK_END:
		RTS

;************************************************************************


		INCLUDE	WORK.INC



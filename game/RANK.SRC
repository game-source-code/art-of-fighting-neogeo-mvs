;
;
;	    *** 044 RANKNG ***
;
;

		XDEF	RANKING_DISP
		XDEF	INIT_NAMING,NAMING

		XREF	?A5
;by MESSAGE
		XREF	MESS_SET,MESS_SET_INNER,FLAME_WRITE,FLAME_CLR
		XREF	FLAME_WRITED,FLAME_CLRD
;by LANG
		XREF	LANG_SET,LANG_SET_INNER
;by GAME_DSP
		XREF	SCORE_DISP

		SECT	GAME,,C

		INCLUDE	SYS.INC
		INCLUDE	NEO_GEO.INC
		INCLUDE	LABEL.INC
		INCLUDE	EASY_MAC.INC



INIT_NAMING:
		MOVE.B	#1,LP_MAIN_RUN(A5)
		LEA.L	MLWORK1(A5),A6
		TST.B	STAGE_END_FLAG(A5)
		BEQ	NON_NAMING

		MOVE.L	WIN_PLAYER(A5),A0
		MOVE.L	ANOTHER_PLAYER+HERO_OFFSET(A0),A4
		BTST.B	#4,PHASE+1(A5)
		BNE	INIT_NAMING_1

		BTST.B	#6,PLAYER_STATE+PLAYER_OFFSET(A4)
		BNE	INIT_NAMING_1

		CMP.W	#11,STORY_STAGE(A5)
		BNE	NON_NAMING

		MOVE.L	ANOTHER_PLAYER(A4),A4
INIT_NAMING_1:
		JSR	RANK_IN(PC)

		TST.W	ST_TD_RANK(A5)
		BPL.S	INIT_NAMING_2

		TST.W	ST_TL_RANK(A5)
		BPL.S	INIT_NAMING_2

		TST.W	VS_TD_RANK(A5)
		BPL.S	INIT_NAMING_2

		TST.W	VS_TL_RANK(A5)
		BPL.S	INIT_NAMING_2
NON_NAMING:
		OR.B	#10000000B,PHASE+1(A5)
		MOVE.W	#12,SUB_STEP(A5)
		RTS
INIT_NAMING_2:
		AND.B	#01111111B,PHASE+1(A5)
		MOVE.L	A4,NAMING_PLAYER(A5)
		MOVE.W	#0ADH,D0			clear
		JSR.S	MESS_SET

		MOVE.W	#6,FLAME_COUNT(A5)
		MOVE.W	#1,FLAME_TYPE(A5)
		MOVE.W	#7000H+20H*11+14,FLAME_POS(A5)
		MOVE.W	#6,FLAME_END(A5)
		JSR.S	FLAME_WRITED

		BSR	NAME_INIT

		MOVE.W	#0AEH,D0		1P 2P
		ADD.W	PLAYER_No+PLAYER_OFFSET(A4),D0
		JSR.S	MESS_SET

		MOVE.W	ST_IN_RANK(A5),D4
		BMI.S	INIT_NAMING_3

		MOVE.W	#0B0H,D0
		JSR.S	MESS_SET

		MOVE.W	#0B2H,D0
		ADD.W	D4,D0
		JSR.S	MESS_SET
INIT_NAMING_3:
		MOVE.W	VS_IN_RANK(A5),D4
		BMI.S	INIT_NAMING_4

		MOVE.W	#0B1H,D0
		JSR.S	MESS_SET

		MOVE.W	#0B2H,D0
		ADD.W	D4,D0
		JSR.S	MESS_SET
INIT_NAMING_4:
		MOVE.W	#1600H,WORD_TIMER(A6)
		END_NEXT	1,NAMING_1


NAMING:
		JSR	SCORE_DISP
		MOVE.B	#1,LP_MAIN_RUN(A5)
		LEA.L	MLWORK1(A5),A6
		MOVE.L	NAMING_PLAYER(A5),A4
		EASY_START

NAMING_1:
		LEA.L	WORD_TIMER(A6),A0
		JSR.S	SEC_TIME_BCD

		MOVE.W	#0BBH,D0		timer
		JSR	MESS_SET(PC)

		TST.B	WORD_TIMER(A6)
		BEQ	NAMING_END

		MOVE.W	#0BBH,D0		timer
		JSR	MESS_SET(PC)

		LEA.L	INPUT_1(A5),A3
		TST.W	PLAYER_No+PLAYER_OFFSET(A4)
		BEQ.S	NAMING_1_1

		LEA.L	INPUT_2(A5),A3
NAMING_1_1:
		BSR	NAME_MOVE

		LEA.L	CAL_MESS+84H(A5),A0
		MOVE.W	NAME_NAME_POS(A5),D1
		LEA.L	0(A0,D1.W),A0
		BTST.B	#B_B_BUTTON,3(A3)
		BNE	NAME_BACK

		BTST.B	#B_A_BUTTON,3(A3)
		BNE	NAME_NEXT

		RTS
NAME_NEXT:
		MOVE.W	#6AH*2,D0
		JSR.S	SET_SOUND

		CMP.B	#41,(A0)
		BEQ	NAME_BACK_1

		CMP.B	#42,(A0)
		BEQ	NAMING_END_1

		CMP.W	#2,NAME_NAME_POS(A5)
		BEQ	NAMING_END_1

		ADDQ.W	#1,NAME_NAME_POS(A5)
		JSR	RANK_CONV(PC)
		RTS
NAME_BACK:
		MOVE.W	#6AH*2,D0
		JSR.S	SET_SOUND
NAME_BACK_1:
		TST.W	NAME_NAME_POS(A5)
		BEQ.S	NON_BACK

		SUBQ.W	#1,NAME_NAME_POS(A5)
		JSR	RANK_CONV(PC)
NON_BACK:
		RTS

NAMING_END:
		MOVE.W	#6AH*2,D0
		JSR.S	SET_SOUND

NAMING_END_1:
		JSR	RANK_CONV(PC)

		BSR	RANK_IN_IN

		MOVE.B	#30,BYTE_TIMER(A6)
		END_NEXT	2,NAMING_2
NAMING_2:
		SUBQ.B	#1,BYTE_TIMER(A6)
		BNE.S	NAMING_2_1

		MOVE.W	#12,SUB_STEP(A5)
		OR.B	#10000000B,PHASE+1(A5)
NAMING_2_1:
		RTS


RANK_IN_IN:
		LEA.L	RANK_TL_S(A5),A0
		LEA.L	ST_TL_RANK(A5),A1
		MOVE.L	HERO_SCORE(A4),D4
		BSR	RANK_IN_IN_SUB

		LEA.L	RANK_TL_V(A5),A0
		LEA.L	VS_TL_RANK(A5),A1
		MOVEQ.L	#0,D4
		MOVE.B	HERO_BEAT(A4),D4
		BSR	RANK_IN_IN_SUB

		LEA.L	RANK_TD_S(A5),A0
		LEA.L	ST_TD_RANK(A5),A1
		MOVE.L	HERO_SCORE(A4),D4
		BSR	RANK_IN_IN_SUB

		LEA.L	RANK_TD_V(A5),A0
		LEA.L	VS_TD_RANK(A5),A1
		MOVEQ.L	#0,D4
		MOVE.B	HERO_BEAT(A4),D4
		BSR	RANK_IN_IN_SUB

		RTS

RANK_IN_IN_SUB:
		MOVE.W	(A1),D1
		BMI	RIIS_NON

		MOVEQ.L	#3,D2
		BRA.S	RIIS_2
RIIS_1:
		MOVE.W	D2,D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		MOVE.L	0(A0,D0.W),8(A0,D0.W)
		MOVE.L	4(A0,D0.W),12(A0,D0.W)
		SUBQ.W	#1,D2
RIIS_2:
		CMP.W	D1,D2
		BGE.S	RIIS_1

		ADD.W	D1,D1
		ADD.W	D1,D1
		ADD.W	D1,D1
		MOVE.L	D4,0(A0,D1.W)
		MOVE.L	CAL_MESS+80H(A5),4(A0,D1.W)
RIIS_NON:
		RTS




NAME_MOVE:
		MOVEQ.L	#0FH,D2
		AND.B	4(A3),D2
		MOVE.B	NAME_MOVED(PC,D2.W),D2
		BEQ	NAME_MOVE_1

		MOVE.W	#69H*2,D0
		JSR.S	SET_SOUND

		LEA.L	CAL_MESS+84H(A5),A0
		MOVE.W	NAME_NAME_POS(A5),D1
		LEA.L	0(A0,D1.W),A0
		ADD.B	(A0),D2
		ADD.B	#43,D2
		DIVU	#43,D2
		SWAP	D2
		MOVE.B	D2,(A0)
		JSR	RANK_CONV(PC)
NAME_MOVE_1:
		RTS
NAME_MOVED:
		DC.B	0,7,-7,0
		DC.B	-1,6,-8,0
		DC.B	1,8,-6,0
		DC.B	0,0,0,0


NAME_INIT:
		MOVE.W	ST_TL_RANK(A5),D0
		BPL.S	NAME_INIT_1

		MOVE.W	ST_TD_RANK(A5),D0
		BMI.S	NAME_INIT_2
NAME_INIT_1:
		MOVE.W	D0,ST_IN_RANK(A5)
NAME_INIT_2:
		MOVE.W	VS_TL_RANK(A5),D0
		BPL.S	NAME_INIT_3

		MOVE.W	VS_TD_RANK(A5),D0
		BMI.S	NAME_INIT_4
NAME_INIT_3:
		MOVE.W	D0,VS_IN_RANK(A5)
NAME_INIT_4:
		MOVE.W	#0,NAME_NAME_POS(A5)
		MOVE.B	#-1,CAL_MESS+83H(A5)
		MOVE.B	#42,CAL_MESS+84H(A5)
		MOVE.B	#42,CAL_MESS+85H(A5)
		MOVE.B	#42,CAL_MESS+86H(A5)
		MOVE.B	#-1,CAL_MESS+87H(A5)
		JSR	RANK_CONV(PC)

		RTS


RANK_IN:
		MOVE.W	#-1,ST_TD_RANK(A5)
		MOVE.W	#-1,ST_TL_RANK(A5)
		MOVE.W	#-1,VS_TD_RANK(A5)
		MOVE.W	#-1,VS_TL_RANK(A5)
		MOVE.W	#-1,ST_IN_RANK(A5)
		MOVE.W	#-1,VS_IN_RANK(A5)
		TST.B	MVS_FLAG(A5)
		BEQ	RANK_IN_1

		LEA.L	RANK_TL_S(A5),A0
		LEA.L	ST_TL_RANK(A5),A1
		MOVE.L	HERO_SCORE(A4),D4
		BSR	RANK_IN_SUB

		LEA.L	RANK_TL_V(A5),A0
		LEA.L	VS_TL_RANK(A5),A1
		MOVEQ.L	#0,D4
		MOVE.B	HERO_BEAT(A4),D4
		BSR	RANK_IN_SUB
RANK_IN_1:
		LEA.L	RANK_TD_S(A5),A0
		LEA.L	ST_TD_RANK(A5),A1
		MOVE.L	HERO_SCORE(A4),D4
		BSR	RANK_IN_SUB

		LEA.L	RANK_TD_V(A5),A0
		LEA.L	VS_TD_RANK(A5),A1
		MOVEQ.L	#0,D4
		MOVE.B	HERO_BEAT(A4),D4
		BSR	RANK_IN_SUB

		RTS


RANK_IN_SUB:
		MOVEQ.L	#0,D1
RIS_1:
		CMP.L	(A0),D4
		BHS.S	RIS_IN

		ADDQ.L	#8,A0
		ADDQ.W	#1,D1
		CMP.W	#5,D1
		BNE.S	RIS_1

		RTS
RIS_IN:
		MOVE.W	D1,(A1)
		RTS

RANK_CONV:
		LEA.L	CAL_MESS+80H(A5),A0
		MOVEQ.L	#0,D0
		MOVEQ.L	#3-1,D7
RANK_CONV_1:
		MOVE.B	4(A0),D0
		MOVE.B	RANK_CONV_DATA(PC,D0.W),(A0)+
		DBRA	D7,RANK_CONV_1

		MOVEQ.L	#1,D4
		JSR	MESS_CONVERT(PC)

		MOVE.W	#0B7H,D0
		JSR.S	MESS_SET

		MOVE.W	#0B8H,D0
		ADD.W	NAME_NAME_POS(A5),D0
		JSR.S	MESS_SET
		RTS

RANK_CONV_DATA:
;			 0123456789ABCDEF
		DC.B	'ABCD'
		DC.B	'EFGHIJK'
		DC.B	'LMNOPQR'
		DC.B	'STUVWXYZ'
		DC.B	'0123456789'		7*6=42
		DC.B	'+-?!#^_'

		DS.W	0

RANKING_DISP:
		LEA.L	MLWORK2(A5),A6
		MOVEP.W	WORK_N0(A6),D0
		CLR.B	D0
		CLR.W	TYPE(A5,D0.W)
		CLR.W	109700H			HERO FACE
		CLR.W	10A700H
		MOVE.W	#-1,INSERT_POS(A5)
		MOVEQ.L	#00000011B,D0
		AND.B	DEMO_NUMBER(A5),D0
		TST.B	MVS_FLAG(A5)
		BNE.S	RD_INIT_1

		ADDQ.W	#4,D0
RD_INIT_1:
		ADD.W	D0,D0
		ADD.W	D0,D0
		JMP	RD_VECTOR(PC,D0.W)
RD_VECTOR:
		JMP	RD_TL_V(PC)
		JMP	RD_TD_S(PC)
		JMP	RD_TD_V(PC)
		JMP	RD_TL_S(PC)
		JMP	RD_TD_V(PC)
		JMP	RD_TD_S(PC)
		JMP	RD_TD_V(PC)
		JMP	RD_TD_S(PC)

RD_TL_S:
		LEA.L	RANK_TL_S(A5),A0
		MOVE.W	#0A2H,D0
		BRA.S	RD_STORY_0
RD_TD_S:
		LEA.L	RANK_TD_S(A5),A0
		MOVE.W	#0A1H,D0
RD_STORY_0:
		MOVE.L	A0,LW_D1(A6)
		MOVE.W	D0,LW_D0(A6)

		MOVE.W	#31H,D0
		JSR.S	MESS_SET		clear
		MOVE.W	#1,FLAME_COUNT(A5)
		MOVE.W	#0,FLAME_TYPE(A5)
		MOVE.W	#7000H+20H*3+4,FLAME_POS(A5)
		JSR.S	FLAME_WRITED

		MOVE.W	LW_D0(A6),D0
		JSR.S	MESS_SET

		MOVE.W	#0,LW_D0(A6)
		MOVE.B	#1,BYTE_TIMER(A6)
		STEP_SAVE	1,RD_STORY
RD_STORY:
		MOVE.B	#1,LP_MAIN_RUN(A5)
		SUBQ.B	#1,BYTE_TIMER(A6)
		BEQ.S	RD_STORY_1

		RTS
RD_STORY_1:
		MOVE.W	LW_D0(A6),D5
		MOVE.L	LW_D1(A6),A0
		JSR	ST_RANK_SUB(PC)

		MOVE.B	#3,BYTE_TIMER(A6)
		ADDQ.L	#8,LW_D1(A6)
		ADDQ.W	#1,LW_D0(A6)
		CMP.W	#5,LW_D0(A6)
		BEQ	RD_WAIT

		RTS
RD_TL_V:
		LEA.L	RANK_TL_V(A5),A0
		MOVE.W	#0A4H,D0
		BRA.S	RD_VS_0
RD_TD_V:
		LEA.L	RANK_TD_V(A5),A0
		MOVE.W	#0A3H,D0
RD_VS_0:
		MOVE.L	A0,LW_D1(A6)
		MOVE.W	D0,LW_D0(A6)

		MOVE.W	#31H,D0
		JSR.S	MESS_SET		clear
		MOVE.W	#1,FLAME_COUNT(A5)
		MOVE.W	#0,FLAME_TYPE(A5)
		MOVE.W	#7000H+20H*3+4,FLAME_POS(A5)
		JSR.S	FLAME_WRITED

		MOVE.W	LW_D0(A6),D0
		JSR.S	MESS_SET

		MOVE.W	#0,LW_D0(A6)
		MOVE.B	#1,BYTE_TIMER(A6)
		STEP_SAVE	1,RD_VS
RD_VS:
		MOVE.B	#1,LP_MAIN_RUN(A5)
		SUBQ.B	#1,BYTE_TIMER(A6)
		BEQ.S	RD_VS_1

		RTS
RD_VS_1:
		MOVE.W	LW_D0(A6),D5
		MOVE.L	LW_D1(A6),A0
		JSR	VS_RANK_SUB(PC)

		MOVE.B	#3,BYTE_TIMER(A6)
		ADDQ.L	#8,LW_D1(A6)
		ADDQ.W	#1,LW_D0(A6)
		CMP.W	#5,LW_D0(A6)
		BEQ	RD_WAIT

		RTS

RD_WAIT:
		SEC_TIMER_SET	3,WORD_TIMER
		END_NEXT	2,RD_WAIT_1
RD_WAIT_1:
		MOVE.B		#1,LP_MAIN_RUN(A5)
		SEC_TIMER	WORD_TIMER
		BCC.S		RD_WAIT_2

		MOVEQ.L		#01110000B,D0
		AND.B		PHASE+1(A5),D0
		OR.B		#3,D0
		MOVE.B		D0,PHASE+1(A5)
RD_WAIT_2:
		RTS



VS_RANK_SUB:
;		in)	A0 org data
;			D5 rank

		LEA.L	CAL_MESS+80H(A5),A1
		MOVE.L	#'    ',(A1)
		MOVE.L	#'    ',4(A1)
		MOVE.L	#'    ',8(A1)
		MOVE.L	#'    ',12(A1)
		MOVE.W	#'  ',14(A1)
		MOVEQ.L	#31H,D0
		ADD.B	D5,D0
		MOVE.B	D0,(A1)
		TST.B	LANGUAGE(A5)
		BNE	VS_RANK_BEAT
		ADDQ.L	#6,A1
		BSR	BEAT_SUB

		MOVE.B	#'&',(A1)+
		MOVE.B	#'"',(A1)+
		MOVE.B	#'$',(A1)+
		MOVE.B	#' ',(A1)+
		MOVE.B	#' ',(A1)+
		JMP	RANK_ORDER_SET(PC)

VS_RANK_BEAT:
		ADDQ.L	#4,A1
		MOVE.B	#'(',(A1)+
		MOVE.B	#')',(A1)+
		MOVE.B	#'*',(A1)+
		MOVE.B	#',',(A1)+
		ADDQ.L	#2,A1
		BSR	BEAT_SUB

		MOVE.B	#' ',(A1)+
		JMP	RANK_ORDER_SET(PC)

BEAT_SUB:
		MOVE.B	3(A0),D0
		LSR.B	#4,D0
		BEQ.S	BEAT_SUB_1

		ADD.B	#'0',D0
		MOVE.B	D0,-2(A1)
BEAT_SUB_1:
		MOVEQ.L	#0FH,D0
		AND.B	3(A0),D0
		ADD.B	#'0',D0
		MOVE.B	D0,-1(A1)
		ADDQ.L	#4,A0
		RTS


ST_RANK_SUB:
;		in)	A0 org data
;			D5 rank

		LEA.L	CAL_MESS+80H(A5),A1
		MOVE.L	#'    ',(A1)
		MOVE.L	#'    ',4(A1)
		MOVE.L	#'    ',8(A1)
		MOVE.L	#'    ',12(A1)
		MOVE.W	#'  ',14(A1)
		MOVEQ.L	#31H,D0
		ADD.B	D5,D0
		MOVE.B	D0,(A1)
		ADDQ.L	#2,A1
		MOVEQ.L	#20H,D1
		MOVEQ.L	#4-1,D7
STRS_1:
		MOVE.B	(A0),D0
		LSR.B	#4,D0
		BSR	STRS_SUB

		MOVE.B	(A0)+,D0
		BSR	STRS_SUB
		DBRA	D7,STRS_1

		MOVE.B	#' ',(A1)+
RANK_ORDER_SET:
		MOVE.B	(A0)+,(A1)+
		MOVE.B	(A0)+,(A1)+
		MOVE.B	(A0)+,(A1)+
		MOVE.B	#0FFH,(A1)
		MOVEQ.L	#0,D4
		JSR	MESS_CONVERT(PC)

		OR.B	#30H,CAL_MESS+00H(A5)
		OR.B	#30H,CAL_MESS+02H(A5)
		OR.B	#30H,CAL_MESS+40H(A5)
		OR.B	#30H,CAL_MESS+42H(A5)
		OR.B	#30H,CAL_MESS+2CH(A5)
		OR.B	#30H,CAL_MESS+2EH(A5)
		OR.B	#30H,CAL_MESS+30H(A5)
		OR.B	#30H,CAL_MESS+32H(A5)
		OR.B	#30H,CAL_MESS+34H(A5)
		OR.B	#30H,CAL_MESS+36H(A5)
		OR.B	#30H,CAL_MESS+6CH(A5)
		OR.B	#30H,CAL_MESS+6EH(A5)
		OR.B	#30H,CAL_MESS+70H(A5)
		OR.B	#30H,CAL_MESS+72H(A5)
		OR.B	#30H,CAL_MESS+74H(A5)
		OR.B	#30H,CAL_MESS+76H(A5)
		MOVE.W	D5,D0
		ADD.W	D0,D0
		ADD.W	D0,D0
		MOVE.W	SUUSI(PC,D0.W),CAL_MESS+44H(A5)
		MOVE.W	SUUSI+2(PC,D0.W),CAL_MESS+46H(A5)
		MOVE.W	#0A5H,D0
		ADD.W	D5,D0
		JSR.S	MESS_SET

		MOVE.W	#0AAH,D0
		JSR.S	MESS_SET
		RTS
SUUSI:
		DC.W	3353H,3354H	st
		DC.W	334EH,3344H	nd
		DC.W	3352H,3344H	rd
		DC.W	3354H,3348H	th
		DC.W	3354H,3348H	th

STRS_SUB:
		AND.B	#0FH,D0
		BEQ.S	STRS_SUB_1

		MOVEQ.L	#30H,D1
STRS_SUB_1:
		OR.B	D1,D0
		MOVE.B	D0,(A1)+
		RTS




MESS_CONVERT:
;		in) 	CAL_MESS+80H	original ascii
;			D4=0 blank 1=beta
;		out)	CAL_MESS,CAL_MESS+40H	convert chara


		LEA.L	CAL_MESS+80H(A5),A0
		LEA.L	CAL_MESS+40H(A5),A1
		LEA.L	CONV_ASCII(PC),A2
		TST.B	D4
		BEQ.S	MC_1

		LEA.L	CONV_ASCII_BETA(PC),A2
MC_1:
		MOVEQ.L	#0,D2
		MOVE.B	(A0)+,D2
		CMP.B	#0FFH,D2
		BEQ	MC_2

		SUB.B	#' ',D2
		ADD.W	D2,D2
		ADD.W	D2,D2
		MOVE.W	0(A2,D2.W),D0
		MOVE.W	D0,-40H(A1)
		ADD.W	#100H,D0
		MOVE.W	D0,(A1)+
		MOVE.W	2(A2,D2.W),D0
		MOVE.W	D0,-40H(A1)
		ADD.W	#100H,D0
		MOVE.W	D0,(A1)+
		BRA	MC_1
MC_2:
		MOVE.W	#0FFH,-40H(A1)
		MOVE.W	#0FFH,(A1)
		RTS
CONV_ASCII:
		DC.W	0520H,0520H		20H	sp
		DC.W	3BFAH,3BFBH		21H	!
		DC.W	3DE5H,3DE6H		22H	"=ninnuki
		DC.W	355EH,355FH		23H	#=nt
		DC.W	3DE7H,0520H		24H	$=ninnuki
		DC.W	3D7EH,3D7FH		25H	%=
		DC.W	3DE3H,3DE4H		26H	&=ninnuki
		DC.W	0520H,0520H		27H	'

		DC.W	3542H,3545H		28H	(=beat by
		DC.W	3541H,3554H		29H	)=beat by
		DC.W	0520H,3542H		2AH	*=beat by
		DC.W	3D7CH,3D7DH		2BH	+
		DC.W	3559H,0520H		2CH	,=beat by
		DC.W	3DBEH,3DBFH		2DH	-
		DC.W	0520H,0520H		2EH	.
		DC.W	0520H,0520H		2FH	/

		DC.W	2362H,2363H		30H	0
		DC.W	2364H,2365H		31H	1
		DC.W	2366H,2367H		32H	2
		DC.W	2368H,2369H		33H	3
		DC.W	236AH,236BH		34H	4
		DC.W	236CH,236DH		35H	5
		DC.W	236EH,236FH		36H	6
		DC.W	2370H,2371H		37H	7

		DC.W	2372H,2373H		38H	8
		DC.W	2374H,2375H		39H	9
		DC.W	0520H,0520H		3AH	:
		DC.W	0520H,0520H		3BH	;
		DC.W	0520H,0520H		3CH	<
		DC.W	0520H,0520H		3DH	=
		DC.W	0520H,0520H		3EH	>
		DC.W	3BF8H,3BF9H		3FH	?

		DC.W	0520H,0520H		40H	@
		DC.W	338AH,338BH		41H	A
		DC.W	338CH,338DH		42H	B
		DC.W	338EH,338FH		43H	C
		DC.W	3390H,3391H		44H	D
		DC.W	3392H,3393H		45H	E
		DC.W	3394H,3395H		46H	F
		DC.W	3396H,3397H		47H	G

		DC.W	3398H,3399H		48H	H
		DC.W	339AH,339BH		49H	I
		DC.W	339CH,339DH		4AH	J
		DC.W	339EH,339FH		4BH	K
		DC.W	33A0H,33A1H		4CH	L
		DC.W	33A2H,33A3H		4DH	M
		DC.W	33A4H,33A5H		4EH	N
		DC.W	33A6H,33A7H		4FH	O

		DC.W	33A8H,33A9H		50H	P
		DC.W	33AAH,33ABH		51H	Q
		DC.W	33ACH,33ADH		52H	R
		DC.W	33AEH,33AFH		53H	S
		DC.W	33B0H,33B1H		54H	T
		DC.W	33B2H,33B3H		55H	U
		DC.W	33B4H,33B5H		56H	V
		DC.W	33B6H,33B7H		57H	W

		DC.W	33B8H,33B9H		58H	X
		DC.W	33BAH,33BBH		59H	Y
		DC.W	33BCH,33BDH		5AH	Z
		DC.W	0520H,0520H		5BH
		DC.W	0520H,0520H		5CH
		DC.W	0520H,0520H		5DH
		DC.W	0520H,0520H		5EH
		DC.W	0520H,0520H		5FH	end

CONV_ASCII_BETA:
		DC.W	0720H,0720H		20H	sp
		DC.W	3BF6H,3BF7H		21H	!
		DC.W	0720H,0720H		22H	"
		DC.W	375EH,375FH		23H	#=nt
		DC.W	0720H,0720H		24H	$
		DC.W	3BF2H,3BF3H		25H	%
		DC.W	0720H,0720H		26H	&
		DC.W	0720H,0720H		27H	'

		DC.W	0720H,0720H		28H	(
		DC.W	0720H,0720H		29H	)
		DC.W	0720H,0720H		2AH	*
		DC.W	3BDAH,3BDBH		2BH	+
		DC.W	0720H,0720H		2CH	,
		DC.W	3D9EH,3D9FH		2DH	-
		DC.W	0720H,0720H		2EH	.
		DC.W	0720H,0720H		2FH	/

		DC.W	3376H,3377H		30H	0
		DC.W	3378H,3379H		31H	1
		DC.W	337AH,337BH		32H	2
		DC.W	337CH,337DH		33H	3
		DC.W	337EH,337FH		34H	4
		DC.W	3380H,3381H		35H	5
		DC.W	3382H,3383H		36H	6
		DC.W	3384H,3385H		37H	7

		DC.W	3386H,3387H		38H	8
		DC.W	3388H,3389H		39H	9
		DC.W	0720H,0720H		3AH	:
		DC.W	0720H,0720H		3BH	;
		DC.W	0720H,0720H		3CH	<
		DC.W	0720H,0720H		3DH	=
		DC.W	0720H,0720H		3EH	>
		DC.W	3BF4H,3BF5H		3FH	?

		DC.W	0720H,0720H		40H	@
		DC.W	33BEH,33BFH		41H	A
		DC.W	33C0H,33C1H		42H	B
		DC.W	33C2H,33C3H		43H	C
		DC.W	33C4H,33C5H		44H	D
		DC.W	33C6H,33C7H		45H	E
		DC.W	33C8H,33C9H		46H	F
		DC.W	33CAH,33CBH		47H	G

		DC.W	33CCH,33CDH		48H	H
		DC.W	33CEH,33CFH		49H	I
		DC.W	33D0H,33D1H		4AH	J
		DC.W	33D2H,33D3H		4BH	K
		DC.W	33D4H,33D5H		4CH	L
		DC.W	33D6H,33D7H		4DH	M
		DC.W	33D8H,33D9H		4EH	N
		DC.W	33DAH,33DBH		4FH	O

		DC.W	33DCH,33DDH		50H	P
		DC.W	33DEH,33DFH		51H	Q
		DC.W	33E0H,33E1H		52H	R
		DC.W	33E2H,33E3H		53H	S
		DC.W	33E4H,33E5H		54H	T
		DC.W	33E6H,33E7H		55H	U
		DC.W	33E8H,33E9H		56H	V
		DC.W	33EAH,33EBH		57H	W

		DC.W	33ECH,33EDH		58H	X
		DC.W	33EEH,33EFH		59H	Y
		DC.W	33F0H,33F1H		5AH	Z
		DC.W	0720H,0720H		5BH
		DC.W	0720H,0720H		5CH
		DC.W	0720H,0720H		5DH
		DC.W	3BE0H,3BE1H		5EH	BS
		DC.W	335BH,335CH		5FH	end


		INCLUDE	WORK.INC



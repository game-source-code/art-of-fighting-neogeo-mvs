;************************************************************************
;  									*
;              ART OF FIGHT PLAYER SELECT SCREEN PROGRAM		*
;    				presented by k.morikawa			*
; 				version 0.01 1992/1/31			*
;									*
;************************************************************************

		XDEF	INIT_GAME_SELECT,GAME_SELECT
		XDEF	INIT_STORY_SELECT,STORY_SELECT
		XDEF	INIT_VS_SELECT,VS_SELECT

		XREF	?A5
;by PHASE
		XREF	ACTIVE_TRIGER
		XREF	PLAYER_INIT_VS
;by STORY
		XREF	STAGE_ENEMY
;by GAME_SUB
		XREF	LWORK_DEAD
;by DEMO_CML
		XREF	DEMO_OBJ_MAP
		XREF	INIT_TI_DEMO_ONLY
;by MESSAGE
		XREF	MESS_SET,MESS_SET_INNER,FLAME_WRITE,FLAME_CLR
		XREF	FLAME_WRITED
;by LANG
		XREF	LANG_SET


		SECT	GAME,,C


		INCLUDE	SYS.INC
		INCLUDE	MACRO.INC
		INCLUDE	NEO_GEO.INC
		INCLUDE	LABEL.INC
		INCLUDE	EASY_MAC.INC
		INCLUDE	ACT_No.INC
		INCLUDE	SMACRO.INC
		INCLUDE	SCODE.INC





;
;	    *** game level select (home use)
;


FIX_CHECK:
		JSR.S		PWORK_INIT

		LEA.L		MLWORK1(A5),A6
		MOVE.W		#0,COLOR_BUFFER+1FFEH(A5)
		COLOR_COMMAND
		PALETTE		000H,00H,PG_SET+BASE_COLOR
		PALETTE		0FFH,00H,BASE_COLOR
		PALETTE_END

		MESS_ON
		MOVE.L		#M_FIX_CLEAR,(A0)+
		MESS_OFF
		OBJ_MAP		DEMO_OBJ_MAP
		CLR.L		WINDOW_X(A5)
		CLR.L		WINDOW_Y(A5)
		MOVE.W		#300H,LW_D0(A6)
		MOVE.W		#2,LW_D1(A6)
		END_NEXT	0,FIX_0
FIX_0:
		BSR		CHECK_DISP
		END_NEXT	1,FIX_1
FIX_1:
		JSR.S		ACTIVE_TRIGER

		BTST.L		#B_A_BUTTON,D2
		BNE		CH_UP

		BTST.L		#B_B_BUTTON,D2
		BNE		CH_DOWN

		BTST.L		#B_C_BUTTON,D2
		BNE		PAL_UP

		BTST.L		#B_D_BUTTON,D2
		BNE		PAL_DOWN

		RTS
CH_UP:
		ADD.W		#200H,LW_D0(A6)
		AND.W		#0F00H,LW_D0(A6)
		JMP		CHECK_DISP(PC)
CH_DOWN:
		SUB.W		#200H,LW_D0(A6)
		AND.W		#0F00H,LW_D0(A6)
		JMP		CHECK_DISP(PC)
PAL_UP:
		ADDQ.W		#1,LW_D1(A6)
		AND.W		#0FH,LW_D1(A6)
		JMP		CHECK_DISP(PC)
PAL_DOWN:
		SUBQ.W		#1,LW_D1(A6)
		AND.W		#0FH,LW_D1(A6)
		JMP		CHECK_DISP(PC)




CHECK_DISP:
		ADDQ.B		#1,LSPC_BUSY(A5)
		LEA.L		LSPC_DATA,A2
		MOVE.W		#20H,2(A2)
		MOVE.W		LW_D0(A6),D3
		MOVE.W		LW_D1(A6),D2
		ROR.W		#4,D2
		OR.W		D2,D3
		MOVE.W		#7000H+20H*4+6,D5
		BSR		CD_SUB

		MOVE.W		LW_D0(A6),D3
		ADD.W		#100H,D3
		AND.W		#0FFFH,D3
		MOVE.W		LW_D1(A6),D2
		ROR.W		#4,D2
		OR.W		D2,D3
		MOVE.W		#7000H+20H*4+7,D5
		BSR		CD_SUB

		SUBQ.B		#1,LSPC_BUSY(A5)
		MESS_ON
		MOVE.L		#M_FIX_CHECK,(A0)+
		MESS_OFF
		RTS

CD_SUB:
		MOVEQ.L		#8-1,D7
CD_SUB_1:
		MOVE.W		D5,-2(A2)
		MOVEQ.L		#32-1,D6
CD_SUB_2:
		MOVE.W		D3,(A2)
		ADDQ.W		#1,D3
		DBRA		D6,CD_SUB_2

		ADDQ.W		#2,D5
		DBRA		D7,CD_SUB_1

		RTS

M_FIX_CHECK:
	FIX_FORMAT.B	CODE,00FFH
	FIX_AUTO	20H
	FIX_ADRS	8,4
	FIX_DIRECT_DATA
	DC.B		'CHARA-',0FFH
	FIX_BCD_OUT.B	NON,A5,LW_D0+MLWORK1-?A5,HI,4,14,4,00H
	FIX_ADRS	19,4
	FIX_DIRECT_DATA
	DC.B		'PALETTE-',0FFH
	FIX_BCD_OUT.B	NON,A5,LW_D1+1+MLWORK1-?A5,HI,2,27,4,00H
	FIX_END



LOGO_SUB:




INIT_GAME_SELECT:
		MOVE.W		#S_PLAYER,D0
		JSR.S		SET_BGM

		LEA.L		MLWORK1(A5),A6
		MOVE.W		#31H,D0
		JSR.S		MESS_SET
		JSR		INIT_TI_DEMO_ONLY(PC)

		TST.W		SUB_STEP(A5)
		BNE		INIT_MODE_SELECT

		MOVE.W		#6,FLAME_COUNT(A5)
		MOVE.W		#1,FLAME_TYPE(A5)
		MOVE.W		#7000H+20H*11+15,FLAME_POS(A5)
		MOVE.W		#6,FLAME_END(A5)
		JSR.S		FLAME_WRITED

		MOVE.W		#0C9H,D0
		JSR.S		MESS_SET

		MOVE.W		#2,LW_D0(A6)
		MOVEQ.L		#0,D0
		MOVE.B		LANGUAGE(A5),D0
		MOVE.W		D0,LW_D1(A6)
		JSR		LEVEL_SEL_DISP(PC)

		STEP_SAVE	0,GAME_SELECT_0
		MOVE.W		#0A00H,WORD_TIMER(A6)
		AND.B		#01111111B,PHASE+1(A5)
		RTS

LEVEL_SEL_DISP:
		MOVE.W		#0CAH,D0
		ADD.W		LW_D0(A6),D0
		JSR.S		MESS_SET

		MOVE.W		#0CEH,D0
		ADD.W		LW_D1(A6),D0
		JSR.S		MESS_SET

		RTS

GAME_SELECT:
		LEA.L		MLWORK1(A5),A6
		EASY_START

GAME_SELECT_0:
		SEC_TIMER	WORD_TIMER
		BCS		GAME_SELECT_END

		JSR.S		ACTIVE_TRIGER

		TST.W		DEBUG_DIP1(A5)
		BEQ.S		GAME_SELECT_000

		BTST.L		#B_D_BUTTON,D2
		BNE		FIX_CHECK
GAME_SELECT_000:
		BTST.L		#B_A_BUTTON,D2
		BNE		GAME_SELECT_END

		AND.W		#UP+DOWN+LEFT+RIGHT,D2
		BNE.S		GAME_SELECT_1

		RTS
GAME_SELECT_1:
		ADD.W		D2,D2
		LEA.L		GAME_SEL_LEVER(PC),A0
		ADD.W		D2,A0
		MOVE.B		(A0)+,D0
		ADD.B		LW_D0+1(A6),D0
		CMP.B		#4,D0
		BCC.S		GAME_SELECT_2

		MOVE.B		D0,LW_D0+1(A6)
GAME_SELECT_2:
		MOVE.B		(A0)+,D0
		ADD.B		LW_D1+1(A6),D0
		BPL.S		GAME_SELECT_3

		MOVEQ.L		#2,D0
GAME_SELECT_3:
		CMP.B		#3,D0
		BCS.S		GAME_SELECT_4

		MOVEQ.L		#0,D0
GAME_SELECT_4:
		MOVE.B		D0,LW_D1+1(A6)
		JSR		LEVEL_SEL_DISP(PC)

		SOUND		#S_SENTAKU
		RTS

GAME_SELECT_END:
		SOUND		#S_KETTEI
		MOVEQ.L		#0,D0
		MOVE.W		LW_D0(A6),D0
		MOVE.B		LEVEL_CONV_TBL(PC,D0.W),GAME_DIP+SD_LEVEL(A5)
		MOVE.B		LW_D1+1(A6),LANGUAGE(A5)
		MOVE.W		#1,SUB_STEP(A5)
		MOVE.W		#31H,D0
		JSR.S		MESS_SET
		JMP		INIT_MODE_SELECT(PC)

;		OR.B		#10000000B,PHASE+1(A5)
;		RTS

LEVEL_CONV_TBL:
		DC.B		3,1,2,6

GAME_SEL_LEVER:
		DC.B		00,00
		DC.B		-1,00
		DC.B		01,00
		DC.B		00,00

		DC.B		00,-1
		DC.B		-1,-1
		DC.B		01,-1
		DC.B		00,00

		DC.B		00,01
		DC.B		-1,01
		DC.B		01,01
		DC.B		00,00

		DC.B		00,00
		DC.B		00,00
		DC.B		00,00
		DC.B		00,00



;
;	    *** game mode select ***
;


INIT_MODE_SELECT:
		MOVE.W		#3,FLAME_COUNT(A5)
		MOVE.W		#1,FLAME_TYPE(A5)
		MOVE.W		#7000H+20H*11+22,FLAME_POS(A5)
		MOVE.W		#3,FLAME_END(A5)
		JSR.S		FLAME_WRITED

		MOVE.W		#0D1H,D0
		JSR.S		MESS_SET

		STEP_SAVE	1,MODE_SELECT_0
		MOVE.W		#0,LW_D0(A6)
		JSR.S		MODE_DISP(PC)
		MOVE.W		#0A00H,WORD_TIMER(A6)

		AND.B		#01111111B,PHASE+1(A5)
		RTS

MODE_DISP:
		MOVE.W		#0D2H,D0
		ADD.W		LW_D0(A6),D0
		JSR.S		MESS_SET

		RTS

MODE_SELECT_0:
		SEC_TIMER	WORD_TIMER
		BCS		MODE_SELECT_END

		JSR.S		ACTIVE_TRIGER

		BTST.L		#B_A_BUTTON,D2
		BNE		MODE_SELECT_END

		AND.W		#UP+DOWN,D2
		BNE.S		MODE_SELECT_1

		RTS
MODE_SELECT_1:
		EOR.W		#1,LW_D0(A6)
		JSR		MODE_DISP(PC)
		SOUND		#S_SENTAKU
		RTS
MODE_SELECT_END:
		SOUND		#S_KETTEI
		MOVE.W		#30,WORD_TIMER(A6)
		END_NEXT	2,MS_END

MS_END:
		SUBQ.W		#1,WORD_TIMER(A6)
		BEQ		MS_END_END

		RTS
MS_END_END:
		TST.W		LW_D0(A6)
		BEQ		VS_START

;		story start

		MOVE.W		#00100000B,D0
		AND.B		PHASE+1(A5),D0
		OR.B		#10000110B,D0		card load
		MOVE.B		D0,PHASE+1(A5)
		RTS

VS_START:
		MOVE.W		#-1,STORY_PLAYER(A5)

		LEA.L		PLAYER_MODE(A5),A1
		MOVEQ.L		#00000011B,D4
		LEA.L		PLAYER1(A5),A6
		JSR		PLAYER_INIT_VS(PC)

		LEA.L		PLAYER2(A5),A6
		JSR		PLAYER_INIT_VS(PC)

		MOVE.W		#303H,HOME_CREDIT(A5)
		MOVE.W		#00100000B,D0
		AND.B		PHASE+1(A5),D0
		OR.B		#10010001B,D0		how to play
		MOVE.B		D0,PHASE+1(A5)
		MOVE.B		#00000011B,PHASE(A5)
		RTS



M_MODE_SELECT:
		FIX_AUTO	1
		FIX_ADRS	0,0
		FIX_SAME	020H,020H
		FIX_SAME	0E0H,020H
		FIX_SAME	0E0H,020H
		FIX_SAME	0E0H,020H
		FIX_SAME	0E0H,020H
		FIX_SAME	0E0H,020H
		FIX_SAME	060H,020H
		FIX_SAME	020H,020H

		FIX_FORMAT.B	CODE,0FFH
		FIX_AUTO	20H
		FIX_ADRS	15,8
		FIX_DATA_ADRS	GAME_MODE_MESS
		FIX_ADRS	17,11
		FIX_DATA_CONT
		FIX_NEXT	0,2
		FIX_DATA_CONT
		FIX_NEXT	0,5
		FIX_DATA_CONT
M_MS_PAR:
		FIX_FORMAT.B	CODE,0FFH
		FIX_AUTO	1
		FIX_ADRS	14,11
		FIX_TABLE_SING	A6,LW_D0,M_MS_TBL
		FIX_DIRECT_DATA

		FIX_END

M_MS_TBL:
		WORD_TBL	M_MS0
		WORD_TBL	M_MS1
M_MS0:
		DC.B		'>  ',0FFH
M_MS1:
		DC.B		'  >',0FFH

GAME_MODE_MESS:
		DC.B		'GAME MODE',0FFH
		DC.B		'1P vs 2P',0FFH
		DC.B		'STORY',0FFH
		DC.B		'PUSH A BUTTON',0FFH

		EVEN


;
;
;	    *** player select ***
;
;



INIT_STORY_SELECT:
		MOVE.W		#S_PLAYER,D0
		JSR.S		SET_BGM

		JSR		SELECT_1st(PC)

		MESS_ON
		MOVE.L		#M_FIX_CLEAR,(A0)+
		MESS_OFF

		LEA.L		MLWORK1(A5),A6
		STEP_SAVE	0,STORY_SELECT_0
		AND.B		#01111111B,PHASE+1(A5)
		RTS


STORY_SELECT:
		AND.B		#11011111B,START_FLAG2(A5)
		LEA.L		MLWORK1(A5),A6
		EASY_START

STORY_SELECT_0:
		PAL_WAIT	0CFH

		MOVE.W		#000FH,COLOR_BUFFER+1FFEH(A5)
		MOVE.W		#BASE_COLOR,COLOR_BUFFER+20H*0FFH(A5)
		LEA.L		COLOR_BUFFER+20H*0A0H(A5),A0
		MOVE.W		#8000H+FADE_OUT+CC_SPEED3,D0
		MOVE.W		#30H-1,D7
SS0_LOOP:
		MOVE.W		D0,(A0)
		LEA.L		20H(A0),A0
		DBRA		D7,SS0_LOOP

		MOVE.B		#1,COLOR_STATE(A5)
		END_NEXT	1,STORY_SELECT_1

STORY_SELECT_1:
		CMP.B		#80H,COLOR_BUFFER+20H*0CFH(A5)
		NEXT_CHECK	BNE,2,STORY_SELECT_2

		CLR.B		COLOR_STATE(A5)
		MOVE.W		#0A00H,WORD_TIMER(A6)
		CLR.W		SELC_MODE(A5)
		PCHILD		WORK_N0,P_EASY,C_SEL_PLAYER,160,54H,0,0
		PCHILD		WORK_N1,P_EASY,C_SEL_CURSOR,156,90,4,0
		LEA.L		(A0),A3
		PCHILD		WORK_N1,P_EASY,C_SEL_NAME,50H,58H,2,0
		LEA.L		(A0),A2
		PCHILD		WORK_N1,P_EASY,C_SEL_DISP,50H,68H,1,0
		MOVE.B		WORK_No(A3),WORK_N1(A0)
		MOVE.B		WORK_No(A2),WORK_N0(A0)
		LEA.L		HERO1(A5),A4
		TST.W		STORY_PLAYER(A5)
		BEQ.S		ISS_1

		LEA.L		HERO2(A5),A4
		MOVE.W		#0F0H,X_POSITION(A2)
		MOVE.W		#0F0H,X_POSITION(A0)
		MOVE.B		#0,ACT_COUNT(A3)
		BSET.B		#ACTAT_FLIP,ACT_ATTR(A0)
ISS_1:
		MOVE.W		HERO_TYPE3(A4),D0
		CMP.W		#2,D0
		BCS.S		ISS_1_1

		MOVE.W		PLAYER_No+PLAYER_OFFSET(A4),D0
ISS_1_1:
		MOVE.B		D0,LW_D0(A6)
		JSR		SEL_CURSOR(PC)

		MOVE.W		#14H,D0
		JSR		MESS_SET(PC)

		RTS
STORY_SELECT_2:
		SEC_TIMER	WORD_TIMER
		BCS		STORY_SELECT_END

		MOVE.W		#15H,D0		timer
		JSR		MESS_SET(PC)

		JSR.S		ACTIVE_TRIGER

		BTST.L		#B_A_BUTTON,D2
		BNE		STORY_SELECT_END

		MOVEQ.L		#0,D0
		MOVE.B		LW_D0(A6),D0
		AND.B		SSEL_EI(PC,D0.W),D2
		BEQ.S		SS_21

		EOR.B		#1,LW_D0(A6)
		SUB_WORK	WORK_N1,A0,0
		MOVEQ.L		#0,D0
		MOVE.B		LW_D0(A6),D0
		JSR		SEL_CURSOR(PC)

		SOUND		#S_SENTAKU
SS_21:
		RTS
SSEL_EI:
		DC.B		RIGHT,LEFT


STORY_SELECT_END:
		SOUND		#S_KETTEI
		LEA.L		HERO1(A5),A0
		TST.W		STORY_PLAYER(A5)
		BEQ.S		SS_END_1

		LEA.L		HERO2(A5),A0
SS_END_1:
		MOVEQ.L		#0,D0
		MOVE.B		LW_D0(A6),D0
		MOVE.W		D0,HERO_TYPE(A0)
		MOVE.W		D0,HERO_TYPE2(A0)

		COLOR_COMMAND
		PALETTE		000H,00H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		080H,20H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		090H,21H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0D0H,25H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0F0H,00H,FADE_OUT+CC_SPEED3
		PALETTE		0FFH,00H,FADE_OUT+CC_SPEED3
		PALETTE_END

		STEP_SAVE	3,STORY_SELECT_3
STORY_SELECT_3:
		PAL_WAIT	0FFH

		COLOR_COMMAND
		PALETTE		0A0H,22H,PG_SET+FADE_COLOR
		PALETTE		0B0H,23H,PG_SET+FADE_COLOR
		PALETTE		0C0H,24H,PG_SET+FADE_COLOR
		PALETTE_END

		MOVE.B		#01110000B,D0
		AND.B		PHASE+1(A5),D0
		OR.B		#10000000B,D0		in game
		MOVE.B		D0,PHASE+1(A5)
		MOVE.W		#0,SUB_STEP(A5)
		RTS

SELECT_1st:
		JSR.S	PWORK_INIT
		JSR	LWORK_DEAD(PC)

		COLOR_COMMAND
		PALETTE		000H,00H,PG_SET+BASE_COLOR
		PALETTE		080H,20H,PG_SET+BASE_COLOR
		PALETTE		090H,21H,PG_SET+BASE_COLOR
		PALETTE		0A0H,22H,PG_SET+BASE_COLOR
		PALETTE		0B0H,23H,PG_SET+BASE_COLOR
		PALETTE		0C0H,24H,PG_SET+BASE_COLOR
		PALETTE		0D0H,25H,PG_SET+BASE_COLOR
		PALETTE		0F0H,27H,PG_SET+BASE_COLOR
		PALETTE_END

		OBJ_MAP		DEMO_OBJ_MAP
		CLR.L		WINDOW_X(A5)
		CLR.L		WINDOW_Y(A5)
		RTS


INIT_TO_VS:
		SOUND		#S_RESET
		SOUND		#S_WAIT2
		SOUND		#S_WAIT2
		SOUND		#S_ALL_EI
		MOVE.W		#0,BGM_CODE(A5)
		LEA.L		MLWORK1(A5),A6
		MOVE.W		#2,FLAME_COUNT(A5)
		MOVE.W		#3,FLAME_END(A5)
		MOVE.W		#0,FLAME_TYPE(A5)
		MOVE.W		#7000H+20H*3+15,FLAME_POS(A5)
		JSR.S		FLAME_WRITED
		MOVE.W		#144*3,D0
		JSR.S		LANG_SET

		AND.B		#7FH,PHASE+1(A5)
		MOVE.B		#1,LP_MAIN_RUN(A5)
		MOVE.W		#60,WORD_TIMER(A6)
		END_NEXT	1,TO_VS_1

TO_VS_1:
		MOVE.B		#1,LP_MAIN_RUN(A5)
		SUBQ.W		#1,WORD_TIMER(A6)
		BNE.S		TO_VS_2

		MOVE.W		#1,SUB_STEP(A5)
		OR.B		#80H,PHASE+1(A5)
TO_VS_2:
		RTS



INIT_VS_SELECT:
		BTST.B		#5,PHASE+1(A5)
		BNE.S		IVSL_00

		TST.W		SUB_STEP(A5)
		BEQ		INIT_TO_VS
IVSL_00:
		CLR.W		COLOR_BUFFER+20H*00H(A5)
		CLR.W		COLOR_BUFFER+20H*10H(A5)
		CLR.W		COLOR_BUFFER+20H*20H(A5)
		CLR.W		COLOR_BUFFER+20H*30H(A5)
		CLR.W		COLOR_BUFFER+20H*40H(A5)
		CLR.W		COLOR_BUFFER+20H*50H(A5)
		CLR.W		COLOR_BUFFER+20H*60H(A5)
		CLR.W		COLOR_BUFFER+20H*70H(A5)
		CLR.W		COLOR_BUFFER+20H*80H(A5)
		CLR.W		COLOR_BUFFER+20H*90H(A5)
		CLR.W		COLOR_BUFFER+20H*0A0H(A5)
		CLR.W		COLOR_BUFFER+20H*0B0H(A5)
		CLR.W		COLOR_BUFFER+20H*0C0H(A5)
		CLR.W		COLOR_BUFFER+20H*0D0H(A5)
		CLR.W		COLOR_BUFFER+20H*0E0H(A5)
		CLR.W		COLOR_BUFFER+20H*0F0H(A5)

		MOVE.W		#S_PLAYER,D0
		JSR.S		SET_BGM

		JSR		SELECT_1st(PC)

		LEA.L		MLWORK1(A5),A6
		STEP_SAVE	1,VS_SELECT_0

		MOVE.W		#0,LW_D0(A6)
		MOVE.W		#0,LW_D1(A6)
		MOVE.W		#0A00H,WORD_TIMER(A6)
		PCHILD		WORK_N0,P_EASY,C_SEL_PLAYER,160,54H,0,0
		BSR		SELC_MODE_SET

		PCHILD		WORK_N1,P_EASY,C_SEL_CURSOR,156,90,5,0
		LEA.L		(A0),A3
		PCHILD		WORK_N1,P_EASY,C_SEL_NAME,50H,58H,2,0
		LEA.L		(A0),A2
		PCHILD		WORK_N1,P_EASY,C_SEL_DISP,50H,68H,1,0
		MOVE.B		WORK_No(A3),WORK_N1(A0)
		MOVE.B		WORK_No(A2),WORK_N0(A0)
		MOVE.W		HERO1+HERO_TYPE(A5),D0
		MOVE.B		D0,LW_D0(A6)
		JSR		SEL_CURSOR(PC)

		PCHILD		WORK_N2,P_EASY,C_SEL_CURSOR,156,90,4,0
		LEA.L		(A0),A3
		MOVE.B		#0,ACT_COUNT(A3)
		PCHILD		WORK_N2,P_EASY,C_SEL_NAME,0F0H,58H,2,0
		LEA.L		(A0),A2
		PCHILD		WORK_N2,P_EASY,C_SEL_DISP,0F0H,68H,1,0
		BSET.B		#ACTAT_FLIP,ACT_ATTR(A0)
		MOVE.B		WORK_No(A3),WORK_N1(A0)
		MOVE.B		WORK_No(A2),WORK_N0(A0)
		MOVE.W		HERO2+HERO_TYPE(A5),D0
		MOVE.B		D0,LW_D1(A6)
		JSR		SEL_CURSOR(PC)

		MESS_ON
		MOVE.L		#M_FIX_CLEAR,(A0)+
		MOVE.W		#16H,D0
		JSR		MESS_SET_INNER(PC)
		MESS_OFF

		AND.B		#01111111B,PHASE+1(A5)

		RTS

SELC_MODE_SET:
		CLR.W		SELC_MODE(A5)
		MOVE.W		STORY_STAGE(A5),D0
		SUB.W		#9,D0
		BMI.S		SELC_NML

		MOVE.W		D0,SELC_MODE(A5)
		SUBQ.W		#1,D0
		MOVE.B		D0,ACT_COUNT(A0)
SELC_NML:
		RTS


SEL_CURSOR_STOP:
		MOVEP.W		WORK_N1(A0),D2
		CLR.B		D2
		MOVE.B		ACT_FLAG(A5,D2.W),ACT_COUNT(A5,D2.W)
		MOVE.B		#-1,ACT_TIMER(A5,D2.W)
		RTS

SEL_CURSOR:
		MOVEP.W		WORK_N0(A0),D1
		CLR.B		D1
		MOVEP.W		WORK_N1(A0),D2
		CLR.B		D2
		MOVE.W		D0,D3
		SUBQ.W		#1,D0
		MOVE.B		D0,ACT_COUNT(A0)
		MOVE.B		#1,ACT_DEC(A0)
		MOVE.B		D0,ACT_COUNT(A5,D1.W)
		MOVE.B		#1,ACT_DEC(A5,D1.W)
		ADD.W		D3,D3
		ADD.W		D3,D3
		MOVE.W		SEL_CU_POS(PC,D3.W),X_POSITION(A5,D2.W)
		MOVE.W		SEL_CU_POS+2(PC,D3.W),Y_POSITION(A5,D2.W)
		RTS

SEL_BX		EQU	102
SEL_BY		EQU	90

SEL_CU_POS:
		DC.W	SEL_BX+28*1,SEL_BY-28*0		H1
		DC.W	SEL_BX+28*2,SEL_BY-28*0		H2
		DC.W	SEL_BX+28*0,SEL_BY-28*0		E1
		DC.W	SEL_BX+28*3,SEL_BY-28*0		E2
		DC.W	SEL_BX+28*0,SEL_BY-28*1		E3
		DC.W	SEL_BX+28*1,SEL_BY-28*1		E4
		DC.W	SEL_BX+28*2,SEL_BY-28*1		E5
		DC.W	SEL_BX+28*3,SEL_BY-28*1		E6
		DC.W	SEL_BX-28*1,SEL_BY-28*1		E7
		DC.W	SEL_BX+28*4,SEL_BY-28*1		E8


VS_SELECT:
		LEA.L		MLWORK1(A5),A6
		EASY_START

VS_SELECT_0:
		MOVE.W		#000FH,COLOR_BUFFER+1FFEH(A5)
		MOVE.W		#BASE_COLOR,COLOR_BUFFER+20H*0FFH(A5)
		MOVE.B		#1,COLOR_STATE(A5)
		END_NEXT	1,VS_SELECT_01
VS_SELECT_01:
		SEC_TIMER	WORD_TIMER
		BCS		VS_SELECT_END

		MOVE.W		#15H,D0		timer
		JSR		MESS_SET(PC)

		SUB_WORK	WORK_N1,A0,0
		MOVE.B		INPUT_1+3(A5),D2
		LEA.L		LW_D0(A6),A1
		BSR		VS_SELECT_MOVE

		SUB_WORK	WORK_N2,A0,0
		MOVE.B		INPUT_2+3(A5),D2
		LEA.L		LW_D1(A6),A1
		BSR		VS_SELECT_MOVE

		MOVEQ.L		#0,D0
		MOVEQ.L		#0,D1
		MOVE.B		LW_D0(A6),D0
		CMP.B		LW_D1(A6),D0
		BNE.S		VS_SELECT_101

		BSR		IROGAE
VS_SELECT_101:
		CMP.B		PALETTE_ADD(A0),D1
		BEQ.S		VS_SELECT_1

		MOVE.B		D1,PALETTE_ADD(A0)
		BSET.B		#ACTAT_SET,ACT_ATTR(A0)
VS_SELECT_1:
		MOVE.B		LW_D0+1(A6),D0
		AND.B		LW_D1+1(A6),D0
		BNE		VS_SELECT_END
		RTS
IROGAE:
		MOVE.B		IRO_ADD(PC,D0.W),D1
		RTS
IRO_ADD:
;				1 2 1 2 3 4 5 6 7   8
		DC.B		1,1,1,1,1,1,1,1,29H,40H

VS_SELECT_END:
		SOUND		#S_KETTEI
		MOVEQ.L		#0,D0
		MOVE.B		LW_D0(A6),D0
		MOVE.W		D0,HERO1+HERO_TYPE(A5)
		MOVEQ.L		#0,D0
		MOVE.B		LW_D1(A6),D0
		MOVE.W		D0,HERO2+HERO_TYPE(A5)

		COLOR_COMMAND
		PALETTE		000H,00H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		080H,20H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		090H,21H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0A0H,22H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0B0H,23H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0C0H,24H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0D0H,25H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0F0H,00H,FADE_OUT+CC_SPEED3
		PALETTE		0FFH,00H,FADE_OUT+CC_SPEED3
		PALETTE_END

		STEP_SAVE	2,VS_SELECT_2
VS_SELECT_2:
		PAL_WAIT	0C0H

		SUB_WORK	WORK_N0,A0,0
		CLR.W		TYPE(A0)

		MOVE.W		#0C00H,COLOR_BUFFER+1FFEH(A5)
		COLOR_COMMAND
		PALETTE		000H,00H,PG_SET+FADE_IN+CC_SPEED3
		PALETTE		080H,20H,PG_SET+FADE_IN+CC_SPEED3
		PALETTE		090H,21H,PG_SET+FADE_IN+CC_SPEED3
		PALETTE		0A0H,22H,PG_SET+FADE_IN+CC_SPEED3
		PALETTE		0B0H,23H,PG_SET+FADE_IN+CC_SPEED3
		PALETTE		0C0H,24H,PG_SET+FADE_IN+CC_SPEED3
		PALETTE		0D0H,25H,PG_SET+FADE_IN+CC_SPEED3
		PALETTE		0F0H,00H,FADE_IN+CC_SPEED3
		PALETTE		0FFH,00H,FADE_IN+CC_SPEED3
		PALETTE_END

		MESS_ON
		MOVE.L		#M_FIX_CLEAR,(A0)+
		MESS_OFF

		SUB_WORK	WORK_N1,A0,0
		MOVE.W		#-40H,X_POSITION(A0)
		MOVEP.W		WORK_N0(A0),D0
		CLR.B		D0
		MOVE.W		#-40H,X_POSITION(A5,D0.W)
		MOVEP.W		WORK_N1(A0),D0
		CLR.B		D0
		CLR.W		TYPE(A5,D0.W)
		SUB_WORK	WORK_N2,A0,0
		MOVE.W		#180H,X_POSITION(A0)
		MOVEP.W		WORK_N0(A0),D0
		CLR.B		D0
		MOVE.W		#180H,X_POSITION(A5,D0.W)
		MOVEP.W		WORK_N1(A0),D0
		CLR.B		D0
		CLR.W		TYPE(A5,D0.W)

		MOVE.W		#S_TAISEN,D0
		JSR.S		SET_BGM

		STEP_SAVE	3,VS_SELECT_3
VS_SELECT_3:
		BSR		VS_SEL_CUT
		PAL_WAIT	0C0H

		MOVE.W		HERO1+HERO_TYPE(A5),D0
		MOVEQ.L		#0,D1
		BSR		VS_SOUND

		STEP_SAVE	4,VS_SELECT_4
VS_SELECT_4:
		BSR		VS_SEL_CUT
		SUB_WORK	WORK_N1,A0,0
		ADD.W		#10H,X_POSITION(A0)
		CMP.W		#50H,X_POSITION(A0)
		NEXT_CHECK	BEQ,43,VS_SELECT_43

		RTS
VS_SELECT_43:
		BSR		VS_SEL_CUT
		SUB_WORK	WORK_N1,A0,0
		MOVEP.W		WORK_N0(A0),D0
		CLR.B		D0
		ADD.W		#10H,X_POSITION(A5,D0.W)
		CMP.W		#50H,X_POSITION(A5,D0.W)
		NEXT_CHECK	BEQ,41,VS_SELECT_41

		MOVE.W		#60,WORD_TIMER(A6)
		RTS
VS_SELECT_41:
		BSR		VS_SEL_CUT
		SUBQ.W		#1,WORD_TIMER(A6)
		NEXT_CHECK	BEQ,42,VS_SELECT_42

		SOUND		#S_VS
		PCHILD		WORK_N0,P_EASY,C_SEL_VS,160,98H,10,0
		MOVE.W		#0F0FH,BIG_X(A0)

		MOVE.W		#60,WORD_TIMER(A6)
		RTS
VS_SELECT_42:
		BSR		VS_SEL_CUT
		SUB_WORK	WORK_N0,A0,0
		CMP.B		#0FFH,BIG_X(A0)
		BEQ.S		VS_SELECT_44

		ADD.B		#10H,BIG_X(A0)
		ADD.B		#10H,BIG_Y(A0)
VS_SELECT_44:
		SUBQ.W		#1,WORD_TIMER(A6)
		NEXT_CHECK	BEQ,5,VS_SELECT_5

		MOVE.W		HERO2+HERO_TYPE(A5),D0
		MOVEQ.L		#1,D1
		BSR		VS_SOUND

		RTS
VS_SELECT_5:
		BSR		VS_SEL_CUT
		SUB_WORK	WORK_N2,A0,0
		ADD.W		#-10H,X_POSITION(A0)
		CMP.W		#0F0H,X_POSITION(A0)
		NEXT_CHECK	BEQ,6,VS_SELECT_6

		RTS
VS_SELECT_6:
		BSR		VS_SEL_CUT
		SUB_WORK	WORK_N2,A0,0
		MOVEP.W		WORK_N0(A0),D0
		CLR.B		D0
		ADD.W		#-10H,X_POSITION(A5,D0.W)
		CMP.W		#0F0H,X_POSITION(A5,D0.W)
		NEXT_CHECK	BEQ,8,VS_SELECT_8

		MOVE.W		#300H,WORD_TIMER(A6)
VS_SELECT_8:
		BSR		VS_SEL_CUT
		SEC_TIMER	WORD_TIMER
		NEXT_CHECK	BCS,9,VS_SELECT_9
;SET_VS_SELECT_9:
		COLOR_COMMAND
		PALETTE		000H,00H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		080H,20H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		090H,21H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0A0H,22H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0B0H,23H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0C0H,24H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0D0H,25H,PG_SET+FADE_OUT+CC_SPEED3
		PALETTE		0F0H,00H,FADE_OUT+CC_SPEED3
		PALETTE		0FFH,00H,FADE_OUT+CC_SPEED3
		PALETTE_END
VS_SELECT_9:
		PAL_WAIT	0C0H

		MOVE.B		#01110000B,D0
		AND.B		PHASE+1(A5),D0
		OR.B		#10000000B,D0		in game
		MOVE.B		D0,PHASE+1(A5)
		MOVE.W		#0,SUB_STEP(A5)
		RTS

VS_SEL_CUT:
		JSR.S		ACTIVE_TRIGER

		AND.B		#11110000B,D2
		BEQ.S		VS_SEL_CUT_1

		ADDQ.L		#4,SP
		JMP		SET_VS_SELECT_9
VS_SEL_CUT_1:
		RTS


VS_SOUND:
		ADD.W		D0,D0
		ADD.W		D1,D0
		ADD.W		D0,D0
		MOVE.W		VS_NAME_SOUND(PC,D0.W),D0
		JSR.S		SET_SOUND
		RTS
VS_NAME_SOUND:
		DC.W		S_RYO1,S_RYO2
		DC.W		S_ROBA1,S_ROBA2
		DC.W		S_TODO1,S_TODO2
		DC.W		S_JACK1,S_JACK2
		DC.W		S_LEE1,S_LEE2
		DC.W		S_KING1,S_KING2
		DC.W		S_MIC1,S_MIC2
		DC.W		S_JOHN1,S_JOHN2
		DC.W		S_BIG2,S_BIG2
		DC.W		S_OYAJI2,S_OYAJI2

VS_SELECT_MOVE:
		TST.B		1(A1)
		BNE		VS_SELECT_MOVE_1

		BTST.L		#B_A_BUTTON,D2
		BNE		VS_SELECT_MOVE_END

		AND.W		#00001111B,D2
		BEQ		VS_SELECT_MOVE_1

		MOVEQ.L		#0,D0
		MOVE.B		(A1),D0
		LSL.W		#4,D0
		OR.W		D2,D0
		MOVE.W		SELC_MODE(A5),D7
		ADD.W		D7,D7
		MOVE.W		SEL_CU_ADD(PC,D7.W),D7
		ADD.W		D0,D7
		MOVE.B		VS_SEL_CU_DATA(PC,D7.W),D0
		MOVE.B		D0,(A1)
		JSR		SEL_CURSOR(PC)
		SOUND		#S_SENTAKU
VS_SELECT_MOVE_1:
		RTS
VS_SELECT_MOVE_END:
		MOVE.B		#1,1(A1)
		SOUND		#S_KETTEI
		JSR		SEL_CURSOR_STOP(PC)
		RTS

SEL_CU_ADD:
		DC.W		0,16*10,16*20

VS_SEL_CU_DATA:
;
;		  2 0 1 3
;		8 4 5 6 7 9

		DC.B		0,0,5,0,2,2,4,0,1,1,6,0,0,0,0,0		0
		DC.B		1,1,6,1,0,0,5,1,3,3,7,1,1,1,1,1		1
		DC.B		2,2,4,2,2,2,4,2,0,0,5,2,2,2,2,2		2
		DC.B		3,3,7,3,1,1,6,3,3,3,7,3,3,3,3,3		3
		DC.B		4,2,4,4,4,2,4,4,5,0,5,4,4,4,4,4		4
		DC.B		5,0,5,5,4,2,4,5,6,1,6,5,5,5,5,5		5
		DC.B		6,1,6,6,5,0,5,6,7,3,7,6,6,6,6,6		6
		DC.B		7,3,7,7,6,1,6,7,7,3,7,7,7,7,7,7		7
		DC.B		8,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4		8
		DC.B		9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7		9

		DC.B		0,0,5,0,2,2,4,0,1,1,6,0,0,0,0,0		0
		DC.B		1,1,6,1,0,0,5,1,3,3,7,1,1,1,1,1		1
		DC.B		2,2,4,2,2,2,4,2,0,0,5,2,2,2,2,2		2
		DC.B		3,3,7,3,1,1,6,3,3,3,7,3,3,3,3,3		3
		DC.B		4,2,4,4,8,2,4,4,5,0,5,4,4,4,4,4		4
		DC.B		5,0,5,5,4,2,4,5,6,1,6,5,5,5,5,5		5
		DC.B		6,1,6,6,5,0,5,6,7,3,7,6,6,6,6,6		6
		DC.B		7,3,7,7,6,1,6,7,7,3,7,7,7,7,7,7		7
		DC.B		8,8,8,8,8,8,8,8,4,8,8,8,8,8,8,8		8
		DC.B		9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7		9

		DC.B		0,0,5,0,2,2,4,0,1,1,6,0,0,0,0,0		0
		DC.B		1,1,6,1,0,0,5,1,3,3,7,1,1,1,1,1		1
		DC.B		2,2,4,2,2,2,4,2,0,0,5,2,2,2,2,2		2
		DC.B		3,3,7,3,1,1,6,3,3,3,7,3,3,3,3,3		3
		DC.B		4,2,4,4,8,2,4,4,5,0,5,4,4,4,4,4		4
		DC.B		5,0,5,5,4,2,4,5,6,1,6,5,5,5,5,5		5
		DC.B		6,1,6,6,5,0,5,6,7,3,7,6,6,6,6,6		6
		DC.B		7,3,7,7,6,1,6,7,9,3,7,7,7,7,7,7		7
		DC.B		8,8,8,8,8,8,8,8,4,8,8,8,8,8,8,8		8
		DC.B		9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9		9













		INCLUDE	WORK.INC




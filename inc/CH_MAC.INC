
;	    *** chara data macro ***



CHT2		MACRO	HIT,FLAG,TIME,NAME
		DC.B	TIME,FLAG
		DC.W	(NAME-*)+HIT*800H
		ENDM

CNAME		MACRO	NAME
		XDEF	\1
\1:
		ENDM


HIT		MACRO	X1,Y1,X2,Y2
		IFEQ	NARG-3
		DC.B	(X1)/2,(X2)/2,(Y1)/2,(Y1)/2
		ELSEC
		DC.B	(X1)/2,(X2)/2,(Y1)/2,(Y2)/2
		ENDC
		ENDM


CEND		MACRO
		DC.W	8000H		command 0*4
		ENDM

CHGSUB		MACRO	No
		DC.W	8004H+No	command 1*4
		ENDM

RET_MASTER	MACRO
		DC.W	8008H		command 2*4
		ENDM

BLINK		MACRO
		DC.W	800CH		command 3*4
		ENDM

SUB0		MACRO	MAX
		DC.W	8010H+MAX-1	command 4*4
		ENDM

SUB1		MACRO	MAX
		DC.W	8014H+MAX-1	command 5*4
		ENDM

SUB2		MACRO	MAX
		DC.W	8018H+MAX-1	command 6*4
		ENDM

SUB3		MACRO	MAX
		DC.W	801CH+MAX-1	command 7*4
		ENDM

GOSUB		MACRO	ADRS
		DC.W	8020H		command 8*4
		DC.W	ADRS-2-*
		ENDM

SUBSUB		MACRO	No,ADRS
		DC.W	8024H+No	command 9*4
		DC.W	ADRS-2-*
		ENDM

RET		MACRO
		DC.W	8028H		command A*4
		ENDM

SUBRET		MACRO
		DC.W	802CH		command B*4
		ENDM

SKIP		MACRO	No,DATA
;					command C,10*4
;					skip data for main prog
		IFC	\0,W
		DC.W	8030H+No*100H,DATA
		ELSEC
		DC.W	8034H+No*100H
		DC.L	DATA
		ENDC
		ENDM


SUB_OFF		MACRO	WORK,No,X,Y
		DC.W	8038H+WORK
CN		SET	(0\2)*4
CX		SET	X
CY		SET	Y
		IFLT	CX
CN		SET	CN+1
CX		SET	-CX
		ENDC
		IFLT	CY
CN		SET	CN+2
CY		SET	-CY
		ENDC
		DC.W	CN
		DC.B	CY,CX
		ENDM

PAL_OFF		MACRO
		DC.W	803CH
		ENDM

SUBP0		MACRO	MAX,ADD
		DC.W	8040H+MAX*100H,ADD
		ENDM
SUBP1		MACRO	MAX,ADD
		DC.W	8044H+MAX*100H,ADD
		ENDM
SUBP2		MACRO	MAX,ADD
		DC.W	8048H+MAX*100H,ADD
		ENDM
SUBP3		MACRO	MAX,ADD
		DC.W	804CH+MAX*100H,ADD
		ENDM



SOUND		MACRO	CODE
		DC.W	0C000H,CODE
		ENDM

SPHERO		MACRO	CODE
		DC.W	0C004H,CODE
		ENDM

FLIP		MACRO
		DC.W	0C008H
		ENDM

ACTAT		MACRO	AND,OR
		DC.W	0C00CH
		DC.B	AND,OR
		ENDM

BIG		MACRO	X,Y
		DC.W	0C010H
		DC.B	X,Y
		ENDM

USER		MACRO	No
		DC.W	0C014H+(No)*100H
		ENDM

LOOP		MACRO	COUNT
		DC.W	0C018H+(COUNT-1)*100H
		ENDM



;		No => tool_edit edit_no(character_no)
;		X  => that_character x_adrs_center_point
;			neg((sprite_x_size*16/2))
;		Y  => that_character y_adrs_center_point

CODE		MACRO	No,X,Y
CN		SET	(0\1)*4
CX		SET	X
CY		SET	Y
		IFLT	CX
CN		SET	CN+1
CX		SET	-CX
		ENDC
		IFLT	CY
CN		SET	CN+2
CY		SET	-CY
		ENDC
		DC.W	CN
		DC.B	CY,CX
		ENDM


;	    *** for [044 ART OF FIGHT] ***


FACE		MACRO	No1,No2,No3,X,Y
		SUB1	3
CN		SET	0
CX		SET	X
CY		SET	Y
		IFLT	CX
CN		SET	CN+1
CX		SET	-CX
		ENDC
		IFLT	CY
CN		SET	CN+2
CY		SET	-CY
		ENDC
		DC.W	CN+(0\1)*4
		DC.B	CY,CX
		DC.W	CN+(0\2)*4
		DC.B	CY,CX
		DC.W	CN+(0\3)*4
		DC.B	CY,CX
		ENDM


UHIT		MACRO	X1,Y1,X2,Y2
		DC.W	0C014H
		DC.B	(X1)/2,(X2)/2,(Y1)/2,(Y2)/2
		ENDM

UHIT2		MACRO	X1,Y1,X2,Y2
		DC.W	0CE14H
		DC.B	(X1)/2,(X2)/2,(Y1)/2,(Y2)/2
		ENDM

UHITD		MACRO	X1,Y1,X2,Y2
		DC.W	0C214H
		DC.B	(X1)/2,(X2)/2,(Y1)/2,(Y2)/2
		ENDM
UHITD2		MACRO	X1,Y1,X2,Y2
		DC.B	(X1)/2,(X2)/2,(Y1)/2,(Y2)/2
		ENDM


UHIT_OFF	MACRO
		DC.W	0C014H+100H
		ENDM

JUMP		MACRO	TYPE,VZ,AZ,VX,AX
		DC.W	0C014H+400H+100H*TYPE
		DC.L	VZ
		DC.W	AZ,VX,AX
		ENDM

JUMP3		MACRO	VZ,AZ,VX,AX,VZ2,AZ2,VX2,AX2
		DC.W	0C014H+400H+300H
		DC.L	VZ
		DC.W	AZ,VX,AX
		DC.L	VZ2
		DC.W	AZ2,VX2,AX2
		ENDM

JUMP4		MACRO	VX
		DC.W	0C014H+1100H,VX
		ENDM
JUMP_OFF	MACRO
		DC.W	0C014H+1200H
		ENDM


;type	0	lever direction (normal jump)
;type	1	chara direction (triangle jump,damage jump,attack jump)
;type	2
;type	3



NEXT		MACRO	NEXT_CODE
		DC.W	0C014H+800H
		DC.W	C_\1
		ENDM
NEXTS		MACRO	NEXT_CODE
		DC.W	0C014H+800H
		DC.W	\1
		ENDM

ADC		MACRO	COMMAND,VX,VY
		DC.W	0C014H+900H
		DC.W	COMMAND,VX,VY
		ENDM


KAGE		MACRO	No
		DC.W	0C014H+0B00H
		DC.W	No-2
		ENDM

BLOD		MACRO	X,Y,TYPE
		DC.W	0C014H+0C00H,X,Y,C_\3
		ENDM

BLODS		MACRO	X,Y,TYPE
		DC.W	0C014H+0C00H,X,Y,TYPE
		ENDM


MUNE		MACRO	No,X,Y
		ENDM
;		DC.W	803AH
;CN		SET	(0\1)*4
;CX		SET	X
;CY		SET	Y
;		IFLT	CX
;CN		SET	CN+1
;CX		SET	-CX
;		ENDC
;		IFLT	CY
;CN		SET	CN+2
;CY		SET	-CY
;		ENDC
;		DC.W	CN
;		DC.B	CY,CX
;		ENDM

EFFECT		MACRO	C1,C2
		DC.W	0CF14H,C1,C2
		ENDM

LANG_SOUND	MACRO	C1,C2
		DC.W	0C314H,C1,C2
		ENDM

DEAD_SOUND	MACRO	C1,C2
		DC.W	0D014H,C1,C2
		ENDM

RET100		MACRO	No
		DC.W	0C014H+1300H,No
		ENDM
RET100_OFF	MACRO
		DC.W	0C014H+1400H
		ENDM
HIT_LOCK_OFF	MACRO
		DC.W	0C014H+1500H
		ENDM
GETA		MACRO	X,Y,TYPE
		DC.W	0C014H+1600H,X,Y,TYPE
		ENDM

MEGANE		MACRO	X,Y,TYPE
		DC.W	0C014H+1700H,X,Y,TYPE
		ENDM



